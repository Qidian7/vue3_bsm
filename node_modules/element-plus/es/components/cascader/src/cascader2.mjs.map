{"version":3,"file":"cascader2.mjs","sources":["../../../../../../packages/components/cascader/src/cascader.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"tooltipRef\"\n    :visible=\"popperVisible\"\n    :teleported=\"teleported\"\n    :popper-class=\"[nsCascader.e('dropdown'), popperClass]\"\n    :popper-options=\"popperOptions\"\n    :fallback-placements=\"[\n      'bottom-start',\n      'bottom',\n      'top-start',\n      'top',\n      'right',\n      'left',\n    ]\"\n    :stop-popper-mouse-event=\"false\"\n    :gpu-acceleration=\"false\"\n    placement=\"bottom-start\"\n    :transition=\"`${nsCascader.namespace.value}-zoom-in-top`\"\n    effect=\"light\"\n    pure\n    persistent\n    @hide=\"hideSuggestionPanel\"\n  >\n    <template #default>\n      <div\n        v-clickoutside:[cascaderPanelRef]=\"() => togglePopperVisible(false)\"\n        :class=\"cascaderKls\"\n        :style=\"cascaderStyle\"\n        @click=\"() => togglePopperVisible(readonly ? undefined : true)\"\n        @keydown=\"handleKeyDown\"\n        @mouseenter=\"inputHover = true\"\n        @mouseleave=\"inputHover = false\"\n      >\n        <el-input\n          ref=\"input\"\n          v-model=\"inputValue\"\n          :placeholder=\"currentPlaceholder\"\n          :readonly=\"readonly\"\n          :disabled=\"isDisabled\"\n          :validate-event=\"false\"\n          :size=\"realSize\"\n          :class=\"inputClass\"\n          :tabindex=\"multiple && filterable && !isDisabled ? -1 : undefined\"\n          @compositionstart=\"handleComposition\"\n          @compositionupdate=\"handleComposition\"\n          @compositionend=\"handleComposition\"\n          @focus=\"handleFocus\"\n          @blur=\"handleBlur\"\n          @input=\"handleInput\"\n        >\n          <template #suffix>\n            <el-icon\n              v-if=\"clearBtnVisible\"\n              key=\"clear\"\n              :class=\"[nsInput.e('icon'), 'icon-circle-close']\"\n              @click.stop=\"handleClear\"\n            >\n              <circle-close />\n            </el-icon>\n            <el-icon\n              v-else\n              key=\"arrow-down\"\n              :class=\"cascaderIconKls\"\n              @click.stop=\"togglePopperVisible()\"\n            >\n              <arrow-down />\n            </el-icon>\n          </template>\n        </el-input>\n\n        <div v-if=\"multiple\" ref=\"tagWrapper\" :class=\"nsCascader.e('tags')\">\n          <el-tag\n            v-for=\"tag in presentTags\"\n            :key=\"tag.key\"\n            :type=\"tagType\"\n            :size=\"tagSize\"\n            :hit=\"tag.hitState\"\n            :closable=\"tag.closable\"\n            disable-transitions\n            @close=\"deleteTag(tag)\"\n          >\n            <template v-if=\"tag.isCollapseTag === false\">\n              <span>{{ tag.text }}</span>\n            </template>\n            <template v-else>\n              <el-tooltip\n                :disabled=\"popperVisible || !collapseTagsTooltip\"\n                :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                placement=\"bottom\"\n                effect=\"light\"\n              >\n                <template #default>\n                  <span>{{ tag.text }}</span>\n                </template>\n                <template #content>\n                  <div :class=\"nsCascader.e('collapse-tags')\">\n                    <div\n                      v-for=\"(tag2, idx) in allPresentTags.slice(1)\"\n                      :key=\"idx\"\n                      :class=\"nsCascader.e('collapse-tag')\"\n                    >\n                      <el-tag\n                        :key=\"tag2.key\"\n                        class=\"in-tooltip\"\n                        :type=\"tagType\"\n                        :size=\"tagSize\"\n                        :hit=\"tag2.hitState\"\n                        :closable=\"tag2.closable\"\n                        disable-transitions\n                        @close=\"deleteTag(tag2)\"\n                      >\n                        <span>{{ tag2.text }}</span>\n                      </el-tag>\n                    </div>\n                  </div>\n                </template>\n              </el-tooltip>\n            </template>\n          </el-tag>\n          <input\n            v-if=\"filterable && !isDisabled\"\n            v-model=\"searchInputValue\"\n            type=\"text\"\n            :class=\"nsCascader.e('search-input')\"\n            :placeholder=\"presentText ? '' : inputPlaceholder\"\n            @input=\"(e) => handleInput(searchInputValue, e as KeyboardEvent)\"\n            @click.stop=\"togglePopperVisible(true)\"\n            @keydown.delete=\"handleDelete\"\n            @compositionstart=\"handleComposition\"\n            @compositionupdate=\"handleComposition\"\n            @compositionend=\"handleComposition\"\n            @focus=\"handleFocus\"\n            @blur=\"handleBlur\"\n          />\n        </div>\n      </div>\n    </template>\n\n    <template #content>\n      <el-cascader-panel\n        v-show=\"!filtering\"\n        ref=\"cascaderPanelRef\"\n        v-model=\"checkedValue\"\n        :options=\"options\"\n        :props=\"props.props\"\n        :border=\"false\"\n        :render-label=\"$slots.default\"\n        @expand-change=\"handleExpandChange\"\n        @close=\"$nextTick(() => togglePopperVisible(false))\"\n      />\n      <el-scrollbar\n        v-if=\"filterable\"\n        v-show=\"filtering\"\n        ref=\"suggestionPanel\"\n        tag=\"ul\"\n        :class=\"nsCascader.e('suggestion-panel')\"\n        :view-class=\"nsCascader.e('suggestion-list')\"\n        @keydown=\"handleSuggestionKeyDown\"\n      >\n        <template v-if=\"suggestions.length\">\n          <li\n            v-for=\"item in suggestions\"\n            :key=\"item.uid\"\n            :class=\"[\n              nsCascader.e('suggestion-item'),\n              nsCascader.is('checked', item.checked),\n            ]\"\n            :tabindex=\"-1\"\n            @click=\"handleSuggestionClick(item)\"\n          >\n            <span>{{ item.text }}</span>\n            <el-icon v-if=\"item.checked\">\n              <check />\n            </el-icon>\n          </li>\n        </template>\n        <slot v-else name=\"empty\">\n          <li :class=\"nsCascader.e('empty-text')\">\n            {{ t('el.cascader.noMatch') }}\n          </li>\n        </slot>\n      </el-scrollbar>\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, nextTick, onMounted, ref, useAttrs, watch } from 'vue'\nimport { isPromise } from '@vue/shared'\nimport { cloneDeep, debounce } from 'lodash-unified'\nimport { isClient, useCssVar, useResizeObserver } from '@vueuse/core'\nimport ElCascaderPanel from '@element-plus/components/cascader-panel'\nimport ElInput from '@element-plus/components/input'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { useFormItem, useFormSize } from '@element-plus/components/form'\nimport { ClickOutside as vClickoutside } from '@element-plus/directives'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { debugWarn, focusNode, getSibling, isKorean } from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  EVENT_CODE,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { ArrowDown, Check, CircleClose } from '@element-plus/icons-vue'\nimport { cascaderEmits, cascaderProps } from './cascader'\n\nimport type { Options } from '@element-plus/components/popper'\nimport type { ComputedRef, Ref, StyleValue } from 'vue'\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\nimport type { InputInstance } from '@element-plus/components/input'\nimport type { ScrollbarInstance } from '@element-plus/components/scrollbar'\nimport type {\n  CascaderNode,\n  CascaderPanelInstance,\n  CascaderValue,\n  Tag,\n} from '@element-plus/components/cascader-panel'\n\nconst popperOptions: Partial<Options> = {\n  modifiers: [\n    {\n      name: 'arrowPosition',\n      enabled: true,\n      phase: 'main',\n      fn: ({ state }) => {\n        const { modifiersData, placement } = state as any\n        if (['right', 'left', 'bottom', 'top'].includes(placement)) return\n        modifiersData.arrow.x = 35\n      },\n      requires: ['arrow'],\n    },\n  ],\n}\nconst COMPONENT_NAME = 'ElCascader'\n\ndefineOptions({\n  name: COMPONENT_NAME,\n})\n\nconst props = defineProps(cascaderProps)\nconst emit = defineEmits(cascaderEmits)\nconst attrs = useAttrs()\n\nlet inputInitialHeight = 0\nlet pressDeleteCount = 0\n\nconst nsCascader = useNamespace('cascader')\nconst nsInput = useNamespace('input')\n\nconst { t } = useLocale()\nconst { form, formItem } = useFormItem()\n\nconst tooltipRef: Ref<TooltipInstance | null> = ref(null)\nconst input: Ref<InputInstance | null> = ref(null)\nconst tagWrapper = ref(null)\nconst cascaderPanelRef: Ref<CascaderPanelInstance | null> = ref(null)\nconst suggestionPanel: Ref<ScrollbarInstance | null> = ref(null)\nconst popperVisible = ref(false)\nconst inputHover = ref(false)\nconst filtering = ref(false)\nconst filterFocus = ref(false)\nconst inputValue = ref('')\nconst searchInputValue = ref('')\nconst presentTags: Ref<Tag[]> = ref([])\nconst allPresentTags: Ref<Tag[]> = ref([])\nconst suggestions: Ref<CascaderNode[]> = ref([])\nconst isOnComposition = ref(false)\n\nconst cascaderStyle = computed<StyleValue>(() => {\n  return attrs.style as StyleValue\n})\n\nconst isDisabled = computed(() => props.disabled || form?.disabled)\nconst inputPlaceholder = computed(\n  () => props.placeholder || t('el.cascader.placeholder')\n)\nconst currentPlaceholder = computed(() =>\n  searchInputValue.value ||\n  presentTags.value.length > 0 ||\n  isOnComposition.value\n    ? ''\n    : inputPlaceholder.value\n)\nconst realSize = useFormSize()\nconst tagSize = computed(() =>\n  ['small'].includes(realSize.value) ? 'small' : 'default'\n)\nconst multiple = computed(() => !!props.props.multiple)\nconst readonly = computed(() => !props.filterable || multiple.value)\nconst searchKeyword = computed(() =>\n  multiple.value ? searchInputValue.value : inputValue.value\n)\nconst checkedNodes: ComputedRef<CascaderNode[]> = computed(\n  () => cascaderPanelRef.value?.checkedNodes || []\n)\nconst clearBtnVisible = computed(() => {\n  if (\n    !props.clearable ||\n    isDisabled.value ||\n    filtering.value ||\n    !inputHover.value\n  )\n    return false\n\n  return !!checkedNodes.value.length\n})\nconst presentText = computed(() => {\n  const { showAllLevels, separator } = props\n  const nodes = checkedNodes.value\n  return nodes.length\n    ? multiple.value\n      ? ''\n      : nodes[0].calcText(showAllLevels, separator)\n    : ''\n})\n\nconst checkedValue = computed<CascaderValue>({\n  get() {\n    return cloneDeep(props.modelValue) as CascaderValue\n  },\n  set(val) {\n    emit(UPDATE_MODEL_EVENT, val)\n    emit(CHANGE_EVENT, val)\n    if (props.validateEvent) {\n      formItem?.validate('change').catch((err) => debugWarn(err))\n    }\n  },\n})\n\nconst cascaderKls = computed(() => {\n  return [\n    nsCascader.b(),\n    nsCascader.m(realSize.value),\n    nsCascader.is('disabled', isDisabled.value),\n    attrs.class,\n  ]\n})\n\nconst cascaderIconKls = computed(() => {\n  return [\n    nsInput.e('icon'),\n    'icon-arrow-down',\n    nsCascader.is('reverse', popperVisible.value),\n  ]\n})\n\nconst inputClass = computed(() => {\n  return nsCascader.is('focus', popperVisible.value || filterFocus.value)\n})\n\nconst togglePopperVisible = (visible?: boolean) => {\n  if (isDisabled.value) return\n\n  visible = visible ?? !popperVisible.value\n\n  if (visible !== popperVisible.value) {\n    popperVisible.value = visible\n    input.value?.input?.setAttribute('aria-expanded', `${visible}`)\n\n    if (visible) {\n      updatePopperPosition()\n      nextTick(cascaderPanelRef.value?.scrollToExpandingNode)\n    } else if (props.filterable) {\n      syncPresentTextValue()\n    }\n\n    emit('visibleChange', visible)\n  }\n}\n\nconst updatePopperPosition = () => {\n  nextTick(() => {\n    tooltipRef.value?.updatePopper()\n  })\n}\n\nconst hideSuggestionPanel = () => {\n  filtering.value = false\n}\n\nconst genTag = (node: CascaderNode): Tag => {\n  const { showAllLevels, separator } = props\n  return {\n    node,\n    key: node.uid,\n    text: node.calcText(showAllLevels, separator),\n    hitState: false,\n    closable: !isDisabled.value && !node.isDisabled,\n    isCollapseTag: false,\n  }\n}\n\nconst deleteTag = (tag: Tag) => {\n  const node = tag.node as CascaderNode\n  node.doCheck(false)\n  cascaderPanelRef.value?.calculateCheckedValue()\n  emit('removeTag', node.valueByOption)\n}\n\nconst calculatePresentTags = () => {\n  if (!multiple.value) return\n\n  const nodes = checkedNodes.value\n  const tags: Tag[] = []\n\n  const allTags: Tag[] = []\n  nodes.forEach((node) => allTags.push(genTag(node)))\n  allPresentTags.value = allTags\n\n  if (nodes.length) {\n    const [first, ...rest] = nodes\n    const restCount = rest.length\n\n    tags.push(genTag(first))\n\n    if (restCount) {\n      if (props.collapseTags) {\n        tags.push({\n          key: -1,\n          text: `+ ${restCount}`,\n          closable: false,\n          isCollapseTag: true,\n        })\n      } else {\n        rest.forEach((node) => tags.push(genTag(node)))\n      }\n    }\n  }\n\n  presentTags.value = tags\n}\n\nconst calculateSuggestions = () => {\n  const { filterMethod, showAllLevels, separator } = props\n  const res = cascaderPanelRef.value\n    ?.getFlattedNodes(!props.props.checkStrictly)\n    ?.filter((node) => {\n      if (node.isDisabled) return false\n      node.calcText(showAllLevels, separator)\n      return filterMethod(node, searchKeyword.value)\n    })\n\n  if (multiple.value) {\n    presentTags.value.forEach((tag) => {\n      tag.hitState = false\n    })\n    allPresentTags.value.forEach((tag) => {\n      tag.hitState = false\n    })\n  }\n\n  filtering.value = true\n  suggestions.value = res!\n  updatePopperPosition()\n}\n\nconst focusFirstNode = () => {\n  let firstNode!: HTMLElement\n\n  if (filtering.value && suggestionPanel.value) {\n    firstNode = suggestionPanel.value.$el.querySelector(\n      `.${nsCascader.e('suggestion-item')}`\n    )\n  } else {\n    firstNode = cascaderPanelRef.value?.$el.querySelector(\n      `.${nsCascader.b('node')}[tabindex=\"-1\"]`\n    )\n  }\n\n  if (firstNode) {\n    firstNode.focus()\n    !filtering.value && firstNode.click()\n  }\n}\n\nconst updateStyle = () => {\n  const inputInner = input.value?.input\n  const tagWrapperEl = tagWrapper.value\n  const suggestionPanelEl = suggestionPanel.value?.$el\n\n  if (!isClient || !inputInner) return\n\n  if (suggestionPanelEl) {\n    const suggestionList = suggestionPanelEl.querySelector(\n      `.${nsCascader.e('suggestion-list')}`\n    )\n    suggestionList.style.minWidth = `${inputInner.offsetWidth}px`\n  }\n\n  if (tagWrapperEl) {\n    const { offsetHeight } = tagWrapperEl\n    const height =\n      presentTags.value.length > 0\n        ? `${Math.max(offsetHeight + 6, inputInitialHeight)}px`\n        : `${inputInitialHeight}px`\n    inputInner.style.height = height\n    updatePopperPosition()\n  }\n}\n\nconst getCheckedNodes = (leafOnly: boolean) => {\n  return cascaderPanelRef.value?.getCheckedNodes(leafOnly)\n}\n\nconst handleExpandChange = (value: CascaderValue) => {\n  updatePopperPosition()\n  emit('expandChange', value)\n}\n\nconst handleComposition = (event: CompositionEvent) => {\n  const text = (event.target as HTMLInputElement)?.value\n  if (event.type === 'compositionend') {\n    isOnComposition.value = false\n    nextTick(() => handleInput(text))\n  } else {\n    const lastCharacter = text[text.length - 1] || ''\n    isOnComposition.value = !isKorean(lastCharacter)\n  }\n}\n\nconst handleKeyDown = (e: KeyboardEvent) => {\n  if (isOnComposition.value) return\n\n  switch (e.code) {\n    case EVENT_CODE.enter:\n      togglePopperVisible()\n      break\n    case EVENT_CODE.down:\n      togglePopperVisible(true)\n      nextTick(focusFirstNode)\n      e.preventDefault()\n      break\n    case EVENT_CODE.esc:\n      if (popperVisible.value === true) {\n        e.preventDefault()\n        e.stopPropagation()\n        togglePopperVisible(false)\n      }\n      break\n    case EVENT_CODE.tab:\n      togglePopperVisible(false)\n      break\n  }\n}\n\nconst handleClear = () => {\n  cascaderPanelRef.value?.clearCheckedNodes()\n  if (!popperVisible.value && props.filterable) {\n    syncPresentTextValue()\n  }\n  togglePopperVisible(false)\n}\n\nconst syncPresentTextValue = () => {\n  const { value } = presentText\n  inputValue.value = value\n  searchInputValue.value = value\n}\n\nconst handleSuggestionClick = (node: CascaderNode) => {\n  const { checked } = node\n\n  if (multiple.value) {\n    cascaderPanelRef.value?.handleCheckChange(node, !checked, false)\n  } else {\n    !checked && cascaderPanelRef.value?.handleCheckChange(node, true, false)\n    togglePopperVisible(false)\n  }\n}\n\nconst handleSuggestionKeyDown = (e: KeyboardEvent) => {\n  const target = e.target as HTMLElement\n  const { code } = e\n\n  switch (code) {\n    case EVENT_CODE.up:\n    case EVENT_CODE.down: {\n      const distance = code === EVENT_CODE.up ? -1 : 1\n      focusNode(\n        getSibling(\n          target,\n          distance,\n          `.${nsCascader.e('suggestion-item')}[tabindex=\"-1\"]`\n        ) as HTMLElement\n      )\n      break\n    }\n    case EVENT_CODE.enter:\n      target.click()\n      break\n  }\n}\n\nconst handleDelete = () => {\n  const tags = presentTags.value\n  const lastTag = tags[tags.length - 1]\n  pressDeleteCount = searchInputValue.value ? 0 : pressDeleteCount + 1\n\n  if (!lastTag || !pressDeleteCount || (props.collapseTags && tags.length > 1))\n    return\n\n  if (lastTag.hitState) {\n    deleteTag(lastTag)\n  } else {\n    lastTag.hitState = true\n  }\n}\n\nconst handleFocus = (e: FocusEvent) => {\n  const el = e.target as HTMLInputElement\n  const name = nsCascader.e('search-input')\n  if (el.className === name) {\n    filterFocus.value = true\n  }\n  emit('focus', e)\n}\n\nconst handleBlur = (e: FocusEvent) => {\n  filterFocus.value = false\n  emit('blur', e)\n}\n\nconst handleFilter = debounce(() => {\n  const { value } = searchKeyword\n\n  if (!value) return\n\n  const passed = props.beforeFilter(value)\n\n  if (isPromise(passed)) {\n    passed.then(calculateSuggestions).catch(() => {\n      /* prevent log error */\n    })\n  } else if (passed !== false) {\n    calculateSuggestions()\n  } else {\n    hideSuggestionPanel()\n  }\n}, props.debounce)\n\nconst handleInput = (val: string, e?: KeyboardEvent) => {\n  !popperVisible.value && togglePopperVisible(true)\n\n  if (e?.isComposing) return\n\n  val ? handleFilter() : hideSuggestionPanel()\n}\n\nwatch(filtering, updatePopperPosition)\n\nwatch([checkedNodes, isDisabled], calculatePresentTags)\n\nwatch(presentTags, () => {\n  nextTick(() => updateStyle())\n})\n\nwatch(presentText, syncPresentTextValue, { immediate: true })\n\nonMounted(() => {\n  const inputInner = input.value!.input!\n\n  const inputInnerHeight =\n    Number.parseFloat(\n      useCssVar(nsInput.cssVarName('input-height'), inputInner).value\n    ) - 2\n\n  inputInitialHeight = inputInner.offsetHeight || inputInnerHeight\n  useResizeObserver(inputInner, updateStyle)\n})\n\ndefineExpose({\n  /**\n   * @description get an array of currently selected node,(leafOnly) whether only return the leaf checked nodes, default is `false`\n   */\n  getCheckedNodes,\n  /**\n   * @description cascader panel ref\n   */\n  cascaderPanelRef,\n  /**\n   * @description toggle the visible of popper\n   */\n  togglePopperVisible,\n})\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCA+Oc,CAAA;AAAA,EACZ,IAAM,EAAA,cAAA;AACR;;;;;;;AAnBA,IAAA,MAAM,aAAkC,GAAA;AAAA,MACtC,SAAW,EAAA;AAAA,QACT;AAAA,UACE,IAAM,EAAA,eAAA;AAAA,UACN,OAAS,EAAA,IAAA;AAAA,UACT,KAAO,EAAA,MAAA;AAAA,UACP,EAAA,EAAI,CAAC,EAAE,KAAY,EAAA,KAAA;AACjB,YAAM,MAAA,EAAE,eAAe,SAAc,EAAA,GAAA,KAAA,CAAA;AACrC,YAAA,IAAI,CAAC,OAAS,EAAA,MAAA,EAAQ,UAAU,KAAK,CAAA,CAAE,SAAS,SAAS,CAAA;AAAG,cAAA,OAAA;AAC5D,YAAA,aAAA,CAAc,MAAM,CAAI,GAAA,EAAA,CAAA;AAAA,WAC1B;AAAA,UACA,QAAA,EAAU,CAAC,OAAO,CAAA;AAAA,SACpB;AAAA,OACF;AAAA,KACF,CAAA;AASA,IAAA,MAAM,QAAQ,QAAS,EAAA,CAAA;AAEvB,IAAA,IAAI,kBAAqB,GAAA,CAAA,CAAA;AACzB,IAAA,IAAI,gBAAmB,GAAA,CAAA,CAAA;AAEvB,IAAM,MAAA,UAAA,GAAa,aAAa,UAAU,CAAA,CAAA;AAC1C,IAAM,MAAA,OAAA,GAAU,aAAa,OAAO,CAAA,CAAA;AAEpC,IAAM,MAAA,EAAE,MAAM,SAAU,EAAA,CAAA;AACxB,IAAM,MAAA,EAAE,IAAM,EAAA,QAAA,EAAA,GAAa,WAAY,EAAA,CAAA;AAEvC,IAAM,MAAA,UAAA,GAA0C,IAAI,IAAI,CAAA,CAAA;AACxD,IAAM,MAAA,KAAA,GAAmC,IAAI,IAAI,CAAA,CAAA;AACjD,IAAM,MAAA,UAAA,GAAa,IAAI,IAAI,CAAA,CAAA;AAC3B,IAAM,MAAA,gBAAA,GAAsD,IAAI,IAAI,CAAA,CAAA;AACpE,IAAM,MAAA,eAAA,GAAiD,IAAI,IAAI,CAAA,CAAA;AAC/D,IAAM,MAAA,aAAA,GAAgB,IAAI,KAAK,CAAA,CAAA;AAC/B,IAAM,MAAA,UAAA,GAAa,IAAI,KAAK,CAAA,CAAA;AAC5B,IAAM,MAAA,SAAA,GAAY,IAAI,KAAK,CAAA,CAAA;AAC3B,IAAM,MAAA,WAAA,GAAc,IAAI,KAAK,CAAA,CAAA;AAC7B,IAAM,MAAA,UAAA,GAAa,IAAI,EAAE,CAAA,CAAA;AACzB,IAAM,MAAA,gBAAA,GAAmB,IAAI,EAAE,CAAA,CAAA;AAC/B,IAAM,MAAA,WAAA,GAA0B,GAAI,CAAA,EAAE,CAAA,CAAA;AACtC,IAAM,MAAA,cAAA,GAA6B,GAAI,CAAA,EAAE,CAAA,CAAA;AACzC,IAAM,MAAA,WAAA,GAAmC,GAAI,CAAA,EAAE,CAAA,CAAA;AAC/C,IAAM,MAAA,eAAA,GAAkB,IAAI,KAAK,CAAA,CAAA;AAEjC,IAAM,MAAA,aAAA,GAAgB,SAAqB,MAAM;AAC/C,MAAA,OAAO,KAAM,CAAA,KAAA,CAAA;AAAA,KACd,CAAA,CAAA;AAED,IAAA,MAAM,aAAa,QAAS,CAAA,MAAM,KAAM,CAAA,QAAA,aAA0B,IAAA,GAAA,KAAA,CAAA,GAAA,IAAA,CAAA,QAAA,CAAA,CAAA,CAAA;AAClE,IAAA,MAAM,mBAAmB,QACvB,CAAA,MAAM,MAAM,WAAe,IAAA,CAAA,CAAE,yBAAyB,CACxD,CAAA,CAAA;AACA,IAAA,MAAM,kBAAqB,GAAA,QAAA,CAAS,MAClC,gBAAA,CAAiB,KACjB,IAAA,WAAA,CAAY,KAAM,CAAA,MAAA,GAAS,CAC3B,IAAA,eAAA,CAAgB,KACZ,GAAA,EAAA,GACA,iBAAiB,KACvB,CAAA,CAAA;AACA,IAAA,MAAM,WAAW,WAAY,EAAA,CAAA;AAC7B,IAAM,MAAA,OAAA,GAAU,QAAS,CAAA,MACvB,CAAC,OAAO,CAAE,CAAA,QAAA,CAAS,QAAS,CAAA,KAAK,CAAI,GAAA,OAAA,GAAU,SACjD,CAAA,CAAA;AACA,IAAA,MAAM,WAAW,QAAS,CAAA,MAAM,CAAC,CAAC,KAAA,CAAM,MAAM,QAAQ,CAAA,CAAA;AACtD,IAAA,MAAM,WAAW,QAAS,CAAA,MAAM,CAAC,KAAM,CAAA,UAAA,IAAc,SAAS,KAAK,CAAA,CAAA;AACnE,IAAM,MAAA,aAAA,GAAgB,SAAS,MAC7B,QAAA,CAAS,QAAQ,gBAAiB,CAAA,KAAA,GAAQ,WAAW,KACvD,CAAA,CAAA;AACA,IAAA,MAAM,eAA4C,QAChD,CAAA,MAAM;AAER,MAAM,IAAA,EAAA,CAAA;AACJ,MACE,WAAO,GACP,gBAAA,CAAA,cACU,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YACE,KAAA,EAAA,CAAA;AAEZ,KAAO,CAAA,CAAA;AAET,IAAO,MAAA,eAAE,GAAa,QAAM,CAAA,MAAA;AAAA,MAC7B,IAAA,CAAA,KAAA,CAAA,SAAA,IAAA,UAAA,CAAA,KAAA,IAAA,SAAA,CAAA,KAAA,IAAA,CAAA,UAAA,CAAA,KAAA;AACD,QAAM,OAAA,KAAA,CAAA;AACJ,MAAM,OAAA,CAAE,mBAA6B,CAAA,MAAA,CAAA;AACrC,KAAA,CAAA,CAAA;AACA,IAAO,MAAA,WACH,GAAA,QAAA,CAAA,MACE;AAEF,MACL,MAAA,EAAA,aAAA,EAAA,SAAA,EAAA,GAAA,KAAA,CAAA;AAED,MAAA,0BAA6C,CAAA,KAAA,CAAA;AAAA,MAC3C,OAAM,KAAA,CAAA,MAAA,GAAA,QAAA,CAAA,KAAA,GAAA,EAAA,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,aAAA,EAAA,SAAA,CAAA,GAAA,EAAA,CAAA;AACJ,KAAO,CAAA,CAAA;AAA0B,IACnC,MAAA,YAAA,GAAA,QAAA,CAAA;AAAA,MACA,MAAS;AACP,QAAA,iCAA4B,CAAA,CAAA;AAC5B,OAAA;AACA,MAAA,GAAA,CAAA;AACE,QAAU,IAAA,CAAA,wBAAiB,CAAE;AAA6B,QAC5D,IAAA,CAAA,YAAA,EAAA,GAAA,CAAA,CAAA;AAAA,QACF,IAAA,KAAA,CAAA,aAAA,EAAA;AAAA,UACD,QAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,KAAA,CAAA,CAAA,GAAA,KAAA,SAAA,CAAA,GAAA,CAAA,CAAA,CAAA;AAED,SAAM;AACJ,OAAO;AAAA,KAAA,CAAA,CAAA;AACQ,IACb,MAAA,WAAa,GAAA,QAAc,CAAA,MAAA;AAAA,MAAA,OAChB;AAA+B,QAC1C,UAAM,CAAA,CAAA,EAAA;AAAA,QACR,UAAA,CAAA,CAAA,CAAA,QAAA,CAAA,KAAA,CAAA;AAAA,QACD,UAAA,CAAA,EAAA,CAAA,UAAA,EAAA,UAAA,CAAA,KAAA,CAAA;AAED,QAAM,KAAA,CAAA,KAAA;AACJ,OAAO,CAAA;AAAA,KACL,CAAA,CAAA;AAAgB,IAChB,MAAA,eAAA,GAAA,QAAA,CAAA,MAAA;AAAA,MAAA,OACW;AAAiC,QAC9C,OAAA,CAAA,CAAA,CAAA,MAAA,CAAA;AAAA,QACD,iBAAA;AAED,QAAM,UAAA,CAAA,EAAA,CAAA,WAA4B,aAAA,CAAA,KAAA,CAAA;AAChC,OAAA,CAAA;AAAsE,KACvE,CAAA,CAAA;AAED,IAAM,MAAA,UAAA,GAAA,QAAA,CAAsB,MAAuB;AACjD,MAAA,OAAe,UAAA,CAAA,EAAA,CAAA,OAAA,EAAA,aAAA,CAAA,KAAA,IAAA,WAAA,CAAA,KAAA,CAAA,CAAA;AAAO,KAAA,CAAA,CAAA;AAEtB,IAAU,MAAA,mBAA0B,GAAA,CAAA,OAAA,KAAA;AAEpC,MAAI,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AACF,MAAA,IAAA,UAAA,CAAA,KAAsB;AACtB,QAAA,OAAa;AAEb,MAAA,OAAa,GAAA,OAAA,IAAA,IAAA,GAAA,OAAA,GAAA,CAAA,aAAA,CAAA,KAAA,CAAA;AACX,MAAqB,IAAA,OAAA,KAAA,aAAA,CAAA,KAAA,EAAA;AACrB,QAAS,aAAA,CAAA,KAAA,GAAA;AAA6C,QACxD,CAAA,EAAA,GAAA,CAAA,EAAA,QAAiB,CAAY,KAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAA,CAAA,eAAA,EAAA,CAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA;AAC3B,QAAqB,IAAA,OAAA,EAAA;AAAA,UACvB,oBAAA,EAAA,CAAA;AAEA,UAAA,+BAA6B,CAAA,KAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,CAAA;AAAA,SAC/B,MAAA,IAAA,KAAA,CAAA,UAAA,EAAA;AAAA,UACF,oBAAA,EAAA,CAAA;AAEA,SAAA;AACE,QAAA,IAAA,CAAA,eAAe,EAAA,OAAA,CAAA,CAAA;AACb,OAAA;AAA+B,KAAA,CACjC;AAAC,IACH,MAAA,oBAAA,GAAA,MAAA;AAEA,MAAA;AACE,QAAA,IAAA,EAAA,CAAA;AAAkB,QACpB,CAAA,EAAA,GAAA,UAAA,CAAA,KAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAA,EAAA,CAAA;AAEA,OAAM,CAAA,CAAA;AACJ,KAAM,CAAA;AACN,IAAO,MAAA,mBAAA,GAAA,MAAA;AAAA,MACL,SAAA,CAAA,KAAA,GAAA,KAAA,CAAA;AAAA,KAAA,CAAA;AACU,IAAA,MACJ,MAAA,GAAK,CAAS,IAAA,KAAA;AAAwB,MAAA,MAClC,EAAA,aAAA,EAAA,SAAA,EAAA,GAAA,KAAA,CAAA;AAAA,MAAA,OACA;AAA2B,QACrC,IAAe;AAAA,QACjB,GAAA,EAAA,IAAA,CAAA,GAAA;AAAA,QACF,IAAA,EAAA,IAAA,CAAA,QAAA,CAAA,aAAA,EAAA,SAAA,CAAA;AAEA,QAAM,QAAA,EAAA,KAAa;AACjB,QAAA,WAAa,UAAI,CAAA,KAAA,IAAA,CAAA,IAAA,CAAA,UAAA;AACjB,QAAA,aAAkB,EAAA,KAAA;AAClB,OAAA,CAAA;AACA,KAAK,CAAA;AAA+B,IACtC,MAAA,SAAA,GAAA,CAAA,GAAA,KAAA;AAEA,MAAA,IAAM;AACJ,MAAA,MAAc,IAAA,GAAA,GAAA,CAAA,IAAA,CAAA;AAAO,MAAA,IAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA;AAErB,MAAA,CAAA,EAAA,GAAM,gBAAqB,CAAA,KAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,qBAAA,EAAA,CAAA;AAC3B,MAAA,IAAA,CAAA,WAAqB,EAAA,IAAA,CAAA,aAAA,CAAA,CAAA;AAErB,KAAA,CAAA;AACA,IAAM,MAAA,oBAAkB,GAAA;AACxB,MAAA,IAAA,CAAA,QAAA,CAAA,KAAuB;AAEvB,QAAA;AACE,MAAM,MAAA,oBAAmB,CAAA,KAAA,CAAA;AACzB,MAAA,MAAA;AAEA,MAAK,MAAA,OAAY,GAAA,EAAA,CAAA;AAEjB,MAAA,KAAA,CAAI,OAAW,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AACb,MAAA,cAAU,CAAc,KAAA,GAAA,OAAA,CAAA;AACtB,MAAA,IAAA,KAAA,CAAA,MAAU,EAAA;AAAA,QAAA,MACR,CAAK,KAAA,EAAA,GAAA,IAAA,CAAA,GAAA,KAAA,CAAA;AAAA,QAAA,MACL,SAAW,GAAA,IAAA,CAAA,MAAA,CAAA;AAAA,QAAA,IAAA,CAAA,IACD,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AAAA,QAAA,IAAA,SACK,EAAA;AAAA,UAAA,IAChB,KAAA,CAAA,YAAA,EAAA;AAAA,YACI,IAAA,CAAA,IAAA,CAAA;AACL,cAAK,GAAA,EAAA,CAAA,CAAA;AAAyC,cAChD,IAAA,EAAA,CAAA,EAAA,EAAA,SAAA,CAAA,CAAA;AAAA,cACF,QAAA,EAAA,KAAA;AAAA,cACF,aAAA,EAAA,IAAA;AAEA,aAAA,CAAA,CAAA;AAAoB,WACtB,MAAA;AAEA,mCAAmC,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AACjC,WAAM;AACN,SAAM;AAGF,OAAA;AAAqB,MAAO,WAAA,CAAA,KAAA,GAAA,IAAA,CAAA;AAC5B,KAAK,CAAA;AACL,IAAO,MAAA,oBAAmB,GAAA,MAAA;AAAmB,MAC/C,IAAC,EAAA,EAAA,EAAA,CAAA;AAEH,MAAA,oBAAoB,EAAA,aAAA,EAAA,SAAA,EAAA,GAAA,KAAA,CAAA;AAClB,MAAY,MAAA,GAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAc,GAAA,gBAAS,CAAA,KAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,eAAA,CAAA,CAAA,KAAA,CAAA,KAAA,CAAA,aAAA,CAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAA,CAAA,CAAA,IAAA,KAAA;AACjC,QAAA,IAAA,IAAe,CAAA,UAAA;AAAA,UAChB,OAAA,KAAA,CAAA;AACD,QAAe,IAAA,CAAA,QAAA,CAAA,aAAc,EAAA,SAAS,CAAA,CAAA;AACpC,QAAA,OAAe,YAAA,CAAA,IAAA,EAAA,aAAA,CAAA,KAAA,CAAA,CAAA;AAAA,OAAA,CACjB,CAAC;AAAA,MACH,IAAA,QAAA,CAAA,KAAA,EAAA;AAEA,QAAA,WAAkB,CAAA,KAAA,CAAA,OAAA,CAAA,CAAA,GAAA,KAAA;AAClB,UAAA,GAAA,CAAA,QAAoB,GAAA,KAAA,CAAA;AACpB,SAAqB,CAAA,CAAA;AAAA,QACvB,cAAA,CAAA,KAAA,CAAA,OAAA,CAAA,CAAA,GAAA,KAAA;AAEA,UAAM,oBAAuB,CAAA;AAC3B,SAAI,CAAA,CAAA;AAEJ,OAAI;AACF,MAAY,SAAA,CAAA,KAAA,GAAA,IAAA,CAAA;AAEZ,MACF,WAAO,CAAA,KAAA,GAAA,GAAA,CAAA;AACL,MAAY,oBAAA,EAAA,CAAA;AAEZ,KACF,CAAA;AAEA,IAAA,MAAI,cAAW,GAAA,MAAA;AACb,MAAA,IAAA,EAAA,CAAA;AACA,MAAC,IAAA,SAAU,CAAS;AAAgB,MACtC,IAAA,SAAA,CAAA,KAAA,IAAA,eAAA,CAAA,KAAA,EAAA;AAAA,QACF,SAAA,GAAA,eAAA,CAAA,KAAA,CAAA,GAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EAAA,UAAA,CAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,OAAA;AACE,QAAM,SAAA,GAAA,CAAA,EAAA,mBAA0B,CAAA,KAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EAAA,UAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,eAAA,CAAA,CAAA,CAAA;AAChC,OAAA;AACA,MAAM,IAAA,SAAA,EAAA;AAEN,QAAI,eAAa,EAAC,CAAA;AAAY,QAAA,CAAA,SAAA,CAAA,KAAA,IAAA,SAAA,CAAA,KAAA,EAAA,CAAA;AAE9B,OAAA;AACE,KAAA,CAAA;AAGA,IAAe,MAAA,WAAA,GAAA,MAAiB;AAAc,MAChD,IAAA,EAAA,EAAA,EAAA,CAAA;AAEA,MAAA,MAAkB,UAAA,GAAA,CAAA,EAAA,GAAA,KAAA,CAAA,KAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAA,CAAA;AAChB,MAAA,MAAA,YAAyB,GAAA,UAAA,CAAA,KAAA,CAAA;AACzB,MAAA,MAAA,iBACE,GAAA,CAAA,EAAY,GAAM,eACd,CAAA,KAAQ,KAAA,IAAmB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAqB,CAAA;AAEtD,MAAA,IAAA,CAAA,QAAW,eAAe;AAC1B,QAAqB,OAAA;AAAA,MACvB,IAAA,iBAAA,EAAA;AAAA,QACF,MAAA,cAAA,GAAA,iBAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EAAA,UAAA,CAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,QAAM,cAAA,CAAA,KAAkB,CAAC,QAAsB,GAAA,CAAA,EAAA,UAAA,CAAA,WAAA,CAAA,EAAA,CAAA,CAAA;AAC7C,OAAO;AAAgD,MACzD,IAAA,YAAA,EAAA;AAEA,QAAM,MAAA,EAAA,YAAA,EAAA,GAA+C,YAAA,CAAA;AACnD,QAAqB,MAAA,MAAA,GAAA,WAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAAA,GAAA,CAAA,EAAA,IAAA,CAAA,GAAA,CAAA,YAAA,GAAA,CAAA,EAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,kBAAA,CAAA,EAAA,CAAA,CAAA;AACrB,QAAA,uBAA0B,GAAA,MAAA,CAAA;AAAA,QAC5B,oBAAA,EAAA,CAAA;AAEA,OAAM;AACJ,KAAM,CAAA;AACN,IAAI,MAAA,eAAe,GAAkB,CAAA,QAAA,KAAA;AACnC,MAAA,IAAA,EAAA,CAAA;AACA,MAAS,OAAA,CAAA,EAAA,GAAA,gBAAkB,CAAA,KAAK,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,eAAA,CAAA,QAAA,CAAA,CAAA;AAAA,KAAA,CAClC;AACE,IAAA,MAAA,kBAAsB,GAAA,CAAA,KAAU,KAAA;AAChC,MAAgB,oBAAA,EAAA,CAAA;AAA+B,MACjD,IAAA,CAAA,cAAA,EAAA,KAAA,CAAA,CAAA;AAAA,KACF,CAAA;AAEA,IAAM,MAAA,iBAAiB,GAAqB,CAAA,KAAA,KAAA;AAC1C,MAAA,IAAI,EAAgB,CAAA;AAAO,MAAA,MAAA,IAAA,GAAA,CAAA,EAAA,GAAA,KAAA,CAAA,MAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAA,CAAA;AAE3B,MAAA,IAAA,KAAU,CAAA,IAAA,KAAA,gBAAA,EAAA;AAAA,QAAA,eACQ,CAAA,KAAA,GAAA,KAAA,CAAA;AACd,QAAoB,QAAA,CAAA,MAAA,WAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACpB,OAAA,MAAA;AAAA,QAAA,MACc,aAAA,GAAA,IAAA,CAAA,IAAA,CAAA,MAAA,GAAA,CAAA,CAAA,IAAA,EAAA,CAAA;AACd,QAAA,eAAA,CAAA,KAAA,GAAwB,CAAA,QAAA,CAAA,aAAA,CAAA,CAAA;AACxB,OAAA;AACA,KAAA,CAAA;AACA,IAAA,MAAA,aAAA,GAAA,CAAA,CAAA,KAAA;AAAA,MAAA,IAAA,eACc,CAAA,KAAA;AACd,QAAI,OAAA;AACF,MAAA,QAAE,CAAe,CAAA,IAAA;AACjB,QAAA,KAAA,UAAkB,CAAA,KAAA;AAClB,UAAA,mBAAA,EAAA,CAAoB;AAAK,UAC3B,MAAA;AACA,QAAA,KAAA,UAAA,CAAA,IAAA;AAAA,UAAA,mBACc,CAAA,IAAA,CAAA,CAAA;AACd,UAAA,QAAA,CAAA,cAAyB,CAAA,CAAA;AACzB,UAAA,CAAA,CAAA,cAAA,EAAA,CAAA;AAAA,UAAA,MAAA;AAAA,QAEN,KAAA,UAAA,CAAA,GAAA;AAEA,UAAM,iBAAoB,CAAA,KAAA,KAAA,IAAA,EAAA;AACxB,YAAA,CAAA,CAAA,gBAAwB,CAAkB;AAC1C,YAAK,CAAA,CAAA,eAAuB,EAAA,CAAA;AAC1B,YAAqB,mBAAA,CAAA,KAAA,CAAA,CAAA;AAAA,WACvB;AACA,UAAA,MAAA;AAAyB,QAC3B,KAAA,UAAA,CAAA,GAAA;AAEA,UAAM,yBAA6B,CAAA,CAAA;AACjC,UAAA,MAAkB;AAClB,OAAA;AACA,KAAA,CAAA;AAAyB,IAC3B,MAAA,WAAA,GAAA,MAAA;AAEA,MAAM,IAAA,EAAA,CAAA;AACJ,MAAA,CAAA,EAAA,GAAM,gBAAc,CAAA,KAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,iBAAA,EAAA,CAAA;AAEpB,MAAA,IAAI,cAAgB,CAAA,KAAA,IAAA,KAAA,CAAA,UAAA,EAAA;AAClB,QAAA,oBAAwB,EAAA,CAAA;AAAuC,OAC1D;AACL,MAAA,mBAA6B,CAAA,KAAA,CAAA,CAAA;AAC7B,KAAA,CAAA;AAAyB,IAC3B,MAAA,oBAAA,GAAA,MAAA;AAAA,MACF,MAAA,EAAA,KAAA,EAAA,GAAA,WAAA,CAAA;AAEA,MAAM,UAAA,CAAA,KAAA,GAAA,KAAA,CAAA;AACJ,MAAA,gBAAiB,CAAA,KAAA,GAAA,KAAA,CAAA;AACjB,KAAA,CAAA;AAEA,IAAQ,MAAA,qBAAA,GAAA,CAAA,IAAA,KAAA;AAAA,MAAA,IAAA,EAAA,EACU,EAAA,CAAA;AAAA,MAAA,MAAA,cACM,IAAA,CAAA;AACpB,MAAA,IAAA,QAAiB,CAAA,KAAA,EAAA;AACjB,QACE,CAAA,EAAA,GAAA,gBAAA,CACE,UAEA,IAAA,GAAA,KAAI,wBAAa,CAAA,IAAA,mBACnB;AAEF,OAAA,MAAA;AAAA,QACF,CAAA,OAAA,KAAA,CAAA,EAAA,GAAA,gBAAA,CAAA,KAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,IAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAAA,QAAA,mBACgB,CAAA,KAAA,CAAA,CAAA;AACd,OAAA;AACA,KAAA,CAAA;AAAA,IAAA,MAAA,uBAAA,GAAA,CAAA,CAAA,KAAA;AAAA,MAEN,MAAA,MAAA,GAAA,CAAA,CAAA,MAAA,CAAA;AAEA,MAAA,mBAAqB;AACnB,MAAA;AACA,QAAM,KAAA,UAAe,CAAA,EAAA,CAAA;AACrB,QAAmB,KAAA,UAAA,CAAA,IAAA,EAAA;AAEnB,UAAI,MAAY,8BAA4B,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AAC1C,UAAA,SAAA,CAAA,UAAA,CAAA,MAAA,EAAA,QAAA,EAAA,CAAA,CAAA,EAAA,UAAA,CAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,eAAA,CAAA,CAAA,CAAA,CAAA;AAEF,UAAI;AACF,SAAA;AAAiB,QACZ,KAAA,UAAA,CAAA,KAAA;AACL,UAAA,MAAQ,CAAW,KAAA,EAAA,CAAA;AAAA,UACrB,MAAA;AAAA,OACF;AAEA,KAAM,CAAA;AACJ,IAAA,MAAA,YAAa,GAAA,MAAA;AACb,MAAM,MAAA,IAAA,GAAO,WAAW,CAAA,KAAgB,CAAA;AACxC,MAAI,MAAA,eAAiB,IAAM,CAAA,MAAA,GAAA,CAAA,CAAA,CAAA;AACzB,MAAA,gBAAoB,GAAA,gBAAA,CAAA,KAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,CAAA;AAAA,MACtB,IAAA,CAAA,OAAA,IAAA,CAAA,gBAAA,IAAA,KAAA,CAAA,YAAA,IAAA,IAAA,CAAA,MAAA,GAAA,CAAA;AACA,QAAA;AAAe,MACjB,IAAA,OAAA,CAAA,QAAA,EAAA;AAEA,QAAM,SAAA,CAAA,OAAgC,CAAA,CAAA;AACpC,OAAA,MAAA;AACA,QAAA,gBAAc,GAAA,IAAA,CAAA;AAAA,OAChB;AAEA,KAAM,CAAA;AACJ,IAAA,MAAA,WAAkB,GAAA,CAAA,CAAA,KAAA;AAElB,MAAA,MAAK,EAAA,GAAA,CAAA,CAAA,MAAA,CAAA;AAAO,MAAA,MAAA,IAAA,GAAA,UAAA,CAAA,CAAA,CAAA,cAAA,CAAA,CAAA;AAEZ,MAAM,IAAA,EAAA,CAAA,SAAe,KAAA,IAAA,EAAA;AAErB,QAAI,WAAA,CAAU,QAAS,IAAA,CAAA;AACrB,OAAA;AAA8C,MAAA,IAE7C,CAAA,OAAA,EAAA,CAAA,CAAA,CAAA;AAAA,KACH,CAAA;AACE,IAAqB,MAAA,UAAA,GAAA,CAAA,CAAA,KAAA;AAAA,MACvB,WAAO,CAAA,KAAA,GAAA,KAAA,CAAA;AACL,MAAoB,IAAA,CAAA,MAAA,EAAA,CAAA,CAAA,CAAA;AAAA,KACtB,CAAA;AAAA,IACF,kBAAiB,GAAA,QAAA,CAAA,MAAA;AAEjB,MAAM,MAAA,EAAA,KAAA,EAAA,GAAc,aAAoC,CAAA;AACtD,MAAC,IAAA,CAAA,KAAA;AAED,QAAA,OAAO;AAAa,MAAA,MAAA,MAAA,GAAA,KAAA,CAAA,YAAA,CAAA,KAAA,CAAA,CAAA;AAEpB,MAAM,IAAA,SAAA,CAAA,SAAiB;AAAoB,QAC7C,MAAA,CAAA,IAAA,CAAA,oBAAA,CAAA,CAAA,KAAA,CAAA,MAAA;AAEA,SAAA,CAAM;AAEN,OAAA,MAAO,IAAA,MAAA,KAAwB,KAAA,EAAA;AAE/B,QAAA,oBAAyB,EAAA,CAAA;AACvB,OAAS,MAAA;AAAmB,QAC7B,mBAAA,EAAA,CAAA;AAED,OAAA;AAEA,KAAA,EAAA,KAAA,CAAA,QAAgB,CAAA,CAAA;AACd,IAAM,MAAA,WAAA,GAAA,CAAa,MAAM,KAAO;AAEhC,MAAM,CAAA,aAAA,CAAA,KAAA,IAAA,mBAEF,CAAU,IAAA,CAAA,CAAA;AAGd,MAAA,IAAA,CAAA,IAAA,IAAA,GAAA,KAAqB,iBAA2B;AAChD,QAAA,OAAA;AAAyC,MAC1C,GAAA,GAAA,YAAA,EAAA,GAAA,mBAAA,EAAA,CAAA;AAED,KAAa,CAAA;AAAA,IAIX,KAAA,CAAA,SAAA,EAAA,oBAAA,CAAA,CAAA;AAAA,IAIA,KAAA,CAAA,CAAA,YAAA,EAAA,UAAA,CAAA,EAAA,oBAAA,CAAA,CAAA;AAAA,IAIA,KAAA,CAAA,WAAA,EAAA,MAAA;AAAA,MACD,QAAA,CAAA,MAAA,WAAA,EAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}