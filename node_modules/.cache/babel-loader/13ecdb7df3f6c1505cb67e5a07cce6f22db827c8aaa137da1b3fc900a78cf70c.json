{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      colorP: getColor(1, seriesModel),\n      colorN: getColor(-1, seriesModel),\n      borderColorP: getBorderColor(1, seriesModel),\n      borderColorN: getBorderColor(-1, seriesModel)\n    }); // Only visible series has each data be visual encoded\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n    var isLargeRender = seriesModel.pipelineContext.large;\n    return !isLargeRender && {\n      progress: progress\n    };\n    function progress(params, data) {\n      var dataIndex;\n      while ((dataIndex = params.next()) != null) {\n        var itemModel = data.getItemModel(dataIndex);\n        var sign = data.getItemLayout(dataIndex).sign;\n        data.setItemVisual(dataIndex, {\n          color: getColor(sign, itemModel),\n          borderColor: getBorderColor(sign, itemModel)\n        });\n      }\n    }\n    function getColor(sign, model) {\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\n    }\n    function getBorderColor(sign, model) {\n      return model.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\n    }\n  }\n};\nmodule.exports = _default;","map":{"version":3,"names":["createRenderPlanner","require","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","_default","seriesType","plan","performRawSeries","reset","seriesModel","ecModel","data","getData","setVisual","legendSymbol","colorP","getColor","colorN","borderColorP","getBorderColor","borderColorN","isSeriesFiltered","isLargeRender","pipelineContext","large","progress","params","dataIndex","next","itemModel","getItemModel","sign","getItemLayout","setItemVisual","color","borderColor","model","get","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/chart/candlestick/candlestickVisual.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      colorP: getColor(1, seriesModel),\n      colorN: getColor(-1, seriesModel),\n      borderColorP: getBorderColor(1, seriesModel),\n      borderColorN: getBorderColor(-1, seriesModel)\n    }); // Only visible series has each data be visual encoded\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    var isLargeRender = seriesModel.pipelineContext.large;\n    return !isLargeRender && {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var itemModel = data.getItemModel(dataIndex);\n        var sign = data.getItemLayout(dataIndex).sign;\n        data.setItemVisual(dataIndex, {\n          color: getColor(sign, itemModel),\n          borderColor: getBorderColor(sign, itemModel)\n        });\n      }\n    }\n\n    function getColor(sign, model) {\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\n    }\n\n    function getBorderColor(sign, model) {\n      return model.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\n    }\n  }\n};\nmodule.exports = _default;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,+BAA+B,CAAC;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,wBAAwB,GAAG,CAAC,WAAW,EAAE,aAAa,CAAC;AAC3D,IAAIC,wBAAwB,GAAG,CAAC,WAAW,EAAE,cAAc,CAAC;AAC5D,IAAIC,kBAAkB,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC;AAC/C,IAAIC,kBAAkB,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC;AAChD,IAAIC,QAAQ,GAAG;EACbC,UAAU,EAAE,aAAa;EACzBC,IAAI,EAAER,mBAAmB,EAAE;EAC3B;EACAS,gBAAgB,EAAE,IAAI;EACtBC,KAAK,EAAE,SAAAA,CAAUC,WAAW,EAAEC,OAAO,EAAE;IACrC,IAAIC,IAAI,GAAGF,WAAW,CAACG,OAAO,EAAE;IAChCD,IAAI,CAACE,SAAS,CAAC;MACbC,YAAY,EAAE,WAAW;MACzBC,MAAM,EAAEC,QAAQ,CAAC,CAAC,EAAEP,WAAW,CAAC;MAChCQ,MAAM,EAAED,QAAQ,CAAC,CAAC,CAAC,EAAEP,WAAW,CAAC;MACjCS,YAAY,EAAEC,cAAc,CAAC,CAAC,EAAEV,WAAW,CAAC;MAC5CW,YAAY,EAAED,cAAc,CAAC,CAAC,CAAC,EAAEV,WAAW;IAC9C,CAAC,CAAC,CAAC,CAAC;;IAEJ,IAAIC,OAAO,CAACW,gBAAgB,CAACZ,WAAW,CAAC,EAAE;MACzC;IACF;IAEA,IAAIa,aAAa,GAAGb,WAAW,CAACc,eAAe,CAACC,KAAK;IACrD,OAAO,CAACF,aAAa,IAAI;MACvBG,QAAQ,EAAEA;IACZ,CAAC;IAED,SAASA,QAAQA,CAACC,MAAM,EAAEf,IAAI,EAAE;MAC9B,IAAIgB,SAAS;MAEb,OAAO,CAACA,SAAS,GAAGD,MAAM,CAACE,IAAI,EAAE,KAAK,IAAI,EAAE;QAC1C,IAAIC,SAAS,GAAGlB,IAAI,CAACmB,YAAY,CAACH,SAAS,CAAC;QAC5C,IAAII,IAAI,GAAGpB,IAAI,CAACqB,aAAa,CAACL,SAAS,CAAC,CAACI,IAAI;QAC7CpB,IAAI,CAACsB,aAAa,CAACN,SAAS,EAAE;UAC5BO,KAAK,EAAElB,QAAQ,CAACe,IAAI,EAAEF,SAAS,CAAC;UAChCM,WAAW,EAAEhB,cAAc,CAACY,IAAI,EAAEF,SAAS;QAC7C,CAAC,CAAC;MACJ;IACF;IAEA,SAASb,QAAQA,CAACe,IAAI,EAAEK,KAAK,EAAE;MAC7B,OAAOA,KAAK,CAACC,GAAG,CAACN,IAAI,GAAG,CAAC,GAAG7B,kBAAkB,GAAGC,kBAAkB,CAAC;IACtE;IAEA,SAASgB,cAAcA,CAACY,IAAI,EAAEK,KAAK,EAAE;MACnC,OAAOA,KAAK,CAACC,GAAG,CAACN,IAAI,GAAG,CAAC,GAAG/B,wBAAwB,GAAGC,wBAAwB,CAAC;IAClF;EACF;AACF,CAAC;AACDqC,MAAM,CAACC,OAAO,GAAGnC,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}