{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _model = require(\"../../util/model\");\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n  return colors[paletteNum - 1];\n}\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n    var color = colorPalette[colorIdx];\n    if (name) {\n      colorNameMap[name] = color;\n    }\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;","map":{"version":3,"names":["_model","require","makeInner","normalizeToArray","inner","getNearestColorPalette","colors","requestColorNum","paletteNum","length","i","_default","clearColorPalette","colorIdx","colorNameMap","getColorFromPalette","name","scope","scopeFields","hasOwnProperty","defaultColorPalette","get","layeredColorPalette","colorPalette","color","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/model/mixin/colorPalette.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAExC,IAAIC,SAAS,GAAGF,MAAM,CAACE,SAAS;AAChC,IAAIC,gBAAgB,GAAGH,MAAM,CAACG,gBAAgB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,KAAK,GAAGF,SAAS,EAAE;AAEvB,SAASG,sBAAsBA,CAACC,MAAM,EAAEC,eAAe,EAAE;EACvD,IAAIC,UAAU,GAAGF,MAAM,CAACG,MAAM,CAAC,CAAC;;EAEhC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,EAAEE,CAAC,EAAE,EAAE;IACnC,IAAIJ,MAAM,CAACI,CAAC,CAAC,CAACD,MAAM,GAAGF,eAAe,EAAE;MACtC,OAAOD,MAAM,CAACI,CAAC,CAAC;IAClB;EACF;EAEA,OAAOJ,MAAM,CAACE,UAAU,GAAG,CAAC,CAAC;AAC/B;AAEA,IAAIG,QAAQ,GAAG;EACbC,iBAAiB,EAAE,SAAAA,CAAA,EAAY;IAC7BR,KAAK,CAAC,IAAI,CAAC,CAACS,QAAQ,GAAG,CAAC;IACxBT,KAAK,CAAC,IAAI,CAAC,CAACU,YAAY,GAAG,CAAC,CAAC;EAC/B,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,mBAAmB,EAAE,SAAAA,CAAUC,IAAI,EAAEC,KAAK,EAAEV,eAAe,EAAE;IAC3DU,KAAK,GAAGA,KAAK,IAAI,IAAI;IACrB,IAAIC,WAAW,GAAGd,KAAK,CAACa,KAAK,CAAC;IAC9B,IAAIJ,QAAQ,GAAGK,WAAW,CAACL,QAAQ,IAAI,CAAC;IACxC,IAAIC,YAAY,GAAGI,WAAW,CAACJ,YAAY,GAAGI,WAAW,CAACJ,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC;;IAE9E,IAAIA,YAAY,CAACK,cAAc,CAACH,IAAI,CAAC,EAAE;MACrC,OAAOF,YAAY,CAACE,IAAI,CAAC;IAC3B;IAEA,IAAII,mBAAmB,GAAGjB,gBAAgB,CAAC,IAAI,CAACkB,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACnE,IAAIC,mBAAmB,GAAG,IAAI,CAACD,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC;IACtD,IAAIE,YAAY,GAAGhB,eAAe,IAAI,IAAI,IAAI,CAACe,mBAAmB,GAAGF,mBAAmB,GAAGf,sBAAsB,CAACiB,mBAAmB,EAAEf,eAAe,CAAC,CAAC,CAAC;;IAEzJgB,YAAY,GAAGA,YAAY,IAAIH,mBAAmB;IAElD,IAAI,CAACG,YAAY,IAAI,CAACA,YAAY,CAACd,MAAM,EAAE;MACzC;IACF;IAEA,IAAIe,KAAK,GAAGD,YAAY,CAACV,QAAQ,CAAC;IAElC,IAAIG,IAAI,EAAE;MACRF,YAAY,CAACE,IAAI,CAAC,GAAGQ,KAAK;IAC5B;IAEAN,WAAW,CAACL,QAAQ,GAAG,CAACA,QAAQ,GAAG,CAAC,IAAIU,YAAY,CAACd,MAAM;IAC3D,OAAOe,KAAK;EACd;AACF,CAAC;AACDC,MAAM,CAACC,OAAO,GAAGf,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}