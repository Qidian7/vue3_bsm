{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar AxisBuilder = require(\"./AxisBuilder\");\nvar graphic = require(\"../../util/graphic\");\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\nvar AxisView = require(\"./AxisView\");\nvar _axisSplitHelper = require(\"./axisSplitHelper\");\nvar rectCoordAxisBuildSplitArea = _axisSplitHelper.rectCoordAxisBuildSplitArea;\nvar rectCoordAxisHandleRemove = _axisSplitHelper.rectCoordAxisHandleRemove;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine'];\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(this._axisGroup);\n    group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    rectCoordAxisHandleRemove(this);\n  },\n  _splitLine: function (axisModel) {\n    var axis = axisModel.axis;\n    if (axis.scale.isBlank()) {\n      return;\n    }\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        subPixelOptimize: true,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  },\n  _splitArea: function (axisModel) {\n    rectCoordAxisBuildSplitArea(this, this._axisGroup, axisModel, axisModel);\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","AxisBuilder","graphic","singleAxisHelper","AxisView","_axisSplitHelper","rectCoordAxisBuildSplitArea","rectCoordAxisHandleRemove","axisBuilderAttrs","selfBuilderAttrs","SingleAxisView","extend","type","axisPointerClass","render","axisModel","ecModel","api","payload","group","removeAll","oldAxisGroup","_axisGroup","Group","layout","axisBuilder","each","add","getGroup","name","get","groupTransition","superCall","remove","_splitLine","axis","scale","isBlank","splitLineModel","getModel","lineStyleModel","lineWidth","lineColors","Array","gridRect","coordinateSystem","getRect","isHorizontal","splitLines","lineCount","ticksCoords","getTicksCoords","tickModel","p1","p2","i","length","tickCoord","toGlobalCoord","coord","y","height","x","width","colorIndex","push","Line","subPixelOptimize","shape","x1","y1","x2","y2","style","silent","mergePath","stroke","lineDash","getLineDash","_splitArea","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/component/axis/SingleAxisView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar _axisSplitHelper = require(\"./axisSplitHelper\");\n\nvar rectCoordAxisBuildSplitArea = _axisSplitHelper.rectCoordAxisBuildSplitArea;\nvar rectCoordAxisHandleRemove = _axisSplitHelper.rectCoordAxisHandleRemove;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine'];\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(this._axisGroup);\n    group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    rectCoordAxisHandleRemove(this);\n  },\n  _splitLine: function (axisModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        subPixelOptimize: true,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  },\n  _splitArea: function (axisModel) {\n    rectCoordAxisBuildSplitArea(this, this._axisGroup, axisModel, axisModel);\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}