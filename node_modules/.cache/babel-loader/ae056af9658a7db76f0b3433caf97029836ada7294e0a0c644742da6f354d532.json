{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar RoamController = require(\"./RoamController\");\nvar roamHelper = require(\"../../component/helper/roamHelper\");\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\nvar graphic = require(\"../../util/graphic\");\nvar geoSourceManager = require(\"../../coord/geo/geoSourceManager\");\nvar _component = require(\"../../util/component\");\nvar getUID = _component.getUID;\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getFixedItemStyle(model) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n  return itemStyle;\n}\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, regionsGroup, api, fromView) {\n  regionsGroup.off('click');\n  regionsGroup.off('mousedown');\n  if (mapOrGeoModel.get('selectedMode')) {\n    regionsGroup.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    regionsGroup.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n      while (!el.__regions) {\n        el = el.parent;\n      }\n      if (!el) {\n        return;\n      }\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, regionsGroup);\n    });\n  }\n}\nfunction updateMapSelected(mapOrGeoModel, regionsGroup) {\n  // FIXME\n  regionsGroup.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {string}\n   * @private\n   */\n\n  this.uid = getUID('ec_map_draw');\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n  /**\n   * @type {string}\n   */\n\n  this._mapName;\n  /**\n   * @type {boolean}\n   */\n\n  this._initialized;\n  /**\n   * @type {module:zrender/container/Group}\n   */\n\n  group.add(this._regionsGroup = new graphic.Group());\n  /**\n   * @type {module:zrender/container/Group}\n   */\n\n  group.add(this._backgroundGroup = new graphic.Group());\n}\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    this._updateBackground(geo);\n    var regionsGroup = this._regionsGroup;\n    var group = this.group;\n    var transformInfo = geo.getTransformInfo(); // No animation when first draw or in action\n\n    var isFirstDraw = !regionsGroup.childAt(0) || payload;\n    var targetScale;\n    if (isFirstDraw) {\n      group.transform = transformInfo.roamTransform;\n      group.decomposeTransform();\n      group.dirty();\n    } else {\n      var target = new Transformable();\n      target.transform = transformInfo.roamTransform;\n      target.decomposeTransform();\n      var props = {\n        scale: target.scale,\n        position: target.position\n      };\n      targetScale = target.scale;\n      graphic.updateProps(group, props, mapOrGeoModel);\n    }\n    var scale = transformInfo.rawScale;\n    var position = transformInfo.rawPosition;\n    regionsGroup.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        segmentIgnoreThreshold: 1,\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n      var transformPoint = function (point) {\n        return [point[0] * scale[0] + position[0], point[1] * scale[1] + position[1]];\n      };\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n        var points = [];\n        for (var i = 0; i < geometry.exterior.length; ++i) {\n          points.push(transformPoint(geometry.exterior[i]));\n        }\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          segmentIgnoreThreshold: 1,\n          shape: {\n            points: points\n          }\n        }));\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); ++i) {\n          var interior = geometry.interiors[i];\n          var points = [];\n          for (var j = 0; j < interior.length; ++j) {\n            points.push(transformPoint(interior[j]));\n          }\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            segmentIgnoreThreshold: 1,\n            shape: {\n              points: points\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n        var textEl = new graphic.Text({\n          position: transformPoint(region.center.slice()),\n          // FIXME\n          // label rotation is not support yet in geo or regions of series-map\n          // that has no data. The rotation will be effected by this `scale`.\n          // So needed to change to RectText?\n          scale: [1 / group.scale[0], 1 / group.scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        if (!isFirstDraw) {\n          // Text animation\n          var textScale = [1 / targetScale[0], 1 / targetScale[1]];\n          graphic.updateProps(textEl, {\n            scale: textScale\n          }, mapOrGeoModel);\n        }\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          componentIndex: mapOrGeoModel.componentIndex,\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      regionGroup.highDownSilentOnTouch = !!mapOrGeoModel.get('selectedMode');\n      graphic.setHoverStyle(regionGroup, hoverItemStyle);\n      regionsGroup.add(regionGroup);\n    });\n    this._updateController(mapOrGeoModel, ecModel, api);\n    updateMapSelectHandler(this, mapOrGeoModel, regionsGroup, api, fromView);\n    updateMapSelected(mapOrGeoModel, regionsGroup);\n  },\n  remove: function () {\n    this._regionsGroup.removeAll();\n    this._backgroundGroup.removeAll();\n    this._controller.dispose();\n    this._mapName && geoSourceManager.removeGraphic(this._mapName, this.uid);\n    this._mapName = null;\n    this._controllerHost = {};\n  },\n  _updateBackground: function (geo) {\n    var mapName = geo.map;\n    if (this._mapName !== mapName) {\n      zrUtil.each(geoSourceManager.makeGraphic(mapName, this.uid), function (root) {\n        this._backgroundGroup.add(root);\n      }, this);\n    }\n    this._mapName = mapName;\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n    controller.off('pan').on('pan', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: e.dx,\n        dy: e.dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      }));\n      if (this._updateGroup) {\n        var scale = this.group.scale;\n        this._regionsGroup.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","RoamController","roamHelper","_cursorHelper","onIrrelevantElement","graphic","geoSourceManager","_component","getUID","Transformable","getFixedItemStyle","model","itemStyle","getItemStyle","areaColor","get","fill","updateMapSelectHandler","mapDraw","mapOrGeoModel","regionsGroup","api","fromView","off","on","_mouseDownFlag","e","el","target","__regions","parent","action","type","mainType","batch","map","region","name","from","uid","id","dispatchAction","updateMapSelected","eachChild","otherRegionEl","each","trigger","isSelected","MapDraw","updateGroup","group","Group","_controller","getZr","_controllerHost","_updateGroup","_mapName","_initialized","add","_regionsGroup","_backgroundGroup","prototype","constructor","draw","ecModel","payload","isGeo","data","getData","eachComponent","subType","mapSeries","getHostGeoModel","geo","coordinateSystem","_updateBackground","transformInfo","getTransformInfo","isFirstDraw","childAt","targetScale","transform","roamTransform","decomposeTransform","dirty","props","scale","position","updateProps","rawScale","rawPosition","removeAll","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","nameMap","createHashMap","regions","regionGroup","set","compoundPath","CompoundPath","segmentIgnoreThreshold","shape","paths","regionModel","getRegionModel","itemStyleModel","getModel","hoverItemStyleModel","hoverItemStyle","labelModel","hoverLabelModel","dataIdx","indexOfName","visualColor","getItemVisual","transformPoint","point","geometries","geometry","points","i","exterior","length","push","Polygon","interiors","interior","j","setStyle","style","strokeNoScale","culling","showLabel","hoverShowLabel","isDataNaN","isNaN","mapDimension","itemLayout","getItemLayout","query","labelFetcher","textEl","Text","center","slice","z2","silent","setLabelStyle","hoverStyle","labelDataIndex","defaultText","useInsideStyle","textAlign","textVerticalAlign","textScale","setItemGraphicEl","eventData","componentType","componentIndex","geoIndex","option","groupRegions","highDownSilentOnTouch","setHoverStyle","_updateController","remove","dispose","removeGraphic","mapName","makeGraphic","root","controller","controllerHost","zoomLimit","zoom","getZoom","enable","makeActionBase","updateViewOnPan","dx","dy","extend","updateViewOnZoom","originX","originY","traverse","attr","setPointerChecker","x","y","getViewRectAfterRoam","contain","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/component/helper/MapDraw.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar geoSourceManager = require(\"../../coord/geo/geoSourceManager\");\n\nvar _component = require(\"../../util/component\");\n\nvar getUID = _component.getUID;\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getFixedItemStyle(model) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, regionsGroup, api, fromView) {\n  regionsGroup.off('click');\n  regionsGroup.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    regionsGroup.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    regionsGroup.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, regionsGroup);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, regionsGroup) {\n  // FIXME\n  regionsGroup.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {string}\n   * @private\n   */\n\n  this.uid = getUID('ec_map_draw');\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n  /**\n   * @type {string}\n   */\n\n  this._mapName;\n  /**\n   * @type {boolean}\n   */\n\n  this._initialized;\n  /**\n   * @type {module:zrender/container/Group}\n   */\n\n  group.add(this._regionsGroup = new graphic.Group());\n  /**\n   * @type {module:zrender/container/Group}\n   */\n\n  group.add(this._backgroundGroup = new graphic.Group());\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n\n    this._updateBackground(geo);\n\n    var regionsGroup = this._regionsGroup;\n    var group = this.group;\n    var transformInfo = geo.getTransformInfo(); // No animation when first draw or in action\n\n    var isFirstDraw = !regionsGroup.childAt(0) || payload;\n    var targetScale;\n\n    if (isFirstDraw) {\n      group.transform = transformInfo.roamTransform;\n      group.decomposeTransform();\n      group.dirty();\n    } else {\n      var target = new Transformable();\n      target.transform = transformInfo.roamTransform;\n      target.decomposeTransform();\n      var props = {\n        scale: target.scale,\n        position: target.position\n      };\n      targetScale = target.scale;\n      graphic.updateProps(group, props, mapOrGeoModel);\n    }\n\n    var scale = transformInfo.rawScale;\n    var position = transformInfo.rawPosition;\n    regionsGroup.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        segmentIgnoreThreshold: 1,\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      var transformPoint = function (point) {\n        return [point[0] * scale[0] + position[0], point[1] * scale[1] + position[1]];\n      };\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        var points = [];\n\n        for (var i = 0; i < geometry.exterior.length; ++i) {\n          points.push(transformPoint(geometry.exterior[i]));\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          segmentIgnoreThreshold: 1,\n          shape: {\n            points: points\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); ++i) {\n          var interior = geometry.interiors[i];\n          var points = [];\n\n          for (var j = 0; j < interior.length; ++j) {\n            points.push(transformPoint(interior[j]));\n          }\n\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            segmentIgnoreThreshold: 1,\n            shape: {\n              points: points\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: transformPoint(region.center.slice()),\n          // FIXME\n          // label rotation is not support yet in geo or regions of series-map\n          // that has no data. The rotation will be effected by this `scale`.\n          // So needed to change to RectText?\n          scale: [1 / group.scale[0], 1 / group.scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n\n        if (!isFirstDraw) {\n          // Text animation\n          var textScale = [1 / targetScale[0], 1 / targetScale[1]];\n          graphic.updateProps(textEl, {\n            scale: textScale\n          }, mapOrGeoModel);\n        }\n\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          componentIndex: mapOrGeoModel.componentIndex,\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      regionGroup.highDownSilentOnTouch = !!mapOrGeoModel.get('selectedMode');\n      graphic.setHoverStyle(regionGroup, hoverItemStyle);\n      regionsGroup.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, regionsGroup, api, fromView);\n    updateMapSelected(mapOrGeoModel, regionsGroup);\n  },\n  remove: function () {\n    this._regionsGroup.removeAll();\n\n    this._backgroundGroup.removeAll();\n\n    this._controller.dispose();\n\n    this._mapName && geoSourceManager.removeGraphic(this._mapName, this.uid);\n    this._mapName = null;\n    this._controllerHost = {};\n  },\n  _updateBackground: function (geo) {\n    var mapName = geo.map;\n\n    if (this._mapName !== mapName) {\n      zrUtil.each(geoSourceManager.makeGraphic(mapName, this.uid), function (root) {\n        this._backgroundGroup.add(root);\n      }, this);\n    }\n\n    this._mapName = mapName;\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: e.dx,\n        dy: e.dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      }));\n\n      if (this._updateGroup) {\n        var scale = this.group.scale;\n\n        this._regionsGroup.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}