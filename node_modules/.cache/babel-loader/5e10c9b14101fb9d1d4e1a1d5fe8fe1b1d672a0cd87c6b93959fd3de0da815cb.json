{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\nvar View = require(\"../View\");\nvar geoSourceManager = require(\"./geoSourceManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Geo description]\n * For backward compatibility, the orginal interface:\n * `name, map, geoJson, specialAreas, nameMap` is kept.\n *\n * @param {string|Object} name\n * @param {string} map Map type\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n * @param {boolean} [invertLongitute=true]\n */\nfunction Geo(name, map, nameMap, invertLongitute) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  var source = geoSourceManager.load(map, nameMap);\n  this._nameCoordMap = source.nameCoordMap;\n  this._regionsMap = source.regionsMap;\n  this._invertLongitute = invertLongitute == null ? true : invertLongitute;\n  /**\n   * @readOnly\n   */\n\n  this.regions = source.regions;\n  /**\n   * @type {module:zrender/src/core/BoundingRect}\n   */\n\n  this._rect = source.boundingRect;\n}\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n    return false;\n  },\n  /**\n   * @override\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var invertLongitute = this._invertLongitute;\n    rect = rect.clone();\n    if (invertLongitute) {\n      // Longitute is inverted\n      rect.y = -rect.y - rect.height;\n    }\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n    if (invertLongitute) {\n      var scale = rawTransformable.scale;\n      scale[1] = -scale[1];\n    }\n    rawTransformable.updateTransform();\n    this._updateTransform();\n  },\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n  /**\n   * @override\n   */\n  getBoundingRect: function () {\n    return this._rect;\n  },\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n  /**\n   * @override\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n  /**\n   * @override\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\nvar _default = Geo;\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","BoundingRect","View","geoSourceManager","Geo","name","map","nameMap","invertLongitute","call","source","load","_nameCoordMap","nameCoordMap","_regionsMap","regionsMap","_invertLongitute","regions","_rect","boundingRect","prototype","constructor","type","dimensions","containCoord","coord","i","length","contain","transformTo","x","y","width","height","rect","getBoundingRect","clone","rawTransformable","_rawTransformable","transform","calculateTransform","decomposeTransform","scale","updateTransform","_updateTransform","getRegion","get","getRegionByCoord","addGeoCoord","geoCoord","set","getGeoCoord","dataToPoint","data","noRoam","out","convertToPixel","curry","doConvert","convertFromPixel","mixin","methodName","ecModel","finder","value","geoModel","seriesModel","coordSys","coordinateSystem","getReferringComponents","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/coord/geo/Geo.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar View = require(\"../View\");\n\nvar geoSourceManager = require(\"./geoSourceManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Geo description]\n * For backward compatibility, the orginal interface:\n * `name, map, geoJson, specialAreas, nameMap` is kept.\n *\n * @param {string|Object} name\n * @param {string} map Map type\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n * @param {boolean} [invertLongitute=true]\n */\nfunction Geo(name, map, nameMap, invertLongitute) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  var source = geoSourceManager.load(map, nameMap);\n  this._nameCoordMap = source.nameCoordMap;\n  this._regionsMap = source.regionsMap;\n  this._invertLongitute = invertLongitute == null ? true : invertLongitute;\n  /**\n   * @readOnly\n   */\n\n  this.regions = source.regions;\n  /**\n   * @type {module:zrender/src/core/BoundingRect}\n   */\n\n  this._rect = source.boundingRect;\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @override\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var invertLongitute = this._invertLongitute;\n    rect = rect.clone();\n\n    if (invertLongitute) {\n      // Longitute is inverted\n      rect.y = -rect.y - rect.height;\n    }\n\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n\n    if (invertLongitute) {\n      var scale = rawTransformable.scale;\n      scale[1] = -scale[1];\n    }\n\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n\n  /**\n   * @override\n   */\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @override\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @override\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}