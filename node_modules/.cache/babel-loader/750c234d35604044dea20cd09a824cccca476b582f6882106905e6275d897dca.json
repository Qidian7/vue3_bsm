{"ast":null,"code":"var Displayable = require(\"./Displayable\");\nvar zrUtil = require(\"../core/util\");\nvar textContain = require(\"../contain/text\");\nvar textHelper = require(\"./helper/text\");\nvar _constant = require(\"./constant\");\nvar ContextCachedBy = _constant.ContextCachedBy;\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Do not apply style.bind in Text node. Because the real bind job\n    // is in textHelper.renderText, and performance of text render should\n    // be considered.\n    // style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      // The current el.style is not applied\n      // and should not be used as cache.\n      ctx.__attrCachedBy = ContextCachedBy.NONE;\n      return;\n    }\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style, null, prevEl);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.textLineHeight, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n      this._rect = rect;\n    }\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;","map":{"version":3,"names":["Displayable","require","zrUtil","textContain","textHelper","_constant","ContextCachedBy","Text","opts","call","prototype","constructor","type","brush","ctx","prevEl","style","__dirty","normalizeTextStyle","fill","stroke","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","text","needDrawText","__attrCachedBy","NONE","setTransform","renderText","restoreTransform","getBoundingRect","_rect","rect","font","textAlign","textVerticalAlign","textPadding","textLineHeight","rich","x","y","getStroke","textStroke","textStrokeWidth","w","width","height","inherits","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/zrender/lib/graphic/Text.js"],"sourcesContent":["var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\nvar _constant = require(\"./constant\");\n\nvar ContextCachedBy = _constant.ContextCachedBy;\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Do not apply style.bind in Text node. Because the real bind job\n    // is in textHelper.renderText, and performance of text render should\n    // be considered.\n    // style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      // The current el.style is not applied\n      // and should not be used as cache.\n      ctx.__attrCachedBy = ContextCachedBy.NONE;\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style, null, prevEl);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.textLineHeight, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}