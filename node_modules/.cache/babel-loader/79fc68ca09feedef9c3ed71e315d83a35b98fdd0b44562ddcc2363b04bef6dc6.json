{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\nvar visualSolution = require(\"../../visual/visualSolution\");\nvar selector = require(\"./selector\");\nvar throttleUtil = require(\"../../util/throttle\");\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n  });\n  layoutCovers(ecModel);\n});\nfunction layoutCovers(ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n}\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n  var zr = api.getZr();\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n  return brushSelector;\n}\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}\nexports.layoutCovers = layoutCovers;","map":{"version":3,"names":["echarts","require","zrUtil","BoundingRect","visualSolution","selector","throttleUtil","BrushTargetManager","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","PRIORITY","VISUAL","BRUSH","registerLayout","ecModel","api","payload","eachComponent","mainType","brushModel","type","setBrushOption","key","brushOption","brushType","layoutCovers","brushTargetManager","option","setInputRanges","areas","registerVisual","brushSelected","throttleType","throttleDelay","brushIndex","thisBrushSelected","brushId","id","brushName","name","clone","selected","push","brushLink","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","map","area","bindSelector","defaults","boundingRect","boundingRectBuilders","visualMappings","createVisualMappings","mappingOption","mappingMethod","isArray","each","seriesIndex","linkOthers","brushed","rangeInfoList","length","eachSeries","seriesModel","subType","stepAParallel","stepAOthers","coordSys","coordinateSystem","hasAxisBrushed","eachActiveState","getData","activeState","dataIndex","selectorsByBrushType","getSelectorsByBrushType","brushModelNotControll","controlSeries","data","checkInRange","seriesBrushSelected","seriesId","seriesName","getValueState","getRawIndex","applyVisual","dispatchAction","zr","getZr","doDispatch","fn","createOrUpdate","isDisposed","batch","i","len","selectors","brushSelector","isString","sels","selectorsByElementType","itemLayout","getItemLayout","isFunction","bSelector","sel","seriesIndices","indexOf","selFn","elType","lineX","noop","lineY","rect","getBoundingRectFromMinMax","range","polygon","minMax","Infinity","rg","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/component/brush/visualEncoding.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n  });\n  layoutCovers(ecModel);\n});\n\nfunction layoutCovers(ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n}\n/**\n * Register the visual encoding if this modules required.\n */\n\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}\n\nexports.layoutCovers = layoutCovers;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}