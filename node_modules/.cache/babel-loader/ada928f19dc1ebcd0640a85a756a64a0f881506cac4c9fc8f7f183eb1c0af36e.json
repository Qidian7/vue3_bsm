{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../../echarts\");\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar eventTool = require(\"zrender/lib/core/event\");\nvar lang = require(\"../../../lang\");\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      var rawData = series.getRawData();\n      columns.push(series.getRawData().mapArray(rawData.mapDimension(valueAxisDim), function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n      lines.push(items.join(ITEM_SPLITER));\n    }\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n  for (var i = 0; i < lines.length; i++) {\n    // if line is empty, ignore it.\n    // there is a case that a user forgot to delete `\\n`.\n    var line = trim(lines[i]);\n    if (!line) {\n      continue;\n    }\n    var items = line.split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton);\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      var newValIsObject = zrUtil.isObject(newVal) && !zrUtil.isArray(newVal);\n      if (!newValIsObject) {\n        newVal = {\n          value: newVal\n        };\n      } // original data has name but new data has no name\n\n      var shouldDeleteName = original.name != null && newVal.name == null; // Original data has option\n\n      newVal = zrUtil.defaults(newVal, original);\n      shouldDeleteName && delete newVal.name;\n      return newVal;\n    } else {\n      return newVal;\n    }\n  });\n}\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","map":{"version":3,"names":["echarts","require","zrUtil","eventTool","lang","featureManager","dataViewLang","toolbox","dataView","BLOCK_SPLITER","Array","join","ITEM_SPLITER","groupSeries","ecModel","seriesGroupByCategoryAxis","otherSeries","meta","eachRawSeries","seriesModel","coordSys","coordinateSystem","type","baseAxis","getBaseAxis","key","dim","index","categoryAxis","valueAxis","getOtherAxis","series","push","axisDim","axisIndex","other","assembleSeriesWithCategoryAxis","tables","each","group","valueAxisDim","headers","concat","map","name","columns","model","getCategories","rawData","getRawData","mapArray","mapDimension","val","lines","i","length","items","j","assembleOtherSeries","data","vals","dimensions","argLen","arguments","dataIndex","getName","getContentFromModel","result","value","filter","str","replace","trim","isTSVFormat","block","firstLine","slice","indexOf","itemSplitRegex","RegExp","parseTSVContents","tsv","tsvLines","split","shift","categories","header","parseListContents","seriesName","line","hasName","isNaN","parseContents","blockMetaList","blocks","newOption","idx","blockMeta","axisKey","DataView","_dom","defaultOption","show","readOnly","optionToContent","contentToOption","icon","title","clone","backgroundColor","textColor","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","prototype","onclick","api","container","getDom","removeChild","root","document","createElement","style","cssText","get","innerHTML","color","viewMain","textarea","htmlOrDom","getOption","isDom","appendChild","borderColor","buttonContainer","buttonStyle","closeButton","refreshButton","self","close","addEventListener","e","Error","dispatchAction","height","clientHeight","remove","dispose","tryMergeDataOption","newData","originalData","newVal","original","isObject","isArray","newValIsObject","shouldDeleteName","defaults","register","registerAction","event","update","payload","newSeriesOptList","seriesOpt","getSeriesByName","extend","mergeOption","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/component/toolbox/feature/DataView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      var rawData = series.getRawData();\n      columns.push(series.getRawData().mapArray(rawData.mapDimension(valueAxisDim), function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    // if line is empty, ignore it.\n    // there is a case that a user forgot to delete `\\n`.\n    var line = trim(lines[i]);\n\n    if (!line) {\n      continue;\n    }\n\n    var items = line.split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton);\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      var newValIsObject = zrUtil.isObject(newVal) && !zrUtil.isArray(newVal);\n\n      if (!newValIsObject) {\n        newVal = {\n          value: newVal\n        };\n      } // original data has name but new data has no name\n\n\n      var shouldDeleteName = original.name != null && newVal.name == null; // Original data has option\n\n      newVal = zrUtil.defaults(newVal, original);\n      shouldDeleteName && delete newVal.name;\n      return newVal;\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}