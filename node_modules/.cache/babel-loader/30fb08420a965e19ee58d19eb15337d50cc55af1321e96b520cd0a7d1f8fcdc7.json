{"ast":null,"code":"require(\"core-js/modules/esnext.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/esnext.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/esnext.typed-array.with.js\");\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\n\n/* global Float32Array */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;","map":{"version":3,"names":["ArrayCtor","Float32Array","Array","create","out","identity","copy","m","mul","m1","m2","out0","out1","out2","out3","out4","out5","translate","a","v","rotate","rad","aa","ac","atx","ab","ad","aty","st","Math","sin","ct","cos","scale","vx","vy","invert","det","clone","b","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/zrender/lib/core/matrix.js"],"sourcesContent":["/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\n\n/* global Float32Array */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}