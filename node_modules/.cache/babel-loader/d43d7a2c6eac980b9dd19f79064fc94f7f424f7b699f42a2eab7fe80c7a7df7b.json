{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nvar env = require(\"./env\");\nvar _fourPointsTransform = require(\"./fourPointsTransform\");\nvar buildTransformer = _fourPointsTransform.buildTransformer;\nvar EVENT_SAVED_PROP = '___zrEVENTSAVED';\nvar _calcOut = [];\n/**\n * Transform \"local coord\" from `elFrom` to `elTarget`.\n * \"local coord\": the coord based on the input `el`. The origin point is at\n *     the position of \"left: 0; top: 0;\" in the `el`.\n *\n * Support when CSS transform is used.\n *\n * Having the `out` (that is, `[outX, outY]`), we can create an DOM element\n * and set the CSS style as \"left: outX; top: outY;\" and append it to `elTarge`\n * to locate the element.\n *\n * For example, this code below positions a child of `document.body` on the event\n * point, no matter whether `body` has `margin`/`paddin`/`transfrom`/... :\n * ```js\n * transformLocalCoord(out, container, document.body, event.offsetX, event.offsetY);\n * if (!eqNaN(out[0])) {\n *     // Then locate the tip element on the event point.\n *     var tipEl = document.createElement('div');\n *     tipEl.style.cssText = 'position: absolute; left:' + out[0] + ';top:' + out[1] + ';';\n *     document.body.appendChild(tipEl);\n * }\n * ```\n *\n * Notice: In some env this method is not supported. If called, `out` will be `[NaN, NaN]`.\n *\n * @param {Array.<number>} out [inX: number, inY: number] The output..\n *        If can not transform, `out` will not be modified but return `false`.\n * @param {HTMLElement} elFrom The `[inX, inY]` is based on elFrom.\n * @param {HTMLElement} elTarget The `out` is based on elTarget.\n * @param {number} inX\n * @param {number} inY\n * @return {boolean} Whether transform successfully.\n */\n\nfunction transformLocalCoord(out, elFrom, elTarget, inX, inY) {\n  return transformCoordWithViewport(_calcOut, elFrom, inX, inY, true) && transformCoordWithViewport(out, elTarget, _calcOut[0], _calcOut[1]);\n}\n/**\n * Transform between a \"viewport coord\" and a \"local coord\".\n * \"viewport coord\": the coord based on the left-top corner of the viewport\n *     of the browser.\n * \"local coord\": the coord based on the input `el`. The origin point is at\n *     the position of \"left: 0; top: 0;\" in the `el`.\n *\n * Support the case when CSS transform is used on el.\n *\n * @param {Array.<number>} out [inX: number, inY: number] The output. If `inverse: false`,\n *        it represents \"local coord\", otherwise \"vireport coord\".\n *        If can not transform, `out` will not be modified but return `false`.\n * @param {HTMLElement} el The \"local coord\" is based on the `el`, see comment above.\n * @param {number} inX If `inverse: false`,\n *        it represents \"vireport coord\", otherwise \"local coord\".\n * @param {number} inY If `inverse: false`,\n *        it represents \"vireport coord\", otherwise \"local coord\".\n * @param {boolean} [inverse=false]\n *        `true`: from \"viewport coord\" to \"local coord\".\n *        `false`: from \"local coord\" to \"viewport coord\".\n * @return {boolean} Whether transform successfully.\n */\n\nfunction transformCoordWithViewport(out, el, inX, inY, inverse) {\n  if (el.getBoundingClientRect && env.domSupported && !isCanvasEl(el)) {\n    var saved = el[EVENT_SAVED_PROP] || (el[EVENT_SAVED_PROP] = {});\n    var markers = prepareCoordMarkers(el, saved);\n    var transformer = preparePointerTransformer(markers, saved, inverse);\n    if (transformer) {\n      transformer(out, inX, inY);\n      return true;\n    }\n  }\n  return false;\n}\nfunction prepareCoordMarkers(el, saved) {\n  var markers = saved.markers;\n  if (markers) {\n    return markers;\n  }\n  markers = saved.markers = [];\n  var propLR = ['left', 'right'];\n  var propTB = ['top', 'bottom'];\n  for (var i = 0; i < 4; i++) {\n    var marker = document.createElement('div');\n    var stl = marker.style;\n    var idxLR = i % 2;\n    var idxTB = (i >> 1) % 2;\n    stl.cssText = ['position: absolute', 'visibility: hidden', 'padding: 0', 'margin: 0', 'border-width: 0', 'user-select: none', 'width:0', 'height:0',\n    // 'width: 5px',\n    // 'height: 5px',\n    propLR[idxLR] + ':0', propTB[idxTB] + ':0', propLR[1 - idxLR] + ':auto', propTB[1 - idxTB] + ':auto', ''].join('!important;');\n    el.appendChild(marker);\n    markers.push(marker);\n  }\n  return markers;\n}\nfunction preparePointerTransformer(markers, saved, inverse) {\n  var transformerName = inverse ? 'invTrans' : 'trans';\n  var transformer = saved[transformerName];\n  var oldSrcCoords = saved.srcCoords;\n  var oldCoordTheSame = true;\n  var srcCoords = [];\n  var destCoords = [];\n  for (var i = 0; i < 4; i++) {\n    var rect = markers[i].getBoundingClientRect();\n    var ii = 2 * i;\n    var x = rect.left;\n    var y = rect.top;\n    srcCoords.push(x, y);\n    oldCoordTheSame = oldCoordTheSame && oldSrcCoords && x === oldSrcCoords[ii] && y === oldSrcCoords[ii + 1];\n    destCoords.push(markers[i].offsetLeft, markers[i].offsetTop);\n  } // Cache to avoid time consuming of `buildTransformer`.\n\n  return oldCoordTheSame && transformer ? transformer : (saved.srcCoords = srcCoords, saved[transformerName] = inverse ? buildTransformer(destCoords, srcCoords) : buildTransformer(srcCoords, destCoords));\n}\nfunction isCanvasEl(el) {\n  return el.nodeName.toUpperCase() === 'CANVAS';\n}\nexports.transformLocalCoord = transformLocalCoord;\nexports.transformCoordWithViewport = transformCoordWithViewport;\nexports.isCanvasEl = isCanvasEl;","map":{"version":3,"names":["env","require","_fourPointsTransform","buildTransformer","EVENT_SAVED_PROP","_calcOut","transformLocalCoord","out","elFrom","elTarget","inX","inY","transformCoordWithViewport","el","inverse","getBoundingClientRect","domSupported","isCanvasEl","saved","markers","prepareCoordMarkers","transformer","preparePointerTransformer","propLR","propTB","i","marker","document","createElement","stl","style","idxLR","idxTB","cssText","join","appendChild","push","transformerName","oldSrcCoords","srcCoords","oldCoordTheSame","destCoords","rect","ii","x","left","y","top","offsetLeft","offsetTop","nodeName","toUpperCase","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/zrender/lib/core/dom.js"],"sourcesContent":["var env = require(\"./env\");\n\nvar _fourPointsTransform = require(\"./fourPointsTransform\");\n\nvar buildTransformer = _fourPointsTransform.buildTransformer;\nvar EVENT_SAVED_PROP = '___zrEVENTSAVED';\nvar _calcOut = [];\n/**\n * Transform \"local coord\" from `elFrom` to `elTarget`.\n * \"local coord\": the coord based on the input `el`. The origin point is at\n *     the position of \"left: 0; top: 0;\" in the `el`.\n *\n * Support when CSS transform is used.\n *\n * Having the `out` (that is, `[outX, outY]`), we can create an DOM element\n * and set the CSS style as \"left: outX; top: outY;\" and append it to `elTarge`\n * to locate the element.\n *\n * For example, this code below positions a child of `document.body` on the event\n * point, no matter whether `body` has `margin`/`paddin`/`transfrom`/... :\n * ```js\n * transformLocalCoord(out, container, document.body, event.offsetX, event.offsetY);\n * if (!eqNaN(out[0])) {\n *     // Then locate the tip element on the event point.\n *     var tipEl = document.createElement('div');\n *     tipEl.style.cssText = 'position: absolute; left:' + out[0] + ';top:' + out[1] + ';';\n *     document.body.appendChild(tipEl);\n * }\n * ```\n *\n * Notice: In some env this method is not supported. If called, `out` will be `[NaN, NaN]`.\n *\n * @param {Array.<number>} out [inX: number, inY: number] The output..\n *        If can not transform, `out` will not be modified but return `false`.\n * @param {HTMLElement} elFrom The `[inX, inY]` is based on elFrom.\n * @param {HTMLElement} elTarget The `out` is based on elTarget.\n * @param {number} inX\n * @param {number} inY\n * @return {boolean} Whether transform successfully.\n */\n\nfunction transformLocalCoord(out, elFrom, elTarget, inX, inY) {\n  return transformCoordWithViewport(_calcOut, elFrom, inX, inY, true) && transformCoordWithViewport(out, elTarget, _calcOut[0], _calcOut[1]);\n}\n/**\n * Transform between a \"viewport coord\" and a \"local coord\".\n * \"viewport coord\": the coord based on the left-top corner of the viewport\n *     of the browser.\n * \"local coord\": the coord based on the input `el`. The origin point is at\n *     the position of \"left: 0; top: 0;\" in the `el`.\n *\n * Support the case when CSS transform is used on el.\n *\n * @param {Array.<number>} out [inX: number, inY: number] The output. If `inverse: false`,\n *        it represents \"local coord\", otherwise \"vireport coord\".\n *        If can not transform, `out` will not be modified but return `false`.\n * @param {HTMLElement} el The \"local coord\" is based on the `el`, see comment above.\n * @param {number} inX If `inverse: false`,\n *        it represents \"vireport coord\", otherwise \"local coord\".\n * @param {number} inY If `inverse: false`,\n *        it represents \"vireport coord\", otherwise \"local coord\".\n * @param {boolean} [inverse=false]\n *        `true`: from \"viewport coord\" to \"local coord\".\n *        `false`: from \"local coord\" to \"viewport coord\".\n * @return {boolean} Whether transform successfully.\n */\n\n\nfunction transformCoordWithViewport(out, el, inX, inY, inverse) {\n  if (el.getBoundingClientRect && env.domSupported && !isCanvasEl(el)) {\n    var saved = el[EVENT_SAVED_PROP] || (el[EVENT_SAVED_PROP] = {});\n    var markers = prepareCoordMarkers(el, saved);\n    var transformer = preparePointerTransformer(markers, saved, inverse);\n\n    if (transformer) {\n      transformer(out, inX, inY);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction prepareCoordMarkers(el, saved) {\n  var markers = saved.markers;\n\n  if (markers) {\n    return markers;\n  }\n\n  markers = saved.markers = [];\n  var propLR = ['left', 'right'];\n  var propTB = ['top', 'bottom'];\n\n  for (var i = 0; i < 4; i++) {\n    var marker = document.createElement('div');\n    var stl = marker.style;\n    var idxLR = i % 2;\n    var idxTB = (i >> 1) % 2;\n    stl.cssText = ['position: absolute', 'visibility: hidden', 'padding: 0', 'margin: 0', 'border-width: 0', 'user-select: none', 'width:0', 'height:0', // 'width: 5px',\n    // 'height: 5px',\n    propLR[idxLR] + ':0', propTB[idxTB] + ':0', propLR[1 - idxLR] + ':auto', propTB[1 - idxTB] + ':auto', ''].join('!important;');\n    el.appendChild(marker);\n    markers.push(marker);\n  }\n\n  return markers;\n}\n\nfunction preparePointerTransformer(markers, saved, inverse) {\n  var transformerName = inverse ? 'invTrans' : 'trans';\n  var transformer = saved[transformerName];\n  var oldSrcCoords = saved.srcCoords;\n  var oldCoordTheSame = true;\n  var srcCoords = [];\n  var destCoords = [];\n\n  for (var i = 0; i < 4; i++) {\n    var rect = markers[i].getBoundingClientRect();\n    var ii = 2 * i;\n    var x = rect.left;\n    var y = rect.top;\n    srcCoords.push(x, y);\n    oldCoordTheSame = oldCoordTheSame && oldSrcCoords && x === oldSrcCoords[ii] && y === oldSrcCoords[ii + 1];\n    destCoords.push(markers[i].offsetLeft, markers[i].offsetTop);\n  } // Cache to avoid time consuming of `buildTransformer`.\n\n\n  return oldCoordTheSame && transformer ? transformer : (saved.srcCoords = srcCoords, saved[transformerName] = inverse ? buildTransformer(destCoords, srcCoords) : buildTransformer(srcCoords, destCoords));\n}\n\nfunction isCanvasEl(el) {\n  return el.nodeName.toUpperCase() === 'CANVAS';\n}\n\nexports.transformLocalCoord = transformLocalCoord;\nexports.transformCoordWithViewport = transformCoordWithViewport;\nexports.isCanvasEl = isCanvasEl;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}