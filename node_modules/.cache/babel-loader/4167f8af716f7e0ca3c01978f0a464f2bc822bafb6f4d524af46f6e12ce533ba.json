{"ast":null,"code":"var _core = require(\"../core\");\nvar createElement = _core.createElement;\nvar zrUtil = require(\"../../core/util\");\nvar Path = require(\"../../graphic/Path\");\nvar ZImage = require(\"../../graphic/Image\");\nvar ZText = require(\"../../graphic/Text\");\nvar _graphic = require(\"../graphic\");\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {number}          zrId      zrender instance id\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(zrId, svgRoot, tagNames, markLabel, domName) {\n  this._zrId = zrId;\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this._domName = domName || '_dom';\n  this.nextId = 0;\n}\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n  var defs = this._svgRoot.getElementsByTagName('defs');\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'),\n      // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n          if (!children) {\n            return false;\n          }\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n          return false;\n        };\n      }\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n  var defs = this.getDefs(false);\n  if (element[this._domName] && defs.contains(element[this._domName])) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate(element);\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n    if (dom) {\n      element[this._domName] = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n  if (defs && element[this._domName]) {\n    defs.removeChild(element[this._domName]);\n    element[this._domName] = null;\n  }\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\nvar _default = Definable;\nmodule.exports = _default;","map":{"version":3,"names":["_core","require","createElement","zrUtil","Path","ZImage","ZText","_graphic","svgPath","path","svgImage","image","svgText","text","MARK_UNUSED","MARK_USED","Definable","zrId","svgRoot","tagNames","markLabel","domName","_zrId","_svgRoot","_tagNames","_markLabel","_domName","nextId","prototype","getDefs","isForceCreating","defs","getElementsByTagName","length","insertBefore","firstChild","contains","el","children","i","update","element","onUpdate","dom","add","addDom","appendChild","removeDom","removeChild","getDoms","doms","each","tagName","tags","concat","slice","call","markAllUnused","that","markUsed","removeUnused","getSvgProxy","displayable","getTextSvgElement","__textSvgEl","getSvgElement","__svgEl","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/zrender/lib/svg/helper/Definable.js"],"sourcesContent":["var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {number}          zrId      zrender instance id\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(zrId, svgRoot, tagNames, markLabel, domName) {\n  this._zrId = zrId;\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this._domName = domName || '_dom';\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element[this._domName] && defs.contains(element[this._domName])) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate(element);\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element[this._domName] = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n\n  if (defs && element[this._domName]) {\n    defs.removeChild(element[this._domName]);\n    element[this._domName] = null;\n  }\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}