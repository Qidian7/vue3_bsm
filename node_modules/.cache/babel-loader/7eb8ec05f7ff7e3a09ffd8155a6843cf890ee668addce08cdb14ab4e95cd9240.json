{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _parseSVG = require(\"zrender/lib/tool/parseSVG\");\nvar parseSVG = _parseSVG.parseSVG;\nvar makeViewBoxTransform = _parseSVG.makeViewBoxTransform;\nvar Group = require(\"zrender/lib/container/Group\");\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\nvar _util = require(\"zrender/lib/core/util\");\nvar assert = _util.assert;\nvar createHashMap = _util.createHashMap;\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\nvar _model = require(\"../../util/model\");\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar _default = {\n  /**\n   * @param {string} mapName\n   * @param {Object} mapRecord {specialAreas, geoJSON}\n   * @return {Object} {root, boundingRect}\n   */\n  load: function (mapName, mapRecord) {\n    var originRoot = inner(mapRecord).originRoot;\n    if (originRoot) {\n      return {\n        root: originRoot,\n        boundingRect: inner(mapRecord).boundingRect\n      };\n    }\n    var graphic = buildGraphic(mapRecord);\n    inner(mapRecord).originRoot = graphic.root;\n    inner(mapRecord).boundingRect = graphic.boundingRect;\n    return graphic;\n  },\n  makeGraphic: function (mapName, mapRecord, hostKey) {\n    // For performance consideration (in large SVG), graphic only maked\n    // when necessary and reuse them according to hostKey.\n    var field = inner(mapRecord);\n    var rootMap = field.rootMap || (field.rootMap = createHashMap());\n    var root = rootMap.get(hostKey);\n    if (root) {\n      return root;\n    }\n    var originRoot = field.originRoot;\n    var boundingRect = field.boundingRect; // For performance, if originRoot is not used by a view,\n    // assign it to a view, but not reproduce graphic elements.\n\n    if (!field.originRootHostKey) {\n      field.originRootHostKey = hostKey;\n      root = originRoot;\n    } else {\n      root = buildGraphic(mapRecord, boundingRect).root;\n    }\n    return rootMap.set(hostKey, root);\n  },\n  removeGraphic: function (mapName, mapRecord, hostKey) {\n    var field = inner(mapRecord);\n    var rootMap = field.rootMap;\n    rootMap && rootMap.removeKey(hostKey);\n    if (hostKey === field.originRootHostKey) {\n      field.originRootHostKey = null;\n    }\n  }\n};\nfunction buildGraphic(mapRecord, boundingRect) {\n  var svgXML = mapRecord.svgXML;\n  var result;\n  var root;\n  try {\n    result = svgXML && parseSVG(svgXML, {\n      ignoreViewBox: true,\n      ignoreRootClip: true\n    }) || {};\n    root = result.root;\n    assert(root != null);\n  } catch (e) {\n    throw new Error('Invalid svg format\\n' + e.message);\n  }\n  var svgWidth = result.width;\n  var svgHeight = result.height;\n  var viewBoxRect = result.viewBoxRect;\n  if (!boundingRect) {\n    boundingRect = svgWidth == null || svgHeight == null ?\n    // If svg width / height not specified, calculate\n    // bounding rect as the width / height\n    root.getBoundingRect() : new BoundingRect(0, 0, 0, 0);\n    if (svgWidth != null) {\n      boundingRect.width = svgWidth;\n    }\n    if (svgHeight != null) {\n      boundingRect.height = svgHeight;\n    }\n  }\n  if (viewBoxRect) {\n    var viewBoxTransform = makeViewBoxTransform(viewBoxRect, boundingRect.width, boundingRect.height);\n    var elRoot = root;\n    root = new Group();\n    root.add(elRoot);\n    elRoot.scale = viewBoxTransform.scale;\n    elRoot.position = viewBoxTransform.position;\n  }\n  root.setClipPath(new Rect({\n    shape: boundingRect.plain()\n  }));\n  return {\n    root: root,\n    boundingRect: boundingRect\n  };\n}\nmodule.exports = _default;","map":{"version":3,"names":["_parseSVG","require","parseSVG","makeViewBoxTransform","Group","Rect","_util","assert","createHashMap","BoundingRect","_model","makeInner","inner","_default","load","mapName","mapRecord","originRoot","root","boundingRect","graphic","buildGraphic","makeGraphic","hostKey","field","rootMap","get","originRootHostKey","set","removeGraphic","removeKey","svgXML","result","ignoreViewBox","ignoreRootClip","e","Error","message","svgWidth","width","svgHeight","height","viewBoxRect","getBoundingRect","viewBoxTransform","elRoot","add","scale","position","setClipPath","shape","plain","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/coord/geo/geoSVGLoader.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _parseSVG = require(\"zrender/lib/tool/parseSVG\");\n\nvar parseSVG = _parseSVG.parseSVG;\nvar makeViewBoxTransform = _parseSVG.makeViewBoxTransform;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar createHashMap = _util.createHashMap;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar _default = {\n  /**\n   * @param {string} mapName\n   * @param {Object} mapRecord {specialAreas, geoJSON}\n   * @return {Object} {root, boundingRect}\n   */\n  load: function (mapName, mapRecord) {\n    var originRoot = inner(mapRecord).originRoot;\n\n    if (originRoot) {\n      return {\n        root: originRoot,\n        boundingRect: inner(mapRecord).boundingRect\n      };\n    }\n\n    var graphic = buildGraphic(mapRecord);\n    inner(mapRecord).originRoot = graphic.root;\n    inner(mapRecord).boundingRect = graphic.boundingRect;\n    return graphic;\n  },\n  makeGraphic: function (mapName, mapRecord, hostKey) {\n    // For performance consideration (in large SVG), graphic only maked\n    // when necessary and reuse them according to hostKey.\n    var field = inner(mapRecord);\n    var rootMap = field.rootMap || (field.rootMap = createHashMap());\n    var root = rootMap.get(hostKey);\n\n    if (root) {\n      return root;\n    }\n\n    var originRoot = field.originRoot;\n    var boundingRect = field.boundingRect; // For performance, if originRoot is not used by a view,\n    // assign it to a view, but not reproduce graphic elements.\n\n    if (!field.originRootHostKey) {\n      field.originRootHostKey = hostKey;\n      root = originRoot;\n    } else {\n      root = buildGraphic(mapRecord, boundingRect).root;\n    }\n\n    return rootMap.set(hostKey, root);\n  },\n  removeGraphic: function (mapName, mapRecord, hostKey) {\n    var field = inner(mapRecord);\n    var rootMap = field.rootMap;\n    rootMap && rootMap.removeKey(hostKey);\n\n    if (hostKey === field.originRootHostKey) {\n      field.originRootHostKey = null;\n    }\n  }\n};\n\nfunction buildGraphic(mapRecord, boundingRect) {\n  var svgXML = mapRecord.svgXML;\n  var result;\n  var root;\n\n  try {\n    result = svgXML && parseSVG(svgXML, {\n      ignoreViewBox: true,\n      ignoreRootClip: true\n    }) || {};\n    root = result.root;\n    assert(root != null);\n  } catch (e) {\n    throw new Error('Invalid svg format\\n' + e.message);\n  }\n\n  var svgWidth = result.width;\n  var svgHeight = result.height;\n  var viewBoxRect = result.viewBoxRect;\n\n  if (!boundingRect) {\n    boundingRect = svgWidth == null || svgHeight == null ? // If svg width / height not specified, calculate\n    // bounding rect as the width / height\n    root.getBoundingRect() : new BoundingRect(0, 0, 0, 0);\n\n    if (svgWidth != null) {\n      boundingRect.width = svgWidth;\n    }\n\n    if (svgHeight != null) {\n      boundingRect.height = svgHeight;\n    }\n  }\n\n  if (viewBoxRect) {\n    var viewBoxTransform = makeViewBoxTransform(viewBoxRect, boundingRect.width, boundingRect.height);\n    var elRoot = root;\n    root = new Group();\n    root.add(elRoot);\n    elRoot.scale = viewBoxTransform.scale;\n    elRoot.position = viewBoxTransform.position;\n  }\n\n  root.setClipPath(new Rect({\n    shape: boundingRect.plain()\n  }));\n  return {\n    root: root,\n    boundingRect: boundingRect\n  };\n}\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}