{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.shift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n      existence.push(i);\n    }\n  }\n}\nvar _default = DataDiffer;\nmodule.exports = _default;","map":{"version":3,"names":["defaultKeyGetter","item","DataDiffer","oldArr","newArr","oldKeyGetter","newKeyGetter","context","_old","_new","_oldKeyGetter","_newKeyGetter","prototype","constructor","add","func","_add","update","_update","remove","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","i","initIndexMap","length","key","idx","len","shift","hasOwnProperty","j","arr","map","keyArr","keyGetterName","dataDiffer","existence","push","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/data/DataDiffer.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.shift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}