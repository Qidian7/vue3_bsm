{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n    };\n\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n    if (!sourceNode) {\n      return result;\n    }\n    absorb(sourceNode, result);\n    var existsLink;\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n    return result;\n  };\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","map":{"version":3,"names":["zrUtil","require","formatUtil","AXIS_DIMS","COORDS","isCoordSupported","coordType","indexOf","createNameEach","names","attrs","slice","capitalNames","map","capitalFirst","capitalAttrs","callback","context","each","name","index","nameObj","capital","j","length","call","eachAxisDim","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","result","nodes","records","edgeType","absorb","existsLink","processSingleNode","node","isNodeAbsorded","isLinked","hasLink","edgeId","push","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/component/dataZoom/helper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}