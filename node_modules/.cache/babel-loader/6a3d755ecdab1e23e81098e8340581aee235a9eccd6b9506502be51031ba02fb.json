{"ast":null,"code":"require(\"core-js/modules/esnext.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/esnext.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/esnext.typed-array.with.js\");\nrequire(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n    function progress(params, lineData) {\n      var lineCoords = [];\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 4);\n        }\n        var offset = 0;\n        var pt = [];\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","map":{"version":3,"names":["createRenderPlanner","require","_default","seriesType","plan","reset","seriesModel","coordSys","coordinateSystem","isPolyline","get","isLarge","pipelineContext","large","progress","params","lineData","lineCoords","points","segCount","end","start","totalCoordsCount","i","getLineCoordsCount","Float32Array","offset","pt","len","getLineCoords","k","dataToPoint","setLayout","itemModel","getItemModel","pts","j","push","curveness","setItemLayout","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/chart/lines/linesLayout.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 4);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}