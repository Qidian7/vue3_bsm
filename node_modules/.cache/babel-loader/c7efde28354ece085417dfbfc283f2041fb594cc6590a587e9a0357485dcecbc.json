{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\nvar lineContain = require(\"zrender/lib/contain/line\");\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n    if (shape.polyline) {\n      var dataIndex = 0;\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n        dataIndex++;\n      }\n    }\n    return -1;\n  }\n});\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\nvar largeLineProto = LargeLineDraw.prototype;\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n  this._setCommon(lineEl, data); // Add back\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n  this._clearIncremental();\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n  this._setCommon(lineEl, data, !!this._incremental);\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n  this._incremental = null;\n  this.group.removeAll();\n};\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n  lineEl.setStyle('fill');\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\nvar _default = LargeLineDraw;\nmodule.exports = _default;","map":{"version":3,"names":["graphic","require","IncrementalDisplayable","lineContain","quadraticContain","LargeLineShape","extendShape","shape","polyline","curveness","segs","buildPath","path","i","length","count","moveTo","k","lineTo","x0","y0","x1","y1","x2","y2","quadraticCurveTo","findDataIndex","x","y","dataIndex","containStroke","LargeLineDraw","group","Group","largeLineProto","prototype","isPersistent","_incremental","updateData","data","removeAll","lineEl","rectHover","cursor","setShape","getLayout","_setCommon","add","incrementalPrepareUpdate","_clearIncremental","silent","incrementalUpdate","taskParams","__startIndex","start","addDisplayable","remove","isIncremental","hostModel","get","useStyle","getModel","getLineStyle","style","strokeNoScale","visualColor","getVisual","setStyle","seriesIndex","on","e","offsetX","offsetY","incremental","clearDisplaybles","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/chart/helper/LargeLineDraw.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}