{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\nvar _graphic = require(\"../../util/graphic\");\nvar linePolygonIntersect = _graphic.linePolygonIntersect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || linePolygonIntersect(x, y, x + width, y, points) || linePolygonIntersect(x, y, x, y + height, points) || linePolygonIntersect(x + width, y, x + width, y + height, points) || linePolygonIntersect(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\nvar _default = selector;\nmodule.exports = _default;","map":{"version":3,"names":["polygonContain","require","BoundingRect","_graphic","linePolygonIntersect","selector","lineX","getLineSelectors","lineY","rect","point","itemLayout","selectors","area","boundingRect","contain","intersect","polygon","range","points","length","x","y","width","height","p","create","xyIndex","xy","wh","inLineRange","layoutRange","reverse","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/component/brush/selector.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar linePolygonIntersect = _graphic.linePolygonIntersect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || linePolygonIntersect(x, y, x + width, y, points) || linePolygonIntersect(x, y, x, y + height, points) || linePolygonIntersect(x + width, y, x + width, y + height, points) || linePolygonIntersect(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nvar _default = selector;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}