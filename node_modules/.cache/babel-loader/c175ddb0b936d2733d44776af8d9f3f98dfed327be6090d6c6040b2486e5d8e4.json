{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar ComponentModel = require(\"../../model/Component\");\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\nvar axisModelCreator = require(\"../axisModelCreator\");\nvar numberUtil = require(\"../../util/number\");\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n    if (value == null || isNaN(value)) {\n      return 'inactive';\n    } // Simple optimization\n\n    if (activeIntervals.length === 1) {\n      var interval = activeIntervals[0];\n      if (interval[0] <= value && value <= interval[1]) {\n        return 'active';\n      }\n    } else {\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n          return 'active';\n        }\n      }\n    }\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","ComponentModel","makeStyleMapper","axisModelCreator","numberUtil","axisModelCommonMixin","AxisModel","extend","type","axis","activeIntervals","getAreaSelectStyle","getModel","setActiveIntervals","intervals","clone","i","length","asc","getActiveState","value","isNaN","interval","len","defaultOption","dim","areaSelectStyle","width","borderWidth","borderColor","color","opacity","realtime","z","merge","prototype","getAxisType","axisName","option","data","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/coord/parallel/AxisModel.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null || isNaN(value)) {\n      return 'inactive';\n    } // Simple optimization\n\n\n    if (activeIntervals.length === 1) {\n      var interval = activeIntervals[0];\n\n      if (interval[0] <= value && value <= interval[1]) {\n        return 'active';\n      }\n    } else {\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n          return 'active';\n        }\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}