{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","map":{"version":3,"names":["clazzUtil","require","Scale","setting","_setting","_extent","Infinity","_interval","init","apply","arguments","prototype","parse","val","getSetting","name","contain","extent","normalize","scale","unionExtent","other","unionExtentFromData","data","dim","getApproximateExtent","getExtent","slice","setExtent","start","end","thisExtent","isNaN","isBlank","_isBlank","setBlank","getLabel","enableClassExtend","enableClassManagement","registerWhenExtend","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/scale/Scale.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}