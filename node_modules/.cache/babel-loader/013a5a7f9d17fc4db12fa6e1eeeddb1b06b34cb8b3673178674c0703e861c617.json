{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\nvar __DEV__ = _config.__DEV__;\nvar _util = require(\"zrender/lib/core/util\");\nvar createHashMap = _util.createHashMap;\nvar isString = _util.isString;\nvar isArray = _util.isArray;\nvar each = _util.each;\nvar assert = _util.assert;\nvar _parseSVG = require(\"zrender/lib/tool/parseSVG\");\nvar parseXML = _parseSVG.parseXML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar storage = createHashMap(); // For minimize the code size of common echarts package,\n// do not put too much logic in this module.\n\nvar _default = {\n  // The format of record: see `echarts.registerMap`.\n  // Compatible with previous `echarts.registerMap`.\n  registerMap: function (mapName, rawGeoJson, rawSpecialAreas) {\n    var records;\n    if (isArray(rawGeoJson)) {\n      records = rawGeoJson;\n    } else if (rawGeoJson.svg) {\n      records = [{\n        type: 'svg',\n        source: rawGeoJson.svg,\n        specialAreas: rawGeoJson.specialAreas\n      }];\n    } else {\n      // Backward compatibility.\n      if (rawGeoJson.geoJson && !rawGeoJson.features) {\n        rawSpecialAreas = rawGeoJson.specialAreas;\n        rawGeoJson = rawGeoJson.geoJson;\n      }\n      records = [{\n        type: 'geoJSON',\n        source: rawGeoJson,\n        specialAreas: rawSpecialAreas\n      }];\n    }\n    each(records, function (record) {\n      var type = record.type;\n      type === 'geoJson' && (type = record.type = 'geoJSON');\n      var parse = parsers[type];\n      parse(record);\n    });\n    return storage.set(mapName, records);\n  },\n  retrieveMap: function (mapName) {\n    return storage.get(mapName);\n  }\n};\nvar parsers = {\n  geoJSON: function (record) {\n    var source = record.source;\n    record.geoJSON = !isString(source) ? source : typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(source) : new Function('return (' + source + ');')();\n  },\n  // Only perform parse to XML object here, which might be time\n  // consiming for large SVG.\n  // Although convert XML to zrender element is also time consiming,\n  // if we do it here, the clone of zrender elements has to be\n  // required. So we do it once for each geo instance, util real\n  // performance issues call for optimizing it.\n  svg: function (record) {\n    record.svgXML = parseXML(record.source);\n  }\n};\nmodule.exports = _default;","map":{"version":3,"names":["_config","require","__DEV__","_util","createHashMap","isString","isArray","each","assert","_parseSVG","parseXML","storage","_default","registerMap","mapName","rawGeoJson","rawSpecialAreas","records","svg","type","source","specialAreas","geoJson","features","record","parse","parsers","set","retrieveMap","get","geoJSON","JSON","Function","svgXML","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/coord/geo/mapDataStorage.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isString = _util.isString;\nvar isArray = _util.isArray;\nvar each = _util.each;\nvar assert = _util.assert;\n\nvar _parseSVG = require(\"zrender/lib/tool/parseSVG\");\n\nvar parseXML = _parseSVG.parseXML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar storage = createHashMap(); // For minimize the code size of common echarts package,\n// do not put too much logic in this module.\n\nvar _default = {\n  // The format of record: see `echarts.registerMap`.\n  // Compatible with previous `echarts.registerMap`.\n  registerMap: function (mapName, rawGeoJson, rawSpecialAreas) {\n    var records;\n\n    if (isArray(rawGeoJson)) {\n      records = rawGeoJson;\n    } else if (rawGeoJson.svg) {\n      records = [{\n        type: 'svg',\n        source: rawGeoJson.svg,\n        specialAreas: rawGeoJson.specialAreas\n      }];\n    } else {\n      // Backward compatibility.\n      if (rawGeoJson.geoJson && !rawGeoJson.features) {\n        rawSpecialAreas = rawGeoJson.specialAreas;\n        rawGeoJson = rawGeoJson.geoJson;\n      }\n\n      records = [{\n        type: 'geoJSON',\n        source: rawGeoJson,\n        specialAreas: rawSpecialAreas\n      }];\n    }\n\n    each(records, function (record) {\n      var type = record.type;\n      type === 'geoJson' && (type = record.type = 'geoJSON');\n      var parse = parsers[type];\n      parse(record);\n    });\n    return storage.set(mapName, records);\n  },\n  retrieveMap: function (mapName) {\n    return storage.get(mapName);\n  }\n};\nvar parsers = {\n  geoJSON: function (record) {\n    var source = record.source;\n    record.geoJSON = !isString(source) ? source : typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(source) : new Function('return (' + source + ');')();\n  },\n  // Only perform parse to XML object here, which might be time\n  // consiming for large SVG.\n  // Although convert XML to zrender element is also time consiming,\n  // if we do it here, the clone of zrender elements has to be\n  // required. So we do it once for each geo instance, util real\n  // performance issues call for optimizing it.\n  svg: function (record) {\n    record.svgXML = parseXML(record.source);\n  }\n};\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}