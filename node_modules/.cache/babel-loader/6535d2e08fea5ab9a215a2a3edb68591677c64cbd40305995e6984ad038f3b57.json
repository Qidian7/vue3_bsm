{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\nvar formatUtil = require(\"../../util/format\");\nvar graphic = require(\"../../util/graphic\");\nvar Model = require(\"../../model/Model\");\nvar _number = require(\"../../util/number\");\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\nvar _symbol = require(\"../../util/symbol\");\nvar createSymbol = _symbol.createSymbol;\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\nvar _vector = require(\"zrender/lib/core/vector\");\nvar v2ApplyTransform = _vector.applyTransform;\nvar _axisHelper = require(\"../../coord/axisHelper\");\nvar shouldShowAllLabels = _axisHelper.shouldShowAllLabels;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line({\n      // Id for animation\n      anid: 'line',\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    }));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true,\n            z2: 11\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var ticksEls = buildAxisMajorTicks(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, ticksEls);\n    buildAxisMinorTicks(this, axisModel, opt);\n  },\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n    if (!name) {\n      return;\n    }\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2,\n    // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation,\n      // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isLabelSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: textStyleModel.get('align') || labelLayout.textAlign,\n      textVerticalAlign: textStyleModel.get('verticalAlign') || labelLayout.textVerticalAlign\n    });\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n    this._dumbGroup.add(textEl);\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\nvar makeAxisEventDataBase = AxisBuilder.makeAxisEventDataBase = function (axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType,\n    componentIndex: axisModel.componentIndex\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\nvar isLabelSilent = AxisBuilder.isLabelSilent = function (axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n};\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  if (shouldShowAllLabels(axisModel.axis)) {\n    return;\n  } // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\nfunction createTicks(ticksCoords, tickTransform, tickEndCoord, tickLineStyle, aniid) {\n  var tickEls = [];\n  var pt1 = [];\n  var pt2 = [];\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = tickEndCoord;\n    if (tickTransform) {\n      v2ApplyTransform(pt1, pt1, tickTransform);\n      v2ApplyTransform(pt2, pt2, tickTransform);\n    } // Tick line, Not use group transform to have better line draw\n\n    var tickEl = new graphic.Line({\n      // Id for animation\n      anid: aniid + '_' + ticksCoords[i].tickValue,\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: tickLineStyle,\n      z2: 2,\n      silent: true\n    });\n    tickEls.push(tickEl);\n  }\n  return tickEls;\n}\nfunction buildAxisMajorTicks(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var tickModel = axisModel.getModel('axisTick');\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var ticksEls = createTicks(ticksCoords, axisBuilder._transform, tickEndCoord, defaults(lineStyleModel.getLineStyle(), {\n    stroke: axisModel.get('axisLine.lineStyle.color')\n  }), 'ticks');\n  for (var i = 0; i < ticksEls.length; i++) {\n    axisBuilder.group.add(ticksEls[i]);\n  }\n  return ticksEls;\n}\nfunction buildAxisMinorTicks(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var minorTickModel = axisModel.getModel('minorTick');\n  if (!minorTickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n  var minorTicksCoords = axis.getMinorTicksCoords();\n  if (!minorTicksCoords.length) {\n    return;\n  }\n  var lineStyleModel = minorTickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * minorTickModel.get('length');\n  var minorTickLineStyle = defaults(lineStyleModel.getLineStyle(), defaults(axisModel.getModel('axisTick').getLineStyle(), {\n    stroke: axisModel.get('axisLine.lineStyle.color')\n  }));\n  for (var i = 0; i < minorTicksCoords.length; i++) {\n    var minorTicksEls = createTicks(minorTicksCoords[i], axisBuilder._transform, tickEndCoord, minorTickLineStyle, 'minorticks_' + i);\n    for (var k = 0; k < minorTicksEls.length; k++) {\n      axisBuilder.group.add(minorTicksEls[k]);\n    }\n  }\n}\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories && axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isLabelSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor(\n      // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n    axisBuilder._dumbGroup.add(textEl);\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\nvar _default = AxisBuilder;\nmodule.exports = _default;","map":{"version":3,"names":["_util","require","retrieve","defaults","extend","each","formatUtil","graphic","Model","_number","isRadianAroundZero","remRadian","_symbol","createSymbol","matrixUtil","_vector","v2ApplyTransform","applyTransform","_axisHelper","shouldShowAllLabels","PI","Math","AxisBuilder","axisModel","opt","labelOffset","nameDirection","tickDirection","labelDirection","silent","group","Group","dumbGroup","position","slice","rotation","updateTransform","_transform","transform","_dumbGroup","prototype","constructor","hasBuilder","name","builders","add","call","getGroup","axisLine","get","extent","axis","getExtent","matrix","pt1","pt2","lineStyle","lineCap","getModel","getLineStyle","Line","anid","subPixelOptimize","shape","x1","y1","x2","y2","style","strokeContainThreshold","z2","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","rotate","offset","r","sqrt","point","index","symbol","stroke","pos","cos","sin","attr","axisTickLabel","ticksEls","buildAxisMajorTicks","labelEls","buildAxisLabel","fixMinMaxLabelShow","buildAxisMinorTicks","axisName","nameLocation","textStyleModel","gap","gapSignal","isNameLocationCenter","labelLayout","nameRotation","axisNameAvailableWidth","innerTextLayout","endTextLayout","abs","isFinite","textFont","getFont","truncateOpt","ellipsis","maxWidth","nameTruncateMaxWidth","truncatedText","truncateText","minChar","placeholder","tooltipOpt","mainType","formatterParams","componentType","$vars","componentIndex","textEl","Text","__fullText","__truncatedText","isLabelSilent","tooltip","show","content","formatter","setTextStyle","text","textFill","getTextColor","textAlign","textVerticalAlign","eventData","makeAxisEventDataBase","targetType","decomposeTransform","axisRotation","textRotation","direction","rotationDiff","textPosition","textRotate","inverse","onLeft","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","length","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","el","ignore","current","next","firstRect","getBoundingRect","clone","nextRect","mRotationBack","identity","mul","getLocalTransform","intersect","createTicks","ticksCoords","tickTransform","tickEndCoord","tickLineStyle","aniid","i","tickCoord","coord","tickEl","tickValue","push","axisBuilder","tickModel","scale","isBlank","lineStyleModel","getTicksCoords","minorTickModel","minorTicksCoords","getMinorTicksCoords","minorTickLineStyle","minorTicksEls","k","axisLabelShow","labelModel","labelMargin","labels","getViewLabels","labelRotation","labelRotate","rawCategoryData","getCategories","triggerEvent","labelItem","formattedLabel","rawLabel","itemLabelModel","textStyle","ecModel","textColor","dataToCoord","getShallow","type","value","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/component/axis/AxisBuilder.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar shouldShowAllLabels = _axisHelper.shouldShowAllLabels;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line({\n      // Id for animation\n      anid: 'line',\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    }));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true,\n            z2: 11\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var ticksEls = buildAxisMajorTicks(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, ticksEls);\n    buildAxisMinorTicks(this, axisModel, opt);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isLabelSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: textStyleModel.get('align') || labelLayout.textAlign,\n      textVerticalAlign: textStyleModel.get('verticalAlign') || labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n\nvar makeAxisEventDataBase = AxisBuilder.makeAxisEventDataBase = function (axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType,\n    componentIndex: axisModel.componentIndex\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nvar isLabelSilent = AxisBuilder.isLabelSilent = function (axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n};\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  if (shouldShowAllLabels(axisModel.axis)) {\n    return;\n  } // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n\n\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction createTicks(ticksCoords, tickTransform, tickEndCoord, tickLineStyle, aniid) {\n  var tickEls = [];\n  var pt1 = [];\n  var pt2 = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = tickEndCoord;\n\n    if (tickTransform) {\n      v2ApplyTransform(pt1, pt1, tickTransform);\n      v2ApplyTransform(pt2, pt2, tickTransform);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line({\n      // Id for animation\n      anid: aniid + '_' + ticksCoords[i].tickValue,\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: tickLineStyle,\n      z2: 2,\n      silent: true\n    });\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisMajorTicks(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var tickModel = axisModel.getModel('axisTick');\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var ticksEls = createTicks(ticksCoords, axisBuilder._transform, tickEndCoord, defaults(lineStyleModel.getLineStyle(), {\n    stroke: axisModel.get('axisLine.lineStyle.color')\n  }), 'ticks');\n\n  for (var i = 0; i < ticksEls.length; i++) {\n    axisBuilder.group.add(ticksEls[i]);\n  }\n\n  return ticksEls;\n}\n\nfunction buildAxisMinorTicks(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var minorTickModel = axisModel.getModel('minorTick');\n\n  if (!minorTickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var minorTicksCoords = axis.getMinorTicksCoords();\n\n  if (!minorTicksCoords.length) {\n    return;\n  }\n\n  var lineStyleModel = minorTickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * minorTickModel.get('length');\n  var minorTickLineStyle = defaults(lineStyleModel.getLineStyle(), defaults(axisModel.getModel('axisTick').getLineStyle(), {\n    stroke: axisModel.get('axisLine.lineStyle.color')\n  }));\n\n  for (var i = 0; i < minorTicksCoords.length; i++) {\n    var minorTicksEls = createTicks(minorTicksCoords[i], axisBuilder._transform, tickEndCoord, minorTickLineStyle, 'minorticks_' + i);\n\n    for (var k = 0; k < minorTicksEls.length; k++) {\n      axisBuilder.group.add(minorTicksEls[k]);\n    }\n  }\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories && axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isLabelSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}