{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    if (nodes.length) {\n      var minValue = Infinity;\n      var maxValue = -Infinity;\n      zrUtil.each(nodes, function (node) {\n        var nodeValue = node.getLayout().value;\n        if (nodeValue < minValue) {\n          minValue = nodeValue;\n        }\n        if (nodeValue > maxValue) {\n          maxValue = nodeValue;\n        }\n      });\n      zrUtil.each(nodes, function (node) {\n        var mapping = new VisualMapping({\n          type: 'color',\n          mappingMethod: 'linear',\n          dataExtent: [minValue, maxValue],\n          visual: seriesModel.get('color')\n        });\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n        var customColor = node.getModel().get('itemStyle.color');\n        customColor != null ? node.setVisual('color', customColor) : node.setVisual('color', mapValueToColor);\n      });\n    }\n  });\n}\nmodule.exports = _default;","map":{"version":3,"names":["VisualMapping","require","zrUtil","_default","ecModel","payload","eachSeriesByType","seriesModel","graph","getGraph","nodes","length","minValue","Infinity","maxValue","each","node","nodeValue","getLayout","value","mapping","type","mappingMethod","dataExtent","visual","get","mapValueToColor","mapValueToVisual","customColor","getModel","setVisual","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/chart/sankey/sankeyVisual.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n\n    if (nodes.length) {\n      var minValue = Infinity;\n      var maxValue = -Infinity;\n      zrUtil.each(nodes, function (node) {\n        var nodeValue = node.getLayout().value;\n\n        if (nodeValue < minValue) {\n          minValue = nodeValue;\n        }\n\n        if (nodeValue > maxValue) {\n          maxValue = nodeValue;\n        }\n      });\n      zrUtil.each(nodes, function (node) {\n        var mapping = new VisualMapping({\n          type: 'color',\n          mappingMethod: 'linear',\n          dataExtent: [minValue, maxValue],\n          visual: seriesModel.get('color')\n        });\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n        var customColor = node.getModel().get('itemStyle.color');\n        customColor != null ? node.setVisual('color', customColor) : node.setVisual('color', mapValueToColor);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AAEzD,IAAIC,MAAM,GAAGD,OAAO,CAAC,uBAAuB,CAAC;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,QAAQA,CAACC,OAAO,EAAEC,OAAO,EAAE;EAClCD,OAAO,CAACE,gBAAgB,CAAC,QAAQ,EAAE,UAAUC,WAAW,EAAE;IACxD,IAAIC,KAAK,GAAGD,WAAW,CAACE,QAAQ,EAAE;IAClC,IAAIC,KAAK,GAAGF,KAAK,CAACE,KAAK;IAEvB,IAAIA,KAAK,CAACC,MAAM,EAAE;MAChB,IAAIC,QAAQ,GAAGC,QAAQ;MACvB,IAAIC,QAAQ,GAAG,CAACD,QAAQ;MACxBX,MAAM,CAACa,IAAI,CAACL,KAAK,EAAE,UAAUM,IAAI,EAAE;QACjC,IAAIC,SAAS,GAAGD,IAAI,CAACE,SAAS,EAAE,CAACC,KAAK;QAEtC,IAAIF,SAAS,GAAGL,QAAQ,EAAE;UACxBA,QAAQ,GAAGK,SAAS;QACtB;QAEA,IAAIA,SAAS,GAAGH,QAAQ,EAAE;UACxBA,QAAQ,GAAGG,SAAS;QACtB;MACF,CAAC,CAAC;MACFf,MAAM,CAACa,IAAI,CAACL,KAAK,EAAE,UAAUM,IAAI,EAAE;QACjC,IAAII,OAAO,GAAG,IAAIpB,aAAa,CAAC;UAC9BqB,IAAI,EAAE,OAAO;UACbC,aAAa,EAAE,QAAQ;UACvBC,UAAU,EAAE,CAACX,QAAQ,EAAEE,QAAQ,CAAC;UAChCU,MAAM,EAAEjB,WAAW,CAACkB,GAAG,CAAC,OAAO;QACjC,CAAC,CAAC;QACF,IAAIC,eAAe,GAAGN,OAAO,CAACO,gBAAgB,CAACX,IAAI,CAACE,SAAS,EAAE,CAACC,KAAK,CAAC;QACtE,IAAIS,WAAW,GAAGZ,IAAI,CAACa,QAAQ,EAAE,CAACJ,GAAG,CAAC,iBAAiB,CAAC;QACxDG,WAAW,IAAI,IAAI,GAAGZ,IAAI,CAACc,SAAS,CAAC,OAAO,EAAEF,WAAW,CAAC,GAAGZ,IAAI,CAACc,SAAS,CAAC,OAAO,EAAEJ,eAAe,CAAC;MACvG,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;AACJ;AAEAK,MAAM,CAACC,OAAO,GAAG7B,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}