{"ast":null,"code":"var guid = require(\"./core/guid\");\nvar env = require(\"./core/env\");\nvar zrUtil = require(\"./core/util\");\nvar Handler = require(\"./Handler\");\nvar Storage = require(\"./Storage\");\nvar Painter = require(\"./Painter\");\nvar Animation = require(\"./animation/Animation\");\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.3.2';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} [opts]\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n    instances = {};\n  }\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\nfunction getInstance(id) {\n  return instances[id];\n}\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot(), painter.root) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\nZRender.prototype = {\n  constructor: ZRender,\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n    this._needsRefresh = true;\n  },\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n    this._needsRefresh = true;\n  },\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = this._needsRefreshHover = false;\n    this.painter.refresh(); // Avoid trigger zr.refresh in Element#beforeUpdate hook\n\n    this._needsRefresh = this._needsRefreshHover = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n    triggerRendered && this.trigger('rendered');\n  },\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      var elMirror = this.painter.addHover(el, style);\n      this.refreshHover();\n      return elMirror;\n    }\n  },\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;","map":{"version":3,"names":["guid","require","env","zrUtil","Handler","Storage","Painter","Animation","HandlerProxy","useVML","canvasSupported","painterCtors","canvas","instances","version","init","dom","opts","zr","ZRender","id","dispose","key","hasOwnProperty","getInstance","registerPainter","name","Ctor","delInstance","self","storage","rendererType","renderer","vml","Error","painter","handerProxy","node","worker","getViewportRoot","root","handler","animation","stage","update","bind","flush","start","_needsRefresh","oldDelFromStorage","delFromStorage","oldAddToStorage","addToStorage","el","call","removeSelfFromZr","addSelfToZr","prototype","constructor","getId","add","addRoot","remove","delRoot","configLayer","zLevel","config","setBackgroundColor","backgroundColor","refreshImmediately","_needsRefreshHover","refresh","triggerRendered","refreshHoverImmediately","trigger","addHover","style","elMirror","refreshHover","removeHover","clearHover","resize","width","height","clearAnimation","clear","getWidth","getHeight","pathToImage","e","dpr","setCursorStyle","cursorStyle","findHover","x","y","on","eventName","eventHandler","context","off","event","stop","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/zrender/lib/zrender.js"],"sourcesContent":["var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.3.2';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} [opts]\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot(), painter.root) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = this._needsRefreshHover = false;\n    this.painter.refresh(); // Avoid trigger zr.refresh in Element#beforeUpdate hook\n\n    this._needsRefresh = this._needsRefreshHover = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      var elMirror = this.painter.addHover(el, style);\n      this.refreshHover();\n      return elMirror;\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}