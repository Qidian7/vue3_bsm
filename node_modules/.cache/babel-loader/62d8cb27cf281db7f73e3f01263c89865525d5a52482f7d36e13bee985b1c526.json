{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n    symbolDraw.updateData(data, {\n      // TODO\n      // If this parameter should be a shape or a bounding volume\n      // shape will be more general.\n      // But bounding volume like bounding rect will be much faster in the contain calculation\n      clipShape: this._getClipShape(seriesModel)\n    });\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData(), {\n      clipShape: this._getClipShape(seriesModel)\n    });\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _getClipShape: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var clipArea = coordSys && coordSys.getArea && coordSys.getArea();\n    return seriesModel.get('clip', true) ? clipArea : null;\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});","map":{"version":3,"names":["echarts","require","SymbolDraw","LargeSymbolDraw","pointsLayout","extendChartView","type","render","seriesModel","ecModel","api","data","getData","symbolDraw","_updateSymbolDraw","updateData","clipShape","_getClipShape","_finished","incrementalPrepareRender","incrementalPrepareUpdate","incrementalRender","taskParams","_symbolDraw","incrementalUpdate","end","count","updateTransform","group","dirty","isPersistent","update","res","reset","progress","start","updateLayout","coordSys","coordinateSystem","clipArea","getArea","get","pipelineContext","isLargeDraw","large","_isLargeDraw","remove","removeAll","add","dispose"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/chart/scatter/ScatterView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data, {\n      // TODO\n      // If this parameter should be a shape or a bounding volume\n      // shape will be more general.\n      // But bounding volume like bounding rect will be much faster in the contain calculation\n      clipShape: this._getClipShape(seriesModel)\n    });\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData(), {\n      clipShape: this._getClipShape(seriesModel)\n    });\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _getClipShape: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var clipArea = coordSys && coordSys.getArea && coordSys.getArea();\n    return seriesModel.get('clip', true) ? clipArea : null;\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}