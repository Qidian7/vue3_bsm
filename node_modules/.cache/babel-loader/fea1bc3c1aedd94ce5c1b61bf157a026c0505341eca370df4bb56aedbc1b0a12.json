{"ast":null,"code":"var Path = require(\"../Path\");\nvar vec2 = require(\"../../core/vector\");\nvar _curve = require(\"../../core/curve\");\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n    if (percent === 0) {\n      return;\n    }\n    ctx.moveTo(x1, y1);\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\nmodule.exports = _default;","map":{"version":3,"names":["Path","require","vec2","_curve","quadraticSubdivide","cubicSubdivide","quadraticAt","cubicAt","quadraticDerivativeAt","cubicDerivativeAt","out","someVectorAt","shape","t","isTangent","cpx2","cpy2","x1","cpx1","x2","y1","cpy1","y2","_default","extend","type","percent","style","stroke","fill","buildPath","ctx","moveTo","quadraticCurveTo","bezierCurveTo","pointAt","tangentAt","p","normalize","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/zrender/lib/graphic/shape/BezierCurve.js"],"sourcesContent":["var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}