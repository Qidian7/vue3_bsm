{"ast":null,"code":"require(\"core-js/modules/esnext.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/esnext.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/esnext.typed-array.with.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\nvar _symbol = require(\"../../util/symbol\");\nvar createSymbol = _symbol.createSymbol;\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\n// TODO Batch by color\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  softClipShape: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      }\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n    if (!canBoost) {\n      return;\n    }\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n    return -1;\n  }\n});\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\nvar largeSymbolProto = LargeSymbolDraw.prototype;\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {Object} [opt.clipShape]\n */\n\nlargeSymbolProto.updateData = function (data, opt) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n  this._setCommon(symbolEl, data, false, opt);\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n    child.setShape('points', points);\n  });\n};\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\nlargeSymbolProto.incrementalUpdate = function (taskParams, data, opt) {\n  var symbolEl;\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n  this._setCommon(symbolEl, data, !!this._incremental, opt);\n};\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental, opt) {\n  var hostModel = data.hostModel;\n  opt = opt || {}; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n\n  symbolEl.softClipShape = opt.clipShape || null; // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle(\n  // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n  this._incremental = null;\n  this.group.removeAll();\n};\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","map":{"version":3,"names":["graphic","require","_symbol","createSymbol","IncrementalDisplayable","BOOST_SIZE_THRESHOLD","LargeSymbolPath","extendShape","shape","points","symbolProxy","softClipShape","buildPath","path","size","symbolProxyShape","ctx","getContext","canBoost","i","length","x","y","isNaN","contain","width","height","afterBrush","setTransform","fillRect","restoreTransform","findDataIndex","w","Math","max","h","idx","x0","y0","LargeSymbolDraw","group","Group","largeSymbolProto","prototype","isPersistent","_incremental","updateData","data","opt","removeAll","symbolEl","rectHover","cursor","setShape","getLayout","_setCommon","add","updateLayout","eachChild","child","startIndex","len","endIndex","byteOffset","Float32Array","buffer","incrementalPrepareUpdate","_clearIncremental","count","silent","incrementalUpdate","taskParams","addDisplayable","start","end","incremental","isIncremental","hostModel","getVisual","Array","clipShape","setColor","extrudeShadow","useStyle","getModel","getItemStyle","visualColor","seriesIndex","on","e","dataIndex","offsetX","offsetY","remove","clearDisplaybles","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\n// TODO Batch by color\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  softClipShape: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {Object} [opt.clipShape]\n */\n\n\nlargeSymbolProto.updateData = function (data, opt) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, false, opt);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data, opt) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental, opt);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental, opt) {\n  var hostModel = data.hostModel;\n  opt = opt || {}; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n\n  symbolEl.softClipShape = opt.clipShape || null; // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}