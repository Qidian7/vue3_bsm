{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\nvar __DEV__ = _config.__DEV__;\nvar _util = require(\"zrender/lib/core/util\");\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @class\n * For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // The index of the first category axis in `coordSysDims`.\n *     // `null/undefined` means no category axis exists.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction CoordSysInfo(coordSysName) {\n  /**\n   * @type {string}\n   */\n  this.coordSysName = coordSysName;\n  /**\n   * @type {Array.<string>}\n   */\n\n  this.coordSysDims = [];\n  /**\n   * @type {module:zrender/core/util#HashMap}\n   */\n\n  this.axisMap = createHashMap();\n  /**\n   * @type {module:zrender/core/util#HashMap}\n   */\n\n  this.categoryAxisMap = createHashMap();\n  /**\n   * @type {number}\n   */\n\n  this.firstCategoryDimIndex = null;\n}\n/**\n * @return {module:model/referHelper#CoordSysInfo}\n */\n\nfunction getCoordSysInfoBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = new CoordSysInfo(coordSysName);\n  var fetch = fetchers[coordSysName];\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex == null & (result.firstCategoryDimIndex = 1);\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex == null && (result.firstCategoryDimIndex = 1);\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\nexports.getCoordSysInfoBySeries = getCoordSysInfoBySeries;","map":{"version":3,"names":["_config","require","__DEV__","_util","createHashMap","retrieve","each","CoordSysInfo","coordSysName","coordSysDims","axisMap","categoryAxisMap","firstCategoryDimIndex","getCoordSysInfoBySeries","seriesModel","get","result","fetch","fetchers","cartesian2d","xAxisModel","getReferringComponents","yAxisModel","set","isCategory","singleAxis","singleAxisModel","polar","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","geo","parallel","ecModel","parallelModel","getComponent","dimensions","slice","parallelAxisIndex","axisIndex","index","axisModel","axisDim","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/model/referHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @class\n * For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // The index of the first category axis in `coordSysDims`.\n *     // `null/undefined` means no category axis exists.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction CoordSysInfo(coordSysName) {\n  /**\n   * @type {string}\n   */\n  this.coordSysName = coordSysName;\n  /**\n   * @type {Array.<string>}\n   */\n\n  this.coordSysDims = [];\n  /**\n   * @type {module:zrender/core/util#HashMap}\n   */\n\n  this.axisMap = createHashMap();\n  /**\n   * @type {module:zrender/core/util#HashMap}\n   */\n\n  this.categoryAxisMap = createHashMap();\n  /**\n   * @type {number}\n   */\n\n  this.firstCategoryDimIndex = null;\n}\n/**\n * @return {module:model/referHelper#CoordSysInfo}\n */\n\n\nfunction getCoordSysInfoBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = new CoordSysInfo(coordSysName);\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex == null & (result.firstCategoryDimIndex = 1);\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex == null && (result.firstCategoryDimIndex = 1);\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysInfoBySeries = getCoordSysInfoBySeries;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}