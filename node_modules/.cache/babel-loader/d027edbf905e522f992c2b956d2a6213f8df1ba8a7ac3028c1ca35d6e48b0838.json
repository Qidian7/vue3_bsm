{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar List = require(\"../../data/List\");\nvar numberUtil = require(\"../../util/number\");\nvar markerHelper = require(\"./markerHelper\");\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\nvar MarkerView = require(\"./MarkerView\");\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average', 'median'\n\n  var mlType = item.type;\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var value;\n    if (item.yAxis != null || item.xAxis != null) {\n      valueAxis = coordSys.getAxis(item.yAxis != null ? 'y' : 'x');\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueAxis = axisInfo.valueAxis;\n      var valueDataDim = getStackedDimension(data, axisInfo.valueDataDim);\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n    var valueIndex = valueAxis.dim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n  data.setItemLayout(idx, point);\n}\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolRotate': fromData.getItemVisual(idx, 'symbolRotate'),\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolRotate': toData.getItemVisual(idx, 'symbolRotate'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolRotate: itemModel.get('symbolRotate'),\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","List","numberUtil","markerHelper","LineDraw","MarkerView","_dataStackHelper","getStackedDimension","markLineTransform","seriesModel","coordSys","mlModel","item","data","getData","mlType","type","isArray","xAxis","yAxis","valueAxis","value","getAxis","retrieve","axisInfo","getAxisInfo","valueDataDim","numCalculate","valueIndex","dim","baseIndex","mlFrom","clone","mlTo","coord","Infinity","precision","get","toFixed","Math","min","dataTransform","extend","merge","isInifinity","val","isNaN","isFinite","ifMarkLineHasOnlyDim","dimIndex","fromCoord","toCoord","otherDimIndex","dimName","dimensions","containData","markLineFilter","dataFilter","updateSingleMarkerEndLayout","idx","isFrom","api","coordinateSystem","itemModel","getItemModel","point","xPx","parsePercent","getWidth","yPx","getHeight","getMarkerPosition","getValues","dims","x","y","dataToPoint","toGlobalCoord","getExtent","setItemLayout","_default","updateTransform","markLineModel","ecModel","eachSeries","mlData","fromData","__from","toData","__to","each","getItemLayout","markerGroupMap","id","updateLayout","renderSeries","seriesId","seriesData","lineDrawMap","lineDraw","set","group","add","createList","from","to","lineData","line","setData","symbolType","symbolSize","updateDataVisualAndLayout","lineColor","setItemVisual","color","getItemVisual","updateData","eachItemGraphicEl","el","traverse","child","dataModel","symbolRotate","symbol","getVisual","__keep","silent","coordDimsInfos","map","coordDim","info","getDimensionInfo","mapDimension","defaults","name","optData","curry","filter","dimValueGetter","initData","hasItemOption","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/component/marker/MarkLineView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average', 'median'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueAxis = coordSys.getAxis(item.yAxis != null ? 'y' : 'x');\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueAxis = axisInfo.valueAxis;\n      var valueDataDim = getStackedDimension(data, axisInfo.valueDataDim);\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueAxis.dim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolRotate': fromData.getItemVisual(idx, 'symbolRotate'),\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolRotate': toData.getItemVisual(idx, 'symbolRotate'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolRotate: itemModel.get('symbolRotate'),\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}