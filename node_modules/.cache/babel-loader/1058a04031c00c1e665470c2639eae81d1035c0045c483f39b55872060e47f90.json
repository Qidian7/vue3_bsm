{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array.unshift.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\nvar each = _util.each;\nvar map = _util.map;\nvar _number = require(\"../util/number\");\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\nvar round = _number.round;\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\nAxis.prototype = {\n  constructor: Axis,\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.scale.contain(data);\n  },\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {Model} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n  /**\n   * @return {Array.<Array.<Object>>} [{ coord: ..., tickValue: ...}]\n   */\n  getMinorTicksCoords: function () {\n    if (this.scale.type === 'ordinal') {\n      // Category axis doesn't support minor ticks\n      return [];\n    }\n    var minorTickModel = this.model.getModel('minorTick');\n    var splitNumber = minorTickModel.get('splitNumber'); // Protection.\n\n    if (!(splitNumber > 0 && splitNumber < 100)) {\n      splitNumber = 5;\n    }\n    var minorTicks = this.scale.getMinorTicks(splitNumber);\n    var minorTicksCoords = map(minorTicks, function (minorTicksGroup) {\n      return map(minorTicksGroup, function (minorTick) {\n        return {\n          coord: this.dataToCoord(minorTick),\n          tickValue: minorTick\n        };\n      }, this);\n    }, this);\n    return minorTicksCoords;\n  },\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n  var axisExtent = axis.getExtent();\n  var last;\n  var diffSize;\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var crossLen = ticksCoords[ticksLen - 1].tickValue - ticksCoords[0].tickValue;\n    var shift = (ticksCoords[ticksLen - 1].coord - ticksCoords[0].coord) / crossLen;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n    });\n    var dataExtent = axis.scale.getExtent();\n    diffSize = 1 + dataExtent[1] - ticksCoords[ticksLen - 1].tickValue;\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift * diffSize\n    };\n    ticksCoords.push(last);\n  }\n  var inverse = axisExtent[0] > axisExtent[1]; // Handling clamp.\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n  function littleThan(a, b) {\n    // Avoid rounding error cause calculated tick coord different with extent.\n    // It may cause an extra unecessary tick added.\n    a = round(a);\n    b = round(b);\n    return inverse ? a > b : a < b;\n  }\n}\nvar _default = Axis;\nmodule.exports = _default;","map":{"version":3,"names":["_util","require","each","map","_number","linearMap","getPixelPrecision","round","_axisTickLabelBuilder","createAxisTicks","createAxisLabels","calculateCategoryInterval","NORMALIZED_EXTENT","Axis","dim","scale","extent","_extent","inverse","onBand","prototype","constructor","contain","coord","min","Math","max","containData","data","getExtent","slice","dataExtent","setExtent","start","end","dataToCoord","clamp","normalize","type","fixExtentWithBands","count","coordToData","t","pointToData","point","getTicksCoords","opt","tickModel","getTickModel","result","ticks","ticksCoords","tickValue","alignWithLabel","get","fixOnBandTicksCoords","getMinorTicksCoords","minorTickModel","model","getModel","splitNumber","minorTicks","getMinorTicks","minorTicksCoords","minorTicksGroup","minorTick","getViewLabels","labels","getLabelModel","getBandWidth","axisExtent","len","size","abs","isHorizontal","getRotate","nTick","margin","axis","ticksLen","length","last","diffSize","crossLen","shift","ticksItem","push","littleThan","unshift","pop","a","b","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/coord/Axis.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\nvar round = _number.round;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.scale.contain(data);\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {Model} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Array.<Object>>} [{ coord: ..., tickValue: ...}]\n   */\n  getMinorTicksCoords: function () {\n    if (this.scale.type === 'ordinal') {\n      // Category axis doesn't support minor ticks\n      return [];\n    }\n\n    var minorTickModel = this.model.getModel('minorTick');\n    var splitNumber = minorTickModel.get('splitNumber'); // Protection.\n\n    if (!(splitNumber > 0 && splitNumber < 100)) {\n      splitNumber = 5;\n    }\n\n    var minorTicks = this.scale.getMinorTicks(splitNumber);\n    var minorTicksCoords = map(minorTicks, function (minorTicksGroup) {\n      return map(minorTicksGroup, function (minorTick) {\n        return {\n          coord: this.dataToCoord(minorTick),\n          tickValue: minorTick\n        };\n      }, this);\n    }, this);\n    return minorTicksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n  var diffSize;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var crossLen = ticksCoords[ticksLen - 1].tickValue - ticksCoords[0].tickValue;\n    var shift = (ticksCoords[ticksLen - 1].coord - ticksCoords[0].coord) / crossLen;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n    });\n    var dataExtent = axis.scale.getExtent();\n    diffSize = 1 + dataExtent[1] - ticksCoords[ticksLen - 1].tickValue;\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift * diffSize\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1]; // Handling clamp.\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    // Avoid rounding error cause calculated tick coord different with extent.\n    // It may cause an extra unecessary tick added.\n    a = round(a);\n    b = round(b);\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}