{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\nvar _roamHelper = require(\"../../action/roamHelper\");\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});\necharts.registerAction({\n  type: 'treeRoam',\n  event: 'treeRoam',\n  // Here we set 'none' instead of 'update', because roam action\n  // just need to update the transform matrix without having to recalculate\n  // the layout. So don't need to go through the whole update process, such\n  // as 'dataPrcocess', 'coordSystemUpdate', 'layout' and so on.\n  update: 'none'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});","map":{"version":3,"names":["echarts","require","_roamHelper","updateCenterAndZoom","registerAction","type","event","update","payload","ecModel","eachComponent","mainType","subType","query","seriesModel","dataIndex","tree","getData","node","getNodeByDataIndex","isExpand","coordSys","coordinateSystem","res","setCenter","center","setZoom","zoom"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/chart/tree/treeAction.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});\necharts.registerAction({\n  type: 'treeRoam',\n  event: 'treeRoam',\n  // Here we set 'none' instead of 'update', because roam action\n  // just need to update the transform matrix without having to recalculate\n  // the layout. So don't need to go through the whole update process, such\n  // as 'dataPrcocess', 'coordSystemUpdate', 'layout' and so on.\n  update: 'none'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAe,CAAC;AAEtC,IAAIC,WAAW,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAEpD,IAAIE,mBAAmB,GAAGD,WAAW,CAACC,mBAAmB;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,OAAO,CAACI,cAAc,CAAC;EACrBC,IAAI,EAAE,uBAAuB;EAC7BC,KAAK,EAAE,uBAAuB;EAC9BC,MAAM,EAAE;AACV,CAAC,EAAE,UAAUC,OAAO,EAAEC,OAAO,EAAE;EAC7BA,OAAO,CAACC,aAAa,CAAC;IACpBC,QAAQ,EAAE,QAAQ;IAClBC,OAAO,EAAE,MAAM;IACfC,KAAK,EAAEL;EACT,CAAC,EAAE,UAAUM,WAAW,EAAE;IACxB,IAAIC,SAAS,GAAGP,OAAO,CAACO,SAAS;IACjC,IAAIC,IAAI,GAAGF,WAAW,CAACG,OAAO,EAAE,CAACD,IAAI;IACrC,IAAIE,IAAI,GAAGF,IAAI,CAACG,kBAAkB,CAACJ,SAAS,CAAC;IAC7CG,IAAI,CAACE,QAAQ,GAAG,CAACF,IAAI,CAACE,QAAQ;EAChC,CAAC,CAAC;AACJ,CAAC,CAAC;AACFpB,OAAO,CAACI,cAAc,CAAC;EACrBC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,UAAU;EACjB;EACA;EACA;EACA;EACAC,MAAM,EAAE;AACV,CAAC,EAAE,UAAUC,OAAO,EAAEC,OAAO,EAAE;EAC7BA,OAAO,CAACC,aAAa,CAAC;IACpBC,QAAQ,EAAE,QAAQ;IAClBC,OAAO,EAAE,MAAM;IACfC,KAAK,EAAEL;EACT,CAAC,EAAE,UAAUM,WAAW,EAAE;IACxB,IAAIO,QAAQ,GAAGP,WAAW,CAACQ,gBAAgB;IAC3C,IAAIC,GAAG,GAAGpB,mBAAmB,CAACkB,QAAQ,EAAEb,OAAO,CAAC;IAChDM,WAAW,CAACU,SAAS,IAAIV,WAAW,CAACU,SAAS,CAACD,GAAG,CAACE,MAAM,CAAC;IAC1DX,WAAW,CAACY,OAAO,IAAIZ,WAAW,CAACY,OAAO,CAACH,GAAG,CAACI,IAAI,CAAC;EACtD,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}