{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\nvar __DEV__ = _config.__DEV__;\nvar _util = require(\"zrender/lib/core/util\");\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\nvar _layout = require(\"../../util/layout\");\nvar getLayoutRect = _layout.getLayoutRect;\nvar _axisHelper = require(\"../../coord/axisHelper\");\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\nvar Cartesian2D = require(\"./Cartesian2D\");\nvar Axis2D = require(\"./Axis2D\");\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, Array.<module:echarts/coord/cartesian/Axis2D>>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n  this._initCartesian(gridModel, ecModel, api);\n  this.model = gridModel;\n}\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\ngridProto.getRect = function () {\n  return this._rect;\n};\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n  this._updateScale(ecModel, this.model);\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  }); // Key: axisDim_axisIndex, value: boolean, whether onZero target.\n\n  var onZeroRecords = {};\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis, onZeroRecords);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis, onZeroRecords);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis, onZeroRecords) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxisOnZeroOf ? [otherAxisOnZeroOf] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxisOnZeroOf;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxisOnZeroOf = otherAxes[onZeroAxisIndex];\n    }\n  } else {\n    // Find the first available other axis.\n    for (var idx in otherAxes) {\n      if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx]) // Consider that two Y axes on one value axis,\n      // if both onZero, the two Y axes overlap.\n      && !onZeroRecords[getOnZeroRecordKey(otherAxes[idx])]) {\n        otherAxisOnZeroOf = otherAxes[idx];\n        break;\n      }\n    }\n  }\n  if (otherAxisOnZeroOf) {\n    onZeroRecords[getOnZeroRecordKey(otherAxisOnZeroOf)] = true;\n  }\n  function getOnZeroRecordKey(axis) {\n    return axis.dim + '_' + axis.index;\n  }\n}\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n    var grid = gridModel.coordinateSystem;\n    if (grid === this) {\n      cartesian = this._coordsList[0];\n    }\n  }\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n      this._coordsList.push(cartesian);\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n      var axisPosition = axisModel.get('position');\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = axisPositionUsed.bottom ? 'top' : 'bottom';\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = axisPositionUsed.left ? 'right' : 'left';\n        }\n      }\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n      this._axesList.push(axis);\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData(\n      // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","map":{"version":3,"names":["_config","require","__DEV__","_util","isObject","each","map","indexOf","retrieve","_layout","getLayoutRect","_axisHelper","createScaleByModel","ifAxisCrossZero","niceScaleExtent","estimateLabelUnionRect","Cartesian2D","Axis2D","CoordinateSystem","_dataStackHelper","getStackedDimension","isAxisUsedInTheGrid","axisModel","gridModel","ecModel","getCoordSysModel","Grid","api","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","model","gridProto","prototype","type","axisPointerEnabled","getRect","_rect","update","axesMap","_updateScale","x","xAxis","scale","y","yAxis","onZeroRecords","fixAxisOnZero","resize","otherAxisDim","axis","getAxesOnZeroOf","otherAxisOnZeroOf","otherAxes","onZero","get","onZeroAxisIndex","canOnZeroToAxis","idx","hasOwnProperty","getOnZeroRecordKey","dim","index","ignoreContainLabel","gridRect","getBoxLayoutParams","width","getWidth","height","getHeight","axesList","adjustAxes","labelUnionRect","isHorizontal","margin","position","extent","inverse","setExtent","updateAxisTransform","getAxis","axisType","axisIndex","axesMapOnDim","name","getAxes","slice","getCartesian","xAxisIndex","yAxisIndex","key","i","coordList","length","getCartesians","convertToPixel","finder","value","target","_findConvertTarget","cartesian","dataToPoint","toGlobalCoord","dataToCoord","convertFromPixel","pointToData","coordToData","toLocalCoord","seriesModel","xAxisModel","getReferringComponents","yAxisModel","coordsList","coordinateSystem","componentIndex","grid","containPoint","point","coord","axisPositionUsed","left","right","top","bottom","axesCount","eachComponent","createAxisCreator","push","addAxis","axisPosition","isCategory","onBand","Infinity","eachSeries","isCartesian2D","axesModels","findAxesModels","data","getData","unionExtent","mapDimension","unionExtentFromData","getTooltipAxes","baseAxes","baseAxis","getBaseAxis","otherAxis","getOtherAxis","coordBase","axisExtent","getExtent","axisExtentSum","axesTypes","create","grids","dimensions","register","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/coord/cartesian/Grid.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, Array.<module:echarts/coord/cartesian/Axis2D>>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  }); // Key: axisDim_axisIndex, value: boolean, whether onZero target.\n\n  var onZeroRecords = {};\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis, onZeroRecords);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis, onZeroRecords);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis, onZeroRecords) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxisOnZeroOf ? [otherAxisOnZeroOf] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxisOnZeroOf;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxisOnZeroOf = otherAxes[onZeroAxisIndex];\n    }\n  } else {\n    // Find the first available other axis.\n    for (var idx in otherAxes) {\n      if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx]) // Consider that two Y axes on one value axis,\n      // if both onZero, the two Y axes overlap.\n      && !onZeroRecords[getOnZeroRecordKey(otherAxes[idx])]) {\n        otherAxisOnZeroOf = otherAxes[idx];\n        break;\n      }\n    }\n  }\n\n  if (otherAxisOnZeroOf) {\n    onZeroRecords[getOnZeroRecordKey(otherAxisOnZeroOf)] = true;\n  }\n\n  function getOnZeroRecordKey(axis) {\n    return axis.dim + '_' + axis.index;\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = axisPositionUsed.bottom ? 'top' : 'bottom';\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = axisPositionUsed.left ? 'right' : 'left';\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}