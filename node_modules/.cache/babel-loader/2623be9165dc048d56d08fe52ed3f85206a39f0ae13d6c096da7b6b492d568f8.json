{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\nvar _number = require(\"../../util/number\");\nvar round = _number.round;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction createGridClipPath(cartesian, hasAnimation, seriesModel) {\n  var rect = cartesian.getArea();\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = rect.x;\n  var y = rect.y;\n  var width = rect.width;\n  var height = rect.height;\n  var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand the clip path a bit to avoid the border is clipped and looks thinner\n\n  x -= lineWidth / 2;\n  y -= lineWidth / 2;\n  width += lineWidth;\n  height += lineWidth; // fix: https://github.com/apache/incubator-echarts/issues/11369\n\n  x = Math.floor(x);\n  width = Math.round(width);\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n  return clipPath;\n}\nfunction createPolarClipPath(polar, hasAnimation, seriesModel) {\n  var sectorArea = polar.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(sectorArea.r0, 1),\n      r: round(sectorArea.r, 1),\n      startAngle: sectorArea.startAngle,\n      endAngle: sectorArea.endAngle,\n      clockwise: sectorArea.clockwise\n    }\n  });\n  if (hasAnimation) {\n    clipPath.shape.endAngle = sectorArea.startAngle;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: sectorArea.endAngle\n      }\n    }, seriesModel);\n  }\n  return clipPath;\n}\nfunction createClipPath(coordSys, hasAnimation, seriesModel) {\n  if (!coordSys) {\n    return null;\n  } else if (coordSys.type === 'polar') {\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  } else if (coordSys.type === 'cartesian2d') {\n    return createGridClipPath(coordSys, hasAnimation, seriesModel);\n  }\n  return null;\n}\nexports.createGridClipPath = createGridClipPath;\nexports.createPolarClipPath = createPolarClipPath;\nexports.createClipPath = createClipPath;","map":{"version":3,"names":["graphic","require","_number","round","createGridClipPath","cartesian","hasAnimation","seriesModel","rect","getArea","isHorizontal","getBaseAxis","x","y","width","height","lineWidth","get","Math","floor","clipPath","Rect","shape","initProps","createPolarClipPath","polar","sectorArea","Sector","cx","cy","r0","r","startAngle","endAngle","clockwise","createClipPath","coordSys","type","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/chart/helper/createClipPathFromCoordSys.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction createGridClipPath(cartesian, hasAnimation, seriesModel) {\n  var rect = cartesian.getArea();\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = rect.x;\n  var y = rect.y;\n  var width = rect.width;\n  var height = rect.height;\n  var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand the clip path a bit to avoid the border is clipped and looks thinner\n\n  x -= lineWidth / 2;\n  y -= lineWidth / 2;\n  width += lineWidth;\n  height += lineWidth; // fix: https://github.com/apache/incubator-echarts/issues/11369\n\n  x = Math.floor(x);\n  width = Math.round(width);\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipPath(polar, hasAnimation, seriesModel) {\n  var sectorArea = polar.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(sectorArea.r0, 1),\n      r: round(sectorArea.r, 1),\n      startAngle: sectorArea.startAngle,\n      endAngle: sectorArea.endAngle,\n      clockwise: sectorArea.clockwise\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = sectorArea.startAngle;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: sectorArea.endAngle\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipPath(coordSys, hasAnimation, seriesModel) {\n  if (!coordSys) {\n    return null;\n  } else if (coordSys.type === 'polar') {\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  } else if (coordSys.type === 'cartesian2d') {\n    return createGridClipPath(coordSys, hasAnimation, seriesModel);\n  }\n\n  return null;\n}\n\nexports.createGridClipPath = createGridClipPath;\nexports.createPolarClipPath = createPolarClipPath;\nexports.createClipPath = createClipPath;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}