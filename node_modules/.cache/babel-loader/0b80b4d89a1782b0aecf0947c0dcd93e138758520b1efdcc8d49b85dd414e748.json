{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\nvar viewHelper = require(\"./viewHelper\");\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    return {\n      type: 'Line',\n      subPixelOptimize: true,\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;","map":{"version":3,"names":["BaseAxisPointer","require","viewHelper","singleAxisHelper","AxisView","XY","WH","SingleAxisPointer","extend","makeElOption","elOption","value","axisModel","axisPointerModel","api","axis","coordSys","coordinateSystem","otherExtent","getGlobalExtent","getPointDimIndex","pixelValue","dataToPoint","axisPointerType","get","elStyle","buildElStyle","pointerOption","pointerShapeBuilder","style","graphicKey","type","pointer","layoutInfo","layout","buildCartesianSingleLabelElOption","getHandleTransform","labelInside","labelMargin","position","getTransformedPosition","rotation","labelDirection","Math","PI","updateHandleTransform","transform","delta","dimIndex","axisExtent","currPosition","min","max","cursorOtherValue","cursorPoint","tooltipOption","verticalAlign","line","targetShape","makeLineShape","subPixelOptimize","shape","shadow","bandWidth","getBandWidth","span","makeRectShape","isHorizontal","rect","getRect","registerAxisPointerClass","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    return {\n      type: 'Line',\n      subPixelOptimize: true,\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,eAAe,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAElD,IAAIC,UAAU,GAAGD,OAAO,CAAC,cAAc,CAAC;AAExC,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,qCAAqC,CAAC;AAErE,IAAIG,QAAQ,GAAGH,OAAO,CAAC,kBAAkB,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAII,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;AACnB,IAAIC,EAAE,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC;AAC5B,IAAIC,iBAAiB,GAAGP,eAAe,CAACQ,MAAM,CAAC;EAC7C;AACF;AACA;EACEC,YAAY,EAAE,SAAAA,CAAUC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,EAAEC,gBAAgB,EAAEC,GAAG,EAAE;IACzE,IAAIC,IAAI,GAAGH,SAAS,CAACG,IAAI;IACzB,IAAIC,QAAQ,GAAGD,IAAI,CAACE,gBAAgB;IACpC,IAAIC,WAAW,GAAGC,eAAe,CAACH,QAAQ,EAAE,CAAC,GAAGI,gBAAgB,CAACL,IAAI,CAAC,CAAC;IACvE,IAAIM,UAAU,GAAGL,QAAQ,CAACM,WAAW,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/C,IAAIY,eAAe,GAAGV,gBAAgB,CAACW,GAAG,CAAC,MAAM,CAAC;IAElD,IAAID,eAAe,IAAIA,eAAe,KAAK,MAAM,EAAE;MACjD,IAAIE,OAAO,GAAGvB,UAAU,CAACwB,YAAY,CAACb,gBAAgB,CAAC;MACvD,IAAIc,aAAa,GAAGC,mBAAmB,CAACL,eAAe,CAAC,CAACR,IAAI,EAAEM,UAAU,EAAEH,WAAW,CAAC;MACvFS,aAAa,CAACE,KAAK,GAAGJ,OAAO;MAC7Bf,QAAQ,CAACoB,UAAU,GAAGH,aAAa,CAACI,IAAI;MACxCrB,QAAQ,CAACsB,OAAO,GAAGL,aAAa;IAClC;IAEA,IAAIM,UAAU,GAAG9B,gBAAgB,CAAC+B,MAAM,CAACtB,SAAS,CAAC;IACnDV,UAAU,CAACiC,iCAAiC,CAACxB,KAAK,EAAED,QAAQ,EAAEuB,UAAU,EAAErB,SAAS,EAAEC,gBAAgB,EAAEC,GAAG,CAAC;EAC7G,CAAC;EAED;AACF;AACA;EACEsB,kBAAkB,EAAE,SAAAA,CAAUzB,KAAK,EAAEC,SAAS,EAAEC,gBAAgB,EAAE;IAChE,IAAIoB,UAAU,GAAG9B,gBAAgB,CAAC+B,MAAM,CAACtB,SAAS,EAAE;MAClDyB,WAAW,EAAE;IACf,CAAC,CAAC;IACFJ,UAAU,CAACK,WAAW,GAAGzB,gBAAgB,CAACW,GAAG,CAAC,eAAe,CAAC;IAC9D,OAAO;MACLe,QAAQ,EAAErC,UAAU,CAACsC,sBAAsB,CAAC5B,SAAS,CAACG,IAAI,EAAEJ,KAAK,EAAEsB,UAAU,CAAC;MAC9EQ,QAAQ,EAAER,UAAU,CAACQ,QAAQ,IAAIR,UAAU,CAACS,cAAc,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAG,CAAC;IAC9E,CAAC;EACH,CAAC;EAED;AACF;AACA;EACEC,qBAAqB,EAAE,SAAAA,CAAUC,SAAS,EAAEC,KAAK,EAAEnC,SAAS,EAAEC,gBAAgB,EAAE;IAC9E,IAAIE,IAAI,GAAGH,SAAS,CAACG,IAAI;IACzB,IAAIC,QAAQ,GAAGD,IAAI,CAACE,gBAAgB;IACpC,IAAI+B,QAAQ,GAAG5B,gBAAgB,CAACL,IAAI,CAAC;IACrC,IAAIkC,UAAU,GAAG9B,eAAe,CAACH,QAAQ,EAAEgC,QAAQ,CAAC;IACpD,IAAIE,YAAY,GAAGJ,SAAS,CAACP,QAAQ;IACrCW,YAAY,CAACF,QAAQ,CAAC,IAAID,KAAK,CAACC,QAAQ,CAAC;IACzCE,YAAY,CAACF,QAAQ,CAAC,GAAGL,IAAI,CAACQ,GAAG,CAACF,UAAU,CAAC,CAAC,CAAC,EAAEC,YAAY,CAACF,QAAQ,CAAC,CAAC;IACxEE,YAAY,CAACF,QAAQ,CAAC,GAAGL,IAAI,CAACS,GAAG,CAACH,UAAU,CAAC,CAAC,CAAC,EAAEC,YAAY,CAACF,QAAQ,CAAC,CAAC;IACxE,IAAI9B,WAAW,GAAGC,eAAe,CAACH,QAAQ,EAAE,CAAC,GAAGgC,QAAQ,CAAC;IACzD,IAAIK,gBAAgB,GAAG,CAACnC,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC;IAC5D,IAAIoC,WAAW,GAAG,CAACD,gBAAgB,EAAEA,gBAAgB,CAAC;IACtDC,WAAW,CAACN,QAAQ,CAAC,GAAGE,YAAY,CAACF,QAAQ,CAAC;IAC9C,OAAO;MACLT,QAAQ,EAAEW,YAAY;MACtBT,QAAQ,EAAEK,SAAS,CAACL,QAAQ;MAC5Ba,WAAW,EAAEA,WAAW;MACxBC,aAAa,EAAE;QACbC,aAAa,EAAE;MACjB;IACF,CAAC;EACH;AACF,CAAC,CAAC;AACF,IAAI5B,mBAAmB,GAAG;EACxB6B,IAAI,EAAE,SAAAA,CAAU1C,IAAI,EAAEM,UAAU,EAAEH,WAAW,EAAE;IAC7C,IAAIwC,WAAW,GAAGxD,UAAU,CAACyD,aAAa,CAAC,CAACtC,UAAU,EAAEH,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAACG,UAAU,EAAEH,WAAW,CAAC,CAAC,CAAC,CAAC,EAAEE,gBAAgB,CAACL,IAAI,CAAC,CAAC;IAC9H,OAAO;MACLgB,IAAI,EAAE,MAAM;MACZ6B,gBAAgB,EAAE,IAAI;MACtBC,KAAK,EAAEH;IACT,CAAC;EACH,CAAC;EACDI,MAAM,EAAE,SAAAA,CAAU/C,IAAI,EAAEM,UAAU,EAAEH,WAAW,EAAE;IAC/C,IAAI6C,SAAS,GAAGhD,IAAI,CAACiD,YAAY,EAAE;IACnC,IAAIC,IAAI,GAAG/C,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC;IAC1C,OAAO;MACLa,IAAI,EAAE,MAAM;MACZ8B,KAAK,EAAE3D,UAAU,CAACgE,aAAa,CAAC,CAAC7C,UAAU,GAAG0C,SAAS,GAAG,CAAC,EAAE7C,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC6C,SAAS,EAAEE,IAAI,CAAC,EAAE7C,gBAAgB,CAACL,IAAI,CAAC;IACzH,CAAC;EACH;AACF,CAAC;AAED,SAASK,gBAAgBA,CAACL,IAAI,EAAE;EAC9B,OAAOA,IAAI,CAACoD,YAAY,EAAE,GAAG,CAAC,GAAG,CAAC;AACpC;AAEA,SAAShD,eAAeA,CAACH,QAAQ,EAAEgC,QAAQ,EAAE;EAC3C,IAAIoB,IAAI,GAAGpD,QAAQ,CAACqD,OAAO,EAAE;EAC7B,OAAO,CAACD,IAAI,CAAC/D,EAAE,CAAC2C,QAAQ,CAAC,CAAC,EAAEoB,IAAI,CAAC/D,EAAE,CAAC2C,QAAQ,CAAC,CAAC,GAAGoB,IAAI,CAAC9D,EAAE,CAAC0C,QAAQ,CAAC,CAAC,CAAC;AACtE;AAEA5C,QAAQ,CAACkE,wBAAwB,CAAC,mBAAmB,EAAE/D,iBAAiB,CAAC;AACzE,IAAIgE,QAAQ,GAAGhE,iBAAiB;AAChCiE,MAAM,CAACC,OAAO,GAAGF,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}