{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\nvar __DEV__ = _config.__DEV__;\nvar echarts = require(\"../../echarts\");\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar graphic = require(\"../../util/graphic\");\nvar _helper = require(\"./helper\");\nvar setLabel = _helper.setLabel;\nvar Model = require(\"../../model/Model\");\nvar barItemStyle = require(\"./barItemStyle\");\nvar Path = require(\"zrender/lib/graphic/Path\");\nvar Group = require(\"zrender/lib/container/Group\");\nvar _throttle = require(\"../../util/throttle\");\nvar throttle = _throttle.throttle;\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\nvar Sausage = require(\"../../util/shape/sausage\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth'];\nvar _eventPos = [0, 0]; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n  if (coord.type === 'cartesian2d') {\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n  return coordSysClipArea;\n}\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var needsClip = seriesModel.get('clip', true);\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\n\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var barBorderRadius = backgroundModel.get('barBorderRadius') || 0;\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls || [];\n    var createBackground = function (dataIndex) {\n      var bgLayout = getLayout[coord.type](data, dataIndex);\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\n      bgEl.useStyle(backgroundModel.getBarItemStyle()); // Only cartesian2d support borderRadius.\n\n      if (coord.type === 'cartesian2d') {\n        bgEl.setShape('r', barBorderRadius);\n      }\n      bgEls[dataIndex] = bgEl;\n      return bgEl;\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      if (drawBackground) {\n        createBackground(dataIndex);\n      } // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\n\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n      var el = elementCreator[coord.type](dataIndex, layout, isHorizontalOrRadial, animationModel, false, roundCap);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n      if (drawBackground) {\n        var bgEl;\n        if (oldBgEls.length === 0) {\n          bgEl = createBackground(oldIndex);\n        } else {\n          bgEl = oldBgEls[oldIndex];\n          bgEl.useStyle(backgroundModel.getBarItemStyle()); // Only cartesian2d support borderRadius.\n\n          if (coord.type === 'cartesian2d') {\n            bgEl.setShape('r', barBorderRadius);\n          }\n          bgEls[newIndex] = bgEl;\n        }\n        var bgLayout = getLayout[coord.type](data, newIndex);\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\n        graphic.updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n      var el = oldData.getItemGraphicEl(oldIndex);\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n      if (needsClip) {\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](newIndex, layout, isHorizontalOrRadial, animationModel, true, roundCap);\n      }\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\n    bgGroup.removeAll();\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n    createLarge(seriesModel, this.group); // Use clipPath in large mode.\n\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    this._removeBackground();\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      this._removeBackground();\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n    this._data = null;\n  },\n  _removeBackground: function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  }\n});\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysBoundingRect.x + coordSysBoundingRect.width);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysBoundingRect.y + coordSysBoundingRect.height);\n    layout.x = x;\n    layout.y = y;\n    layout.width = x2 - x;\n    layout.height = y2 - y;\n    var clipped = layout.width < 0 || layout.height < 0; // Reverse back\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n    return clipped;\n  },\n  polar: function (coordSysClipArea, layout) {\n    var signR = layout.r0 <= layout.r ? 1 : -1; // Make sure r is larger than r0\n\n    if (signR < 0) {\n      var r = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = r;\n    }\n    var r = mathMin(layout.r, coordSysClipArea.r);\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\n    layout.r = r;\n    layout.r0 = r0;\n    var clipped = r - r0 < 0; // Reverse back\n\n    if (signR < 0) {\n      var r = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = r;\n    }\n    return clipped;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (dataIndex, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout),\n      z2: 1\n    });\n    rect.name = 'item'; // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n    return rect;\n  },\n  polar: function (dataIndex, layout, isRadial, animationModel, isUpdate, roundCap) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? Sausage : graphic.Sector;\n    var sector = new ShapeClass({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout),\n      z2: 1\n    });\n    sector.name = 'item'; // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n    return sector;\n  }\n};\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\nvar getLayout = {\n  // itemModel is only used to get borderWidth, which is not needed\n  // when calculating bar background layout.\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0; // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var stroke = data.getVisual('borderColor');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n  el.useStyle(zrUtil.defaults({\n    stroke: isZeroOnPolar(layout) ? 'none' : stroke,\n    fill: isZeroOnPolar(layout) ? 'none' : color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n  if (isZeroOnPolar(layout)) {\n    hoverStyle.fill = hoverStyle.stroke = 'none';\n  }\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0; // width or height may be NaN for empty data\n\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('barWidth');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var drawBackground = seriesModel.get('showBackground', true);\n  if (drawBackground) {\n    var points = data.getLayout('largeBackgroundPoints');\n    var backgroundStartPoint = [];\n    backgroundStartPoint[1 - baseDimIdx] = data.getLayout('backgroundStart');\n    var bgEl = new LargePath({\n      shape: {\n        points: points\n      },\n      incremental: !!incremental,\n      __startPoint: backgroundStartPoint,\n      __baseDimIdx: baseDimIdx,\n      __largeDataIndices: largeDataIndices,\n      __barWidth: barWidth,\n      silent: true,\n      z2: 0\n    });\n    setLargeBackgroundStyle(bgEl, backgroundModel, data);\n    group.add(bgEl);\n  }\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __baseDimIdx: baseDimIdx,\n    __largeDataIndices: largeDataIndices,\n    __barWidth: barWidth\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\n\n  el.seriesIndex = seriesModel.seriesIndex;\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  largePath.dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n  return -1;\n}\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\nfunction setLargeBackgroundStyle(el, backgroundModel, data) {\n  var borderColor = backgroundModel.get('borderColor') || backgroundModel.get('color');\n  var itemStyle = backgroundModel.getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  var coordLayout;\n  var isPolar = coord.type === 'polar';\n  if (isPolar) {\n    coordLayout = coord.getArea();\n  } else {\n    coordLayout = coord.grid.getRect();\n  }\n  if (isPolar) {\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : layout.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : layout.r,\n      startAngle: isHorizontalOrRadial ? layout.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? layout.endAngle : Math.PI * 2\n    };\n  } else {\n    return {\n      x: isHorizontalOrRadial ? layout.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : layout.y,\n      width: isHorizontalOrRadial ? layout.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : layout.height\n    };\n  }\n}\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? graphic.Sector : graphic.Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\nmodule.exports = _default;","map":{"version":3,"names":["_config","require","__DEV__","echarts","zrUtil","graphic","_helper","setLabel","Model","barItemStyle","Path","Group","_throttle","throttle","_createClipPathFromCoordSys","createClipPath","Sausage","BAR_BORDER_WIDTH_QUERY","_eventPos","extend","prototype","getClipArea","coord","data","coordSysClipArea","getArea","type","baseAxis","getBaseAxis","onBand","expandWidth","getLayout","isHorizontal","x","width","y","height","_default","extendChartView","render","seriesModel","ecModel","api","_updateDrawMode","coordinateSystemType","get","_isLargeDraw","_renderLarge","_renderNormal","group","incrementalPrepareRender","_clear","incrementalRender","params","_incrementalRenderLarge","isLargeDraw","pipelineContext","large","getData","oldData","_data","coordinateSystem","isHorizontalOrRadial","dim","animationModel","isAnimationEnabled","needsClip","removeClipPath","roundCap","drawBackground","backgroundModel","getModel","barBorderRadius","bgEls","oldBgEls","_backgroundEls","createBackground","dataIndex","bgLayout","bgEl","createBackgroundEl","useStyle","getBarItemStyle","setShape","diff","add","itemModel","getItemModel","layout","hasValue","isClipped","clip","remove","el","elementCreator","setItemGraphicEl","updateStyle","update","newIndex","oldIndex","length","shape","createBackgroundShape","updateProps","getItemGraphicEl","removeRect","removeSector","execute","bgGroup","_backgroundGroup","removeAll","i","createLarge","clipPath","setClipPath","_removeBackground","dispose","noop","eachItemGraphicEl","mathMax","Math","max","mathMin","min","cartesian2d","coordSysBoundingRect","signWidth","signHeight","x2","y2","clipped","polar","signR","r0","r","isUpdate","rect","Rect","z2","name","rectShape","animateProperty","animateTarget","isRadial","clockwise","startAngle","endAngle","ShapeClass","Sector","sector","defaults","sectorShape","style","text","parent","getItemLayout","fixedLineWidth","getLineWidth","signX","signY","cx","cy","isZeroOnPolar","isPolar","color","getItemVisual","opacity","stroke","getVisual","itemStyleModel","hoverStyle","fill","cursorStyle","getShallow","attr","labelPositionOutside","setHoverStyle","rawLayout","lineWidth","isNaN","Number","MAX_VALUE","abs","LargePath","points","buildPath","ctx","startPoint","__startPoint","baseDimIdx","__baseDimIdx","moveTo","lineTo","incremental","largeDataIndices","barWidth","backgroundStartPoint","__largeDataIndices","__barWidth","silent","setLargeBackgroundStyle","setLargeStyle","seriesIndex","on","largePathUpdateDataIndex","event","largePath","largePathFindDataIndex","offsetX","offsetY","valueDimIdx","barWidthHalf","startValueVal","pointerBaseVal","pointerValueVal","baseLowerBound","baseUpperBound","len","ii","barBaseVal","barValueVal","borderColor","itemStyle","getItemStyle","coordLayout","grid","getRect","PI","ElementClz","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/chart/bar/BarView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar _throttle = require(\"../../util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\n\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\n\nvar Sausage = require(\"../../util/shape/sausage\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth'];\nvar _eventPos = [0, 0]; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (coord.type === 'cartesian2d') {\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var needsClip = seriesModel.get('clip', true);\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\n\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var barBorderRadius = backgroundModel.get('barBorderRadius') || 0;\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls || [];\n\n    var createBackground = function (dataIndex) {\n      var bgLayout = getLayout[coord.type](data, dataIndex);\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\n      bgEl.useStyle(backgroundModel.getBarItemStyle()); // Only cartesian2d support borderRadius.\n\n      if (coord.type === 'cartesian2d') {\n        bgEl.setShape('r', barBorderRadius);\n      }\n\n      bgEls[dataIndex] = bgEl;\n      return bgEl;\n    };\n\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (drawBackground) {\n        createBackground(dataIndex);\n      } // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\n\n\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n\n      var el = elementCreator[coord.type](dataIndex, layout, isHorizontalOrRadial, animationModel, false, roundCap);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl;\n\n        if (oldBgEls.length === 0) {\n          bgEl = createBackground(oldIndex);\n        } else {\n          bgEl = oldBgEls[oldIndex];\n          bgEl.useStyle(backgroundModel.getBarItemStyle()); // Only cartesian2d support borderRadius.\n\n          if (coord.type === 'cartesian2d') {\n            bgEl.setShape('r', barBorderRadius);\n          }\n\n          bgEls[newIndex] = bgEl;\n        }\n\n        var bgLayout = getLayout[coord.type](data, newIndex);\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\n        graphic.updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      if (needsClip) {\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](newIndex, layout, isHorizontalOrRadial, animationModel, true, roundCap);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\n    bgGroup.removeAll();\n\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group); // Use clipPath in large mode.\n\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    this._removeBackground();\n\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      this._removeBackground();\n\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  },\n  _removeBackground: function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  }\n});\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysBoundingRect.x + coordSysBoundingRect.width);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysBoundingRect.y + coordSysBoundingRect.height);\n    layout.x = x;\n    layout.y = y;\n    layout.width = x2 - x;\n    layout.height = y2 - y;\n    var clipped = layout.width < 0 || layout.height < 0; // Reverse back\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return clipped;\n  },\n  polar: function (coordSysClipArea, layout) {\n    var signR = layout.r0 <= layout.r ? 1 : -1; // Make sure r is larger than r0\n\n    if (signR < 0) {\n      var r = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = r;\n    }\n\n    var r = mathMin(layout.r, coordSysClipArea.r);\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\n    layout.r = r;\n    layout.r0 = r0;\n    var clipped = r - r0 < 0; // Reverse back\n\n    if (signR < 0) {\n      var r = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = r;\n    }\n\n    return clipped;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (dataIndex, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout),\n      z2: 1\n    });\n    rect.name = 'item'; // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (dataIndex, layout, isRadial, animationModel, isUpdate, roundCap) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? Sausage : graphic.Sector;\n    var sector = new ShapeClass({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout),\n      z2: 1\n    });\n    sector.name = 'item'; // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  // itemModel is only used to get borderWidth, which is not needed\n  // when calculating bar background layout.\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0; // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var stroke = data.getVisual('borderColor');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    stroke: isZeroOnPolar(layout) ? 'none' : stroke,\n    fill: isZeroOnPolar(layout) ? 'none' : color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  if (isZeroOnPolar(layout)) {\n    hoverStyle.fill = hoverStyle.stroke = 'none';\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0; // width or height may be NaN for empty data\n\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('barWidth');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var drawBackground = seriesModel.get('showBackground', true);\n\n  if (drawBackground) {\n    var points = data.getLayout('largeBackgroundPoints');\n    var backgroundStartPoint = [];\n    backgroundStartPoint[1 - baseDimIdx] = data.getLayout('backgroundStart');\n    var bgEl = new LargePath({\n      shape: {\n        points: points\n      },\n      incremental: !!incremental,\n      __startPoint: backgroundStartPoint,\n      __baseDimIdx: baseDimIdx,\n      __largeDataIndices: largeDataIndices,\n      __barWidth: barWidth,\n      silent: true,\n      z2: 0\n    });\n    setLargeBackgroundStyle(bgEl, backgroundModel, data);\n    group.add(bgEl);\n  }\n\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __baseDimIdx: baseDimIdx,\n    __largeDataIndices: largeDataIndices,\n    __barWidth: barWidth\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\n\n  el.seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  largePath.dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction setLargeBackgroundStyle(el, backgroundModel, data) {\n  var borderColor = backgroundModel.get('borderColor') || backgroundModel.get('color');\n  var itemStyle = backgroundModel.getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  var coordLayout;\n  var isPolar = coord.type === 'polar';\n\n  if (isPolar) {\n    coordLayout = coord.getArea();\n  } else {\n    coordLayout = coord.grid.getRect();\n  }\n\n  if (isPolar) {\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : layout.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : layout.r,\n      startAngle: isHorizontalOrRadial ? layout.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? layout.endAngle : Math.PI * 2\n    };\n  } else {\n    return {\n      x: isHorizontalOrRadial ? layout.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : layout.y,\n      width: isHorizontalOrRadial ? layout.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : layout.height\n    };\n  }\n}\n\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? graphic.Sector : graphic.Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}