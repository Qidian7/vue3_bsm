{"ast":null,"code":"import { dataView } from \"@/api/api\";\nexport default {\n  name: \"DataView\",\n  data() {\n    return {};\n  },\n  created() {\n    // 第二个图标的绘制\n    dataView().then(res => {\n      console.log(res);\n      if (res.status === 200) {\n        let {\n          legend,\n          xAxis,\n          series\n        } = res.data.data;\n        this.draw(legend, xAxis, series);\n      }\n    }).catch(err => {\n      throw err;\n    });\n  },\n  // 在mounted中绘制图表\n  mounted() {\n    // 首先初始化echarts图表\n    let myChart = this.$echarts.init(document.getElementById(\"main1\"));\n    myChart.setOption({\n      title: {\n        text: \"课题组人数分布\"\n      },\n      tooltip: {},\n      // 鼠标放上去有对应提示\n      xAxis: {\n        data: [\"2018\", \"2019\", \"2020\", \"2021\", \"2022\", \"2023\"]\n      },\n      yAxis: {},\n      // 数据配置在series中\n      series: [{\n        name: \"人数\",\n        // 图表类型，线图line 柱状图bar\n        type: \"bar\",\n        data: [2, 4, 23, 27, 31, 39]\n      }]\n    });\n  },\n  methods: {\n    draw(legend, xAxis, series) {\n      let myChart1 = this.$echarts.init(document.getElementById(\"main2\"));\n      let option = {\n        title: {\n          text: \"会话量\"\n        },\n        toolbar: {\n          trigger: \"axis\"\n        },\n        legend: {\n          data: legend\n        },\n        xAxis: {\n          type: \"category\",\n          data: xAxis\n        },\n        yAxis: {\n          type: \"value\"\n        },\n        series\n      };\n      myChart1.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["dataView","name","data","created","then","res","console","log","status","legend","xAxis","series","draw","catch","err","mounted","myChart","$echarts","init","document","getElementById","setOption","title","text","tooltip","yAxis","type","methods","myChart1","option","toolbar","trigger"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/src/components/DataAnalysis/DataView.vue"],"sourcesContent":["<template>\n  <div class=\"dataView\">\n    <el-card>\n      <div id=\"main1\"></div>\n    </el-card>\n    <el-card>\n      <div id=\"main2\"></div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { dataView } from \"@/api/api\";\nexport default {\n  name: \"DataView\",\n  data() {\n    return {};\n  },\n  created() {\n    // 第二个图标的绘制\n    dataView()\n      .then((res) => {\n        console.log(res);\n        if (res.status === 200) {\n          let { legend, xAxis, series } = res.data.data;\n          this.draw(legend, xAxis, series);\n        }\n      })\n      .catch((err) => {\n        throw err;\n      });\n  },\n  // 在mounted中绘制图表\n  mounted() {\n    // 首先初始化echarts图表\n    let myChart = this.$echarts.init(document.getElementById(\"main1\"));\n    myChart.setOption({\n      title: {\n        text: \"课题组人数分布\",\n      },\n      tooltip: {}, // 鼠标放上去有对应提示\n      xAxis: {\n        data: [\"2018\", \"2019\", \"2020\", \"2021\", \"2022\", \"2023\"],\n      },\n      yAxis: {},\n      // 数据配置在series中\n      series: [\n        {\n          name: \"人数\",\n          // 图表类型，线图line 柱状图bar\n          type: \"bar\",\n          data: [2, 4, 23, 27, 31, 39],\n        },\n      ],\n    });\n  },\n  methods: {\n    draw(legend, xAxis, series) {\n      let myChart1 = this.$echarts.init(document.getElementById(\"main2\"));\n      let option = {\n        title: {\n          text: \"会话量\",\n        },\n        toolbar: {\n          trigger: \"axis\",\n        },\n        legend: {\n          data: legend,\n        },\n        xAxis: {\n          type: \"category\",\n          data: xAxis,\n        },\n        yAxis: {\n          type: \"value\",\n        },\n        series,\n      };\n      myChart1.setOption(option);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// 图表中一定要给宽高 ， 如果不给宽高会出现代码不报错但是什么都没有\n.dataView {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  .el-card {\n    width: 50%;\n    #main1,\n    #main2 {\n      height: 500px;\n    }\n  }\n}\n</style>\n"],"mappings":"AAYA,SAASA,QAAO,QAAS,WAAW;AACpC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO,CAAC,CAAC;EACX,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACAH,QAAQ,EAAC,CACNI,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAIA,GAAG,CAACG,MAAK,KAAM,GAAG,EAAE;QACtB,IAAI;UAAEC,MAAM;UAAEC,KAAK;UAAEC;QAAO,IAAIN,GAAG,CAACH,IAAI,CAACA,IAAI;QAC7C,IAAI,CAACU,IAAI,CAACH,MAAM,EAAEC,KAAK,EAAEC,MAAM,CAAC;MAClC;IACF,CAAC,EACAE,KAAK,CAAEC,GAAG,IAAK;MACd,MAAMA,GAAG;IACX,CAAC,CAAC;EACN,CAAC;EACD;EACAC,OAAOA,CAAA,EAAG;IACR;IACA,IAAIC,OAAM,GAAI,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAAC;IAClEJ,OAAO,CAACK,SAAS,CAAC;MAChBC,KAAK,EAAE;QACLC,IAAI,EAAE;MACR,CAAC;MACDC,OAAO,EAAE,CAAC,CAAC;MAAE;MACbd,KAAK,EAAE;QACLR,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;MACvD,CAAC;MACDuB,KAAK,EAAE,CAAC,CAAC;MACT;MACAd,MAAM,EAAE,CACN;QACEV,IAAI,EAAE,IAAI;QACV;QACAyB,IAAI,EAAE,KAAK;QACXxB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;MAC7B,CAAC;IAEL,CAAC,CAAC;EACJ,CAAC;EACDyB,OAAO,EAAE;IACPf,IAAIA,CAACH,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAE;MAC1B,IAAIiB,QAAO,GAAI,IAAI,CAACX,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAAC;MACnE,IAAIS,MAAK,GAAI;QACXP,KAAK,EAAE;UACLC,IAAI,EAAE;QACR,CAAC;QACDO,OAAO,EAAE;UACPC,OAAO,EAAE;QACX,CAAC;QACDtB,MAAM,EAAE;UACNP,IAAI,EAAEO;QACR,CAAC;QACDC,KAAK,EAAE;UACLgB,IAAI,EAAE,UAAU;UAChBxB,IAAI,EAAEQ;QACR,CAAC;QACDe,KAAK,EAAE;UACLC,IAAI,EAAE;QACR,CAAC;QACDf;MACF,CAAC;MACDiB,QAAQ,CAACP,SAAS,CAACQ,MAAM,CAAC;IAC5B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}