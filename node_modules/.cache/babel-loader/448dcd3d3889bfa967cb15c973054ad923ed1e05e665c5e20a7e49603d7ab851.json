{"ast":null,"code":"var Eventful = require(\"../mixin/Eventful\");\nexports.Dispatcher = Eventful;\nvar env = require(\"./env\");\nvar _dom = require(\"./dom\");\nvar isCanvasEl = _dom.isCanvasEl;\nvar transformCoordWithViewport = _dom.transformCoordWithViewport;\n\n/**\n * Utilities for mouse or touch events.\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\nvar _calcOut = [];\n/**\n * Get the `zrX` and `zrY`, which are relative to the top-left of\n * the input `el`.\n * CSS transform (2D & 3D) is supported.\n *\n * The strategy to fetch the coords:\n * + If `calculate` is not set as `true`, users of this method should\n * ensure that `el` is the same or the same size & location as `e.target`.\n * Otherwise the result coords are probably not expected. Because we\n * firstly try to get coords from e.offsetX/e.offsetY.\n * + If `calculate` is set as `true`, the input `el` can be any element\n * and we force to calculate the coords based on `el`.\n * + The input `el` should be positionable (not position:static).\n *\n * The force `calculate` can be used in case like:\n * When mousemove event triggered on ec tooltip, `e.target` is not `el`(zr painter.dom).\n *\n * @param {HTMLElement} el DOM element.\n * @param {Event} e Mouse event or touch event.\n * @param {Object} out Get `out.zrX` and `out.zrY` as the result.\n * @param {boolean} [calculate=false] Whether to force calculate\n *        the coordinates but not use ones provided by browser.\n */\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n\n  if (calculate || !env.canvasSupported) {\n    calculateZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n    out.zrX = e.layerX;\n    out.zrY = e.layerY;\n  } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n  else if (e.offsetX != null) {\n    out.zrX = e.offsetX;\n    out.zrY = e.offsetY;\n  } // For some other device, e.g., IOS safari.\n  else {\n    calculateZrXY(el, e, out);\n  }\n  return out;\n}\nfunction calculateZrXY(el, e, out) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect.\n  if (env.domSupported && el.getBoundingClientRect) {\n    var ex = e.clientX;\n    var ey = e.clientY;\n    if (isCanvasEl(el)) {\n      // Original approach, which do not support CSS transform.\n      // marker can not be locationed in a canvas container\n      // (getBoundingClientRect is always 0). We do not support\n      // that input a pre-created canvas to zr while using css\n      // transform in iOS.\n      var box = el.getBoundingClientRect();\n      out.zrX = ex - box.left;\n      out.zrY = ey - box.top;\n      return;\n    } else {\n      if (transformCoordWithViewport(_calcOut, el, ex, ey)) {\n        out.zrX = _calcOut[0];\n        out.zrY = _calcOut[1];\n        return;\n      }\n    }\n  }\n  out.zrX = out.zrY = 0;\n}\n/**\n * Find native event compat for legency IE.\n * Should be called at the begining of a native event listener.\n *\n * @param {Event} [e] Mouse event or touch event or pointer event.\n *        For lagency IE, we use `window.event` is used.\n * @return {Event} The native event.\n */\n\nfunction getNativeEvent(e) {\n  return e || window.event;\n}\n/**\n * Normalize the coordinates of the input event.\n *\n * Get the `e.zrX` and `e.zrY`, which are relative to the top-left of\n * the input `el`.\n * Get `e.zrDelta` if using mouse wheel.\n * Get `e.which`, see the comment inside this function.\n *\n * Do not calculate repeatly if `zrX` and `zrY` already exist.\n *\n * Notice: see comments in `clientToLocal`. check the relationship\n * between the result coords and the parameters `el` and `calculate`.\n *\n * @param {HTMLElement} el DOM element.\n * @param {Event} [e] See `getNativeEvent`.\n * @param {boolean} [calculate=false] Whether to force calculate\n *        the coordinates but not use ones provided by browser.\n * @return {UIEvent} The normalized native UIEvent.\n */\n\nfunction normalizeEvent(el, e, calculate) {\n  e = getNativeEvent(e);\n  if (e.zrX != null) {\n    return e;\n  }\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType !== 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, it may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n  var button = e.button;\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  } // [Caution]: `e.which` from browser is not always reliable. For example,\n  // when press left button and `mousemove (pointermove)` in Edge, the `e.which`\n  // is 65536 and the `e.button` is -1. But the `mouseup (pointerup)` and\n  // `mousedown (pointerdown)` is the same as Chrome does.\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n * @param {Object|boolean} opt If boolean, means `opt.capture`\n * @param {boolean} [opt.capture=false]\n * @param {boolean} [opt.passive=false]\n */\n\nfunction addEventListener(el, name, handler, opt) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler, opt);\n  } else {\n    // For simplicity, do not implement `setCapture` for IE9-.\n    el.attachEvent('on' + name, handler);\n  }\n}\n/**\n * Parameter are the same as `addEventListener`.\n *\n * Notice that if a listener is registered twice, one with capture and one without,\n * remove each one separately. Removal of a capturing listener does not affect a\n * non-capturing version of the same listener, and vice versa.\n */\n\nfunction removeEventListener(el, name, handler, opt) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler, opt);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not use this method in zrender. It can only be\n * used by upper applications if necessary.\n *\n * @param {Event} e A mouse or touch event.\n */\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n/**\n * This method only works for mouseup and mousedown. The functionality is restricted\n * for fault tolerance, See the `e.which` compatibility above.\n *\n * @param {MouseEvent} e\n * @return {boolean}\n */\n\nfunction isMiddleOrRightButtonOnMouseUpDown(e) {\n  return e.which === 2 || e.which === 3;\n}\n/**\n * To be removed.\n * @deprecated\n */\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // For backward compatibility\n\nexports.clientToLocal = clientToLocal;\nexports.getNativeEvent = getNativeEvent;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.isMiddleOrRightButtonOnMouseUpDown = isMiddleOrRightButtonOnMouseUpDown;\nexports.notLeftMouse = notLeftMouse;","map":{"version":3,"names":["Eventful","require","exports","Dispatcher","env","_dom","isCanvasEl","transformCoordWithViewport","isDomLevel2","window","addEventListener","MOUSE_EVENT_REG","_calcOut","clientToLocal","el","e","out","calculate","canvasSupported","calculateZrXY","browser","firefox","layerX","offsetX","zrX","zrY","layerY","offsetY","domSupported","getBoundingClientRect","ex","clientX","ey","clientY","box","left","top","getNativeEvent","event","normalizeEvent","eventType","type","isTouch","indexOf","zrDelta","wheelDelta","detail","touch","targetTouches","changedTouches","button","which","undefined","test","name","handler","opt","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","isMiddleOrRightButtonOnMouseUpDown","notLeftMouse"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/zrender/lib/core/event.js"],"sourcesContent":["var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\nvar _dom = require(\"./dom\");\n\nvar isCanvasEl = _dom.isCanvasEl;\nvar transformCoordWithViewport = _dom.transformCoordWithViewport;\n\n/**\n * Utilities for mouse or touch events.\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\nvar _calcOut = [];\n/**\n * Get the `zrX` and `zrY`, which are relative to the top-left of\n * the input `el`.\n * CSS transform (2D & 3D) is supported.\n *\n * The strategy to fetch the coords:\n * + If `calculate` is not set as `true`, users of this method should\n * ensure that `el` is the same or the same size & location as `e.target`.\n * Otherwise the result coords are probably not expected. Because we\n * firstly try to get coords from e.offsetX/e.offsetY.\n * + If `calculate` is set as `true`, the input `el` can be any element\n * and we force to calculate the coords based on `el`.\n * + The input `el` should be positionable (not position:static).\n *\n * The force `calculate` can be used in case like:\n * When mousemove event triggered on ec tooltip, `e.target` is not `el`(zr painter.dom).\n *\n * @param {HTMLElement} el DOM element.\n * @param {Event} e Mouse event or touch event.\n * @param {Object} out Get `out.zrX` and `out.zrY` as the result.\n * @param {boolean} [calculate=false] Whether to force calculate\n *        the coordinates but not use ones provided by browser.\n */\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n\n  if (calculate || !env.canvasSupported) {\n    calculateZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          calculateZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction calculateZrXY(el, e, out) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect.\n  if (env.domSupported && el.getBoundingClientRect) {\n    var ex = e.clientX;\n    var ey = e.clientY;\n\n    if (isCanvasEl(el)) {\n      // Original approach, which do not support CSS transform.\n      // marker can not be locationed in a canvas container\n      // (getBoundingClientRect is always 0). We do not support\n      // that input a pre-created canvas to zr while using css\n      // transform in iOS.\n      var box = el.getBoundingClientRect();\n      out.zrX = ex - box.left;\n      out.zrY = ey - box.top;\n      return;\n    } else {\n      if (transformCoordWithViewport(_calcOut, el, ex, ey)) {\n        out.zrX = _calcOut[0];\n        out.zrY = _calcOut[1];\n        return;\n      }\n    }\n  }\n\n  out.zrX = out.zrY = 0;\n}\n/**\n * Find native event compat for legency IE.\n * Should be called at the begining of a native event listener.\n *\n * @param {Event} [e] Mouse event or touch event or pointer event.\n *        For lagency IE, we use `window.event` is used.\n * @return {Event} The native event.\n */\n\n\nfunction getNativeEvent(e) {\n  return e || window.event;\n}\n/**\n * Normalize the coordinates of the input event.\n *\n * Get the `e.zrX` and `e.zrY`, which are relative to the top-left of\n * the input `el`.\n * Get `e.zrDelta` if using mouse wheel.\n * Get `e.which`, see the comment inside this function.\n *\n * Do not calculate repeatly if `zrX` and `zrY` already exist.\n *\n * Notice: see comments in `clientToLocal`. check the relationship\n * between the result coords and the parameters `el` and `calculate`.\n *\n * @param {HTMLElement} el DOM element.\n * @param {Event} [e] See `getNativeEvent`.\n * @param {boolean} [calculate=false] Whether to force calculate\n *        the coordinates but not use ones provided by browser.\n * @return {UIEvent} The normalized native UIEvent.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = getNativeEvent(e);\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType !== 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, it may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  } // [Caution]: `e.which` from browser is not always reliable. For example,\n  // when press left button and `mousemove (pointermove)` in Edge, the `e.which`\n  // is 65536 and the `e.button` is -1. But the `mouseup (pointerup)` and\n  // `mousedown (pointerdown)` is the same as Chrome does.\n\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n * @param {Object|boolean} opt If boolean, means `opt.capture`\n * @param {boolean} [opt.capture=false]\n * @param {boolean} [opt.passive=false]\n */\n\n\nfunction addEventListener(el, name, handler, opt) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler, opt);\n  } else {\n    // For simplicity, do not implement `setCapture` for IE9-.\n    el.attachEvent('on' + name, handler);\n  }\n}\n/**\n * Parameter are the same as `addEventListener`.\n *\n * Notice that if a listener is registered twice, one with capture and one without,\n * remove each one separately. Removal of a capturing listener does not affect a\n * non-capturing version of the same listener, and vice versa.\n */\n\n\nfunction removeEventListener(el, name, handler, opt) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler, opt);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not use this method in zrender. It can only be\n * used by upper applications if necessary.\n *\n * @param {Event} e A mouse or touch event.\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n/**\n * This method only works for mouseup and mousedown. The functionality is restricted\n * for fault tolerance, See the `e.which` compatibility above.\n *\n * @param {MouseEvent} e\n * @return {boolean}\n */\n\nfunction isMiddleOrRightButtonOnMouseUpDown(e) {\n  return e.which === 2 || e.which === 3;\n}\n/**\n * To be removed.\n * @deprecated\n */\n\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // For backward compatibility\n\n\nexports.clientToLocal = clientToLocal;\nexports.getNativeEvent = getNativeEvent;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.isMiddleOrRightButtonOnMouseUpDown = isMiddleOrRightButtonOnMouseUpDown;\nexports.notLeftMouse = notLeftMouse;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}