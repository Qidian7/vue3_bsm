{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;","map":{"version":3,"names":["updateViewOnPan","controllerHost","dx","dy","target","pos","position","dirty","updateViewOnZoom","zoomDelta","zoomX","zoomY","zoomLimit","scale","newZoom","zoom","zoomMin","min","zoomMax","max","Infinity","Math","zoomScale","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/component/helper/roamHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAeA,CAACC,cAAc,EAAEC,EAAE,EAAEC,EAAE,EAAE;EAC/C,IAAIC,MAAM,GAAGH,cAAc,CAACG,MAAM;EAClC,IAAIC,GAAG,GAAGD,MAAM,CAACE,QAAQ;EACzBD,GAAG,CAAC,CAAC,CAAC,IAAIH,EAAE;EACZG,GAAG,CAAC,CAAC,CAAC,IAAIF,EAAE;EACZC,MAAM,CAACG,KAAK,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,gBAAgBA,CAACP,cAAc,EAAEQ,SAAS,EAAEC,KAAK,EAAEC,KAAK,EAAE;EACjE,IAAIP,MAAM,GAAGH,cAAc,CAACG,MAAM;EAClC,IAAIQ,SAAS,GAAGX,cAAc,CAACW,SAAS;EACxC,IAAIP,GAAG,GAAGD,MAAM,CAACE,QAAQ;EACzB,IAAIO,KAAK,GAAGT,MAAM,CAACS,KAAK;EACxB,IAAIC,OAAO,GAAGb,cAAc,CAACc,IAAI,GAAGd,cAAc,CAACc,IAAI,IAAI,CAAC;EAC5DD,OAAO,IAAIL,SAAS;EAEpB,IAAIG,SAAS,EAAE;IACb,IAAII,OAAO,GAAGJ,SAAS,CAACK,GAAG,IAAI,CAAC;IAChC,IAAIC,OAAO,GAAGN,SAAS,CAACO,GAAG,IAAIC,QAAQ;IACvCN,OAAO,GAAGO,IAAI,CAACF,GAAG,CAACE,IAAI,CAACJ,GAAG,CAACC,OAAO,EAAEJ,OAAO,CAAC,EAAEE,OAAO,CAAC;EACzD;EAEA,IAAIM,SAAS,GAAGR,OAAO,GAAGb,cAAc,CAACc,IAAI;EAC7Cd,cAAc,CAACc,IAAI,GAAGD,OAAO,CAAC,CAAC;;EAE/BT,GAAG,CAAC,CAAC,CAAC,IAAI,CAACK,KAAK,GAAGL,GAAG,CAAC,CAAC,CAAC,KAAKiB,SAAS,GAAG,CAAC,CAAC;EAC5CjB,GAAG,CAAC,CAAC,CAAC,IAAI,CAACM,KAAK,GAAGN,GAAG,CAAC,CAAC,CAAC,KAAKiB,SAAS,GAAG,CAAC,CAAC;EAC5CT,KAAK,CAAC,CAAC,CAAC,IAAIS,SAAS;EACrBT,KAAK,CAAC,CAAC,CAAC,IAAIS,SAAS;EACrBlB,MAAM,CAACG,KAAK,EAAE;AAChB;AAEAgB,OAAO,CAACvB,eAAe,GAAGA,eAAe;AACzCuB,OAAO,CAACf,gBAAgB,GAAGA,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}