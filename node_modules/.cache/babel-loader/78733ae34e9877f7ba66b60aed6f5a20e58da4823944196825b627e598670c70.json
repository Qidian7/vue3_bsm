{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\nexports.updateCenterAndZoom = updateCenterAndZoom;","map":{"version":3,"names":["updateCenterAndZoom","view","payload","zoomLimit","previousZoom","getZoom","center","getCenter","zoom","point","dataToPoint","dx","dy","pointToData","setCenter","zoomMin","min","zoomMax","max","Infinity","Math","scale","position","fixX","originX","fixY","originY","updateTransform","setZoom","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/action/roamHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAmBA,CAACC,IAAI,EAAEC,OAAO,EAAEC,SAAS,EAAE;EACrD,IAAIC,YAAY,GAAGH,IAAI,CAACI,OAAO,EAAE;EACjC,IAAIC,MAAM,GAAGL,IAAI,CAACM,SAAS,EAAE;EAC7B,IAAIC,IAAI,GAAGN,OAAO,CAACM,IAAI;EACvB,IAAIC,KAAK,GAAGR,IAAI,CAACS,WAAW,CAACJ,MAAM,CAAC;EAEpC,IAAIJ,OAAO,CAACS,EAAE,IAAI,IAAI,IAAIT,OAAO,CAACU,EAAE,IAAI,IAAI,EAAE;IAC5CH,KAAK,CAAC,CAAC,CAAC,IAAIP,OAAO,CAACS,EAAE;IACtBF,KAAK,CAAC,CAAC,CAAC,IAAIP,OAAO,CAACU,EAAE;IACtB,IAAIN,MAAM,GAAGL,IAAI,CAACY,WAAW,CAACJ,KAAK,CAAC;IACpCR,IAAI,CAACa,SAAS,CAACR,MAAM,CAAC;EACxB;EAEA,IAAIE,IAAI,IAAI,IAAI,EAAE;IAChB,IAAIL,SAAS,EAAE;MACb,IAAIY,OAAO,GAAGZ,SAAS,CAACa,GAAG,IAAI,CAAC;MAChC,IAAIC,OAAO,GAAGd,SAAS,CAACe,GAAG,IAAIC,QAAQ;MACvCX,IAAI,GAAGY,IAAI,CAACF,GAAG,CAACE,IAAI,CAACJ,GAAG,CAACZ,YAAY,GAAGI,IAAI,EAAES,OAAO,CAAC,EAAEF,OAAO,CAAC,GAAGX,YAAY;IACjF,CAAC,CAAC;;IAGFH,IAAI,CAACoB,KAAK,CAAC,CAAC,CAAC,IAAIb,IAAI;IACrBP,IAAI,CAACoB,KAAK,CAAC,CAAC,CAAC,IAAIb,IAAI;IACrB,IAAIc,QAAQ,GAAGrB,IAAI,CAACqB,QAAQ;IAC5B,IAAIC,IAAI,GAAG,CAACrB,OAAO,CAACsB,OAAO,GAAGF,QAAQ,CAAC,CAAC,CAAC,KAAKd,IAAI,GAAG,CAAC,CAAC;IACvD,IAAIiB,IAAI,GAAG,CAACvB,OAAO,CAACwB,OAAO,GAAGJ,QAAQ,CAAC,CAAC,CAAC,KAAKd,IAAI,GAAG,CAAC,CAAC;IACvDc,QAAQ,CAAC,CAAC,CAAC,IAAIC,IAAI;IACnBD,QAAQ,CAAC,CAAC,CAAC,IAAIG,IAAI;IACnBxB,IAAI,CAAC0B,eAAe,EAAE,CAAC,CAAC;;IAExB,IAAIrB,MAAM,GAAGL,IAAI,CAACY,WAAW,CAACJ,KAAK,CAAC;IACpCR,IAAI,CAACa,SAAS,CAACR,MAAM,CAAC;IACtBL,IAAI,CAAC2B,OAAO,CAACpB,IAAI,GAAGJ,YAAY,CAAC;EACnC;EAEA,OAAO;IACLE,MAAM,EAAEL,IAAI,CAACM,SAAS,EAAE;IACxBC,IAAI,EAAEP,IAAI,CAACI,OAAO;EACpB,CAAC;AACH;AAEAwB,OAAO,CAAC7B,mBAAmB,GAAGA,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}