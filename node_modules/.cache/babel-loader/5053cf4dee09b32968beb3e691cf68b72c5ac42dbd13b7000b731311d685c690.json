{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\nvar __DEV__ = _config.__DEV__;\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar _clazz = require(\"../util/clazz\");\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id == null ? '' + dataIndex : '' + id;\n  var nodesMap = this._nodesMap;\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n  if (!n1 || !n2) {\n    return;\n  }\n  var key = n1.id + '-' + n2.id;\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n  n1.edges.push(edge);\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n  var edgesMap = this._edgesMap;\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n  if (!startNode) {\n    return;\n  }\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n  var queue = [startNode];\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\nNode.prototype = {\n  constructor: Node,\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;","map":{"version":3,"names":["_config","require","__DEV__","zrUtil","_clazz","enableClassCheck","generateNodeKey","id","Graph","directed","_directed","nodes","edges","_nodesMap","_edgesMap","data","edgeData","graphProto","prototype","type","isDirected","addNode","dataIndex","nodesMap","node","Node","hostGraph","push","getNodeByIndex","rawIdx","getRawIndex","getNodeById","addEdge","n1","n2","edgesMap","isInstance","key","edge","Edge","outEdges","inEdges","getEdgeByIndex","getEdge","eachNode","cb","context","len","length","i","call","eachEdge","node1","node2","breadthFirstTraverse","startNode","direction","edgeType","__visited","queue","currentNode","shift","e","otherNode","update","count","filterSelf","idx","clone","graph","constructor","degree","inDegree","outDegree","getModel","path","itemModel","getItemModel","createGraphDataProxyMixin","hostName","dataName","getValue","dimension","get","getDimension","setVisual","value","setItemVisual","getVisual","ignoreParent","getItemVisual","setLayout","layout","merge","setItemLayout","getLayout","getItemLayout","getGraphicEl","getItemGraphicEl","mixin","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/data/Graph.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id == null ? '' + dataIndex : '' + id;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id;\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}