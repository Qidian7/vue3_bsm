{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nvar Path = require(\"../graphic/Path\");\nvar PathProxy = require(\"../core/PathProxy\");\nvar transformPath = require(\"./transformPath\");\n\n// command chars\n// var cc = [\n//     'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n//     'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n// ];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\nvar commandReg = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/ig; // Consider case:\n// (1) delimiter can be comma or space, where continuous commas\n// or spaces should be seen as one comma.\n// (2) value can be like:\n// '2e-4', 'l.5.9' (ignore 0), 'M-10-10', 'l-2.43e-1,34.9983',\n// 'l-.5E1,54', '121-23-44-11' (no delimiter)\n\nvar numberReg = /-?([0-9]*\\.)?[0-9]+([eE]-?[0-9]+)?/g; // var valueSplitReg = /[\\s,]+/;\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return new PathProxy();\n  } // var data = data.replace(/-/g, ' -')\n  //     .replace(/  /g, ' ')\n  //     .replace(/ /g, ',')\n  //     .replace(/,,/g, ',');\n  // var n;\n  // create pipes so that we can split the data\n  // for (n = 0; n < cc.length; n++) {\n  //     cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  // }\n  // data = data.replace(/-/g, ',-');\n  // create array\n  // var arr = cs.split('|');\n  // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var subpathX = cpx;\n  var subpathY = cpy;\n  var prevCmd;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD; // commandReg.lastIndex = 0;\n  // var cmdResult;\n  // while ((cmdResult = commandReg.exec(data)) != null) {\n  //     var cmdStr = cmdResult[1];\n  //     var cmdContent = cmdResult[2];\n\n  var cmdList = data.match(commandReg);\n  for (var l = 0; l < cmdList.length; l++) {\n    var cmdText = cmdList[l];\n    var cmdStr = cmdText.charAt(0);\n    var cmd; // String#split is faster a little bit than String#replace or RegExp#exec.\n    // var p = cmdContent.split(valueSplitReg);\n    // var pLen = 0;\n    // for (var i = 0; i < p.length; i++) {\n    //     // '' and other invalid str => NaN\n    //     var val = parseFloat(p[i]);\n    //     !isNaN(val) && (p[pLen++] = val);\n    // }\n\n    var p = cmdText.match(numberReg) || [];\n    var pLen = p.length;\n    for (var i = 0; i < pLen; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n    var off = 0;\n    while (off < pLen) {\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (cmdStr) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          subpathX = cpx;\n          subpathY = cpy;\n          cmdStr = 'l';\n          break;\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          subpathX = cpx;\n          subpathY = cpy;\n          cmdStr = 'L';\n          break;\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n    if (cmdStr === 'z' || cmdStr === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd); // z may be in the middle of the path.\n\n      cpx = subpathX;\n      cpy = subpathY;\n    }\n    prevCmd = cmd;\n  }\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n    pathList.push(pathEl.path);\n  }\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n  return pathBundle;\n}\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;","map":{"version":3,"names":["Path","require","PathProxy","transformPath","mathSqrt","Math","sqrt","mathSin","sin","mathCos","cos","PI","vMag","v","vRatio","u","vAngle","acos","processArc","x1","y1","x2","y2","fa","fs","rx","ry","psiDeg","cmd","path","psi","xp","yp","lambda","f","cxp","cyp","cx","cy","theta","dTheta","addData","commandReg","numberReg","createPathProxyFromString","data","cpx","cpy","subpathX","subpathY","prevCmd","CMD","cmdList","match","l","length","cmdText","cmdStr","charAt","p","pLen","i","parseFloat","off","ctlPtx","ctlPty","L","M","C","len","pathData","Q","A","Z","toStatic","createPathOptions","str","opts","pathProxy","buildPath","setData","ctx","getContext","rebuildPath","applyTransform","m","dirty","createFromString","extendFromString","extend","mergePath","pathEls","pathList","pathEl","createPathProxy","__dirtyPath","shape","push","pathBundle","appendPath","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/zrender/lib/tool/path.js"],"sourcesContent":["var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\n// var cc = [\n//     'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n//     'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n// ];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nvar commandReg = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/ig; // Consider case:\n// (1) delimiter can be comma or space, where continuous commas\n// or spaces should be seen as one comma.\n// (2) value can be like:\n// '2e-4', 'l.5.9' (ignore 0), 'M-10-10', 'l-2.43e-1,34.9983',\n// 'l-.5E1,54', '121-23-44-11' (no delimiter)\n\nvar numberReg = /-?([0-9]*\\.)?[0-9]+([eE]-?[0-9]+)?/g; // var valueSplitReg = /[\\s,]+/;\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return new PathProxy();\n  } // var data = data.replace(/-/g, ' -')\n  //     .replace(/  /g, ' ')\n  //     .replace(/ /g, ',')\n  //     .replace(/,,/g, ',');\n  // var n;\n  // create pipes so that we can split the data\n  // for (n = 0; n < cc.length; n++) {\n  //     cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  // }\n  // data = data.replace(/-/g, ',-');\n  // create array\n  // var arr = cs.split('|');\n  // init context point\n\n\n  var cpx = 0;\n  var cpy = 0;\n  var subpathX = cpx;\n  var subpathY = cpy;\n  var prevCmd;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD; // commandReg.lastIndex = 0;\n  // var cmdResult;\n  // while ((cmdResult = commandReg.exec(data)) != null) {\n  //     var cmdStr = cmdResult[1];\n  //     var cmdContent = cmdResult[2];\n\n  var cmdList = data.match(commandReg);\n\n  for (var l = 0; l < cmdList.length; l++) {\n    var cmdText = cmdList[l];\n    var cmdStr = cmdText.charAt(0);\n    var cmd; // String#split is faster a little bit than String#replace or RegExp#exec.\n    // var p = cmdContent.split(valueSplitReg);\n    // var pLen = 0;\n    // for (var i = 0; i < p.length; i++) {\n    //     // '' and other invalid str => NaN\n    //     var val = parseFloat(p[i]);\n    //     !isNaN(val) && (p[pLen++] = val);\n    // }\n\n    var p = cmdText.match(numberReg) || [];\n    var pLen = p.length;\n\n    for (var i = 0; i < pLen; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    var off = 0;\n\n    while (off < pLen) {\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (cmdStr) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          subpathX = cpx;\n          subpathY = cpy;\n          cmdStr = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          subpathX = cpx;\n          subpathY = cpy;\n          cmdStr = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (cmdStr === 'z' || cmdStr === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd); // z may be in the middle of the path.\n\n      cpx = subpathX;\n      cpy = subpathY;\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}