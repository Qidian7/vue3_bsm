{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// 把正则判定拉出去放到utils里面封装\nimport { nameRule, pwdRule } from \"../utils/validate.js\";\nimport { setToken } from \"../utils/setToken.js\";\nimport { login } from \"@/api/api\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      form: {\n        username: \"\",\n        password: \"\"\n      },\n      rules: {\n        username: [\n        //新方法 自定义校验规则\n        {\n          required: true,\n          validator: nameRule,\n          trigger: \"blur\"\n        }\n        //旧方法\n        //   { required: true, message: \"请输入用户名\", trigger: \"blur\" },\n        //   { min: 6, max: 10, message: \"长度在6-10位字符之间\", trigger: \"blur\" },\n        ],\n\n        password: [\n        //新方法 自定义校验规则\n        {\n          required: true,\n          validator: pwdRule,\n          trigger: \"blur\"\n        }\n        //旧方法\n        //   { required: true, message: \"请输入密码\", trigger: \"blur\" },\n        //   { min: 6, max: 12, message: \"长度在6-10位字符之间\", trigger: \"blur\" },\n        ]\n      }\n    };\n  },\n\n  methods: {\n    login(form) {\n      this.$refs[form].validate(valid => {\n        if (valid) {\n          console.log(this.form);\n          /*\n           把这个登录封装成api进行调用\n          this.service.post(\"/login\", this.form).then((res) => {\n            if (res.status === 200) {\n              setToken(\"username\", res.data.username);\n              setToken(\"token\", res.data.token);\n              this.$message({ message: res.data.message, type: \"success\" });\n              this.$router.push(\"/home\");\n            }\n            // console.log(res);\n          });\n          */\n          login(this.form).then(res => {\n            if (res.status === 200) {\n              setToken(\"username\", res.data.username);\n              setToken(\"token\", res.data.token);\n              this.$message({\n                message: res.data.message,\n                type: \"success\"\n              });\n              this.$router.push(\"/home\");\n            }\n          });\n        } else {\n          console.error(this.form);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["nameRule","pwdRule","setToken","login","name","data","form","username","password","rules","required","validator","trigger","methods","$refs","validate","valid","console","log","then","res","status","token","$message","message","type","$router","push","error"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/src/components/Login.vue"],"sourcesContent":["<!-- 登录页面注重的是表单的提交 -->\n<template>\n  <div class=\"login\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"clearfix\">\n          <span>314-2管理系统</span>\n        </div>\n      </template>\n      <!-- <div slot=\"header\" class=\"clearfix\">\n        <span>314-2管理系统</span>\n      </div> -->\n      <el-form label-width=\"80px\" :model=\"form\" ref=\"form\" :rules=\"rules\">\n        <!-- prop用来表单验证 -->\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"form.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input type=\"password\" v-model=\"form.password\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"login('form')\">登录</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\n// 把正则判定拉出去放到utils里面封装\nimport { nameRule, pwdRule } from \"../utils/validate.js\";\nimport { setToken } from \"../utils/setToken.js\";\nimport { login } from \"@/api/api\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      form: {\n        username: \"\",\n        password: \"\",\n      },\n      rules: {\n        username: [\n          //新方法 自定义校验规则\n          { required: true, validator: nameRule, trigger: \"blur\" },\n          //旧方法\n          //   { required: true, message: \"请输入用户名\", trigger: \"blur\" },\n          //   { min: 6, max: 10, message: \"长度在6-10位字符之间\", trigger: \"blur\" },\n        ],\n        password: [\n          //新方法 自定义校验规则\n          { required: true, validator: pwdRule, trigger: \"blur\" },\n          //旧方法\n          //   { required: true, message: \"请输入密码\", trigger: \"blur\" },\n          //   { min: 6, max: 12, message: \"长度在6-10位字符之间\", trigger: \"blur\" },\n        ],\n      },\n    };\n  },\n  methods: {\n    login(form) {\n      this.$refs[form].validate((valid) => {\n        if (valid) {\n          console.log(this.form);\n          /*\n           把这个登录封装成api进行调用\n          this.service.post(\"/login\", this.form).then((res) => {\n            if (res.status === 200) {\n              setToken(\"username\", res.data.username);\n              setToken(\"token\", res.data.token);\n              this.$message({ message: res.data.message, type: \"success\" });\n              this.$router.push(\"/home\");\n            }\n            // console.log(res);\n          });\n          */\n          login(this.form).then((res) => {\n            if (res.status === 200) {\n              setToken(\"username\", res.data.username);\n              setToken(\"token\", res.data.token);\n              this.$message({ message: res.data.message, type: \"success\" });\n              this.$router.push(\"/home\");\n            }\n          });\n        } else {\n          console.error(this.form);\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.login {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  //   background-color: #409eff;\n  background: url(../assets/pic/bg1.jpeg) center no-repeat;\n  background-size: 100%;\n  .box-card {\n    width: 450px;\n    margin: 200px auto;\n    // color: #fff;\n    opacity: 0.78;\n    .clearfix {\n      font-size: 36px;\n      text-align: center;\n    }\n    .el-button {\n      width: 50%;\n      transform: translateX(50px);\n    }\n  }\n}\n</style>\n"],"mappings":";AA6BA;AACA,SAASA,QAAQ,EAAEC,OAAM,QAAS,sBAAsB;AACxD,SAASC,QAAO,QAAS,sBAAsB;AAC/C,SAASC,KAAI,QAAS,WAAW;AACjC,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLF,QAAQ,EAAE;QACR;QACA;UAAEG,QAAQ,EAAE,IAAI;UAAEC,SAAS,EAAEX,QAAQ;UAAEY,OAAO,EAAE;QAAO;QACvD;QACA;QACA;QAAA,CACD;;QACDJ,QAAQ,EAAE;QACR;QACA;UAAEE,QAAQ,EAAE,IAAI;UAAEC,SAAS,EAAEV,OAAO;UAAEW,OAAO,EAAE;QAAO;QACtD;QACA;QACA;QAAA;MAEJ;IACF,CAAC;EACH,CAAC;;EACDC,OAAO,EAAE;IACPV,KAAKA,CAACG,IAAI,EAAE;MACV,IAAI,CAACQ,KAAK,CAACR,IAAI,CAAC,CAACS,QAAQ,CAAEC,KAAK,IAAK;QACnC,IAAIA,KAAK,EAAE;UACTC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,IAAI,CAAC;UACtB;;;;;;;;;;;;UAYAH,KAAK,CAAC,IAAI,CAACG,IAAI,CAAC,CAACa,IAAI,CAAEC,GAAG,IAAK;YAC7B,IAAIA,GAAG,CAACC,MAAK,KAAM,GAAG,EAAE;cACtBnB,QAAQ,CAAC,UAAU,EAAEkB,GAAG,CAACf,IAAI,CAACE,QAAQ,CAAC;cACvCL,QAAQ,CAAC,OAAO,EAAEkB,GAAG,CAACf,IAAI,CAACiB,KAAK,CAAC;cACjC,IAAI,CAACC,QAAQ,CAAC;gBAAEC,OAAO,EAAEJ,GAAG,CAACf,IAAI,CAACmB,OAAO;gBAAEC,IAAI,EAAE;cAAU,CAAC,CAAC;cAC7D,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;YAC5B;UACF,CAAC,CAAC;QACJ,OAAO;UACLV,OAAO,CAACW,KAAK,CAAC,IAAI,CAACtB,IAAI,CAAC;QAC1B;MACF,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}