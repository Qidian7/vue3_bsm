{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  slot: \"header\",\n  class: \"clearfix\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, \"314-2管理系统\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"box-card\"\n  }, {\n    default: _withCtx(() => [_hoisted_2, _createVNode(_component_el_form, {\n      \"label-width\": \"80px\",\n      model: $data.form,\n      ref: \"form\",\n      rules: $data.rules\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" prop用来表单验证 \"), _createVNode(_component_el_form_item, {\n        label: \"用户名\",\n        prop: \"username\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.form.username,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.username = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"密码\",\n        prop: \"password\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"password\",\n          modelValue: $data.form.password,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.password = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: _cache[2] || (_cache[2] = $event => $options.login('form'))\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"登录\")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementVNode","slot","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","_hoisted_2","_component_el_form","model","$data","form","ref","rules","_createCommentVNode","_component_el_form_item","label","prop","_component_el_input","username","$event","type","password","_component_el_button","onClick","_cache","$options","login"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/src/components/Login.vue"],"sourcesContent":["<!-- 登录页面注重的是表单的提交 -->\n<template>\n  <div class=\"login\">\n    <el-card class=\"box-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>314-2管理系统</span>\n      </div>\n      <el-form label-width=\"80px\" :model=\"form\" ref=\"form\" :rules=\"rules\">\n        <!-- prop用来表单验证 -->\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"form.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input type=\"password\" v-model=\"form.password\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"login('form')\">登录</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\n// 把正则判定拉出去放到utils里面封装\nimport { nameRule, pwdRule } from \"../utils/validate.js\";\nimport { setToken } from \"../utils/setToken.js\";\nimport { login } from \"@/api/api\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      form: {\n        username: \"\",\n        password: \"\",\n      },\n      rules: {\n        username: [\n          //新方法 自定义校验规则\n          { required: true, validator: nameRule, trigger: \"blur\" },\n          //旧方法\n          //   { required: true, message: \"请输入用户名\", trigger: \"blur\" },\n          //   { min: 6, max: 10, message: \"长度在6-10位字符之间\", trigger: \"blur\" },\n        ],\n        password: [\n          //新方法 自定义校验规则\n          { required: true, validator: pwdRule, trigger: \"blur\" },\n          //旧方法\n          //   { required: true, message: \"请输入密码\", trigger: \"blur\" },\n          //   { min: 6, max: 12, message: \"长度在6-10位字符之间\", trigger: \"blur\" },\n        ],\n      },\n    };\n  },\n  methods: {\n    login(form) {\n      this.$refs[form].validate((valid) => {\n        if (valid) {\n          console.log(this.form);\n          /*\n           把这个登录封装成api进行调用\n          this.service.post(\"/login\", this.form).then((res) => {\n            if (res.status === 200) {\n              setToken(\"username\", res.data.username);\n              setToken(\"token\", res.data.token);\n              this.$message({ message: res.data.message, type: \"success\" });\n              this.$router.push(\"/home\");\n            }\n            // console.log(res);\n          });\n          */\n          login(this.form).then((res) => {\n            if (res.status === 200) {\n              setToken(\"username\", res.data.username);\n              setToken(\"token\", res.data.token);\n              this.$message({ message: res.data.message, type: \"success\" });\n              this.$router.push(\"/home\");\n            }\n          });\n        } else {\n          console.error(this.form);\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.login {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  //   background-color: #409eff;\n  background: url(../assets/pic/bg1.jpeg) center no-repeat;\n  background-size: 100%;\n  .box-card {\n    width: 450px;\n    margin: 200px auto;\n    // color: #fff;\n    opacity: 0.78;\n    .clearfix {\n      font-size: 36px;\n      text-align: center;\n    }\n    .el-button {\n      width: 50%;\n      transform: translateX(50px);\n    }\n  }\n}\n</style>\n"],"mappings":";;EAEOA,KAAK,EAAC;AAAO;gCAEdC,mBAAA,CAEM;EAFDC,IAAI,EAAC,QAAQ;EAACF,KAAK,EAAC;iBACvBC,mBAAA,CAAsB,cAAhB,WAAS,E;;;;;;;;uBAHrBE,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJC,YAAA,CAgBUC,kBAAA;IAhBDN,KAAK,EAAC;EAAU;sBACvB,MAEM,CAFNO,UAEM,EACNF,YAAA,CAWUG,kBAAA;MAXD,aAAW,EAAC,MAAM;MAAEC,KAAK,EAAEC,KAAA,CAAAC,IAAI;MAAEC,GAAG,EAAC,MAAM;MAAEC,KAAK,EAAEH,KAAA,CAAAG;;wBAC3D,MAAmB,CAAnBC,mBAAA,gBAAmB,EACnBT,YAAA,CAEeU,uBAAA;QAFDC,KAAK,EAAC,KAAK;QAACC,IAAI,EAAC;;0BAC7B,MAA6C,CAA7CZ,YAAA,CAA6Ca,mBAAA;sBAA1BR,KAAA,CAAAC,IAAI,CAACQ,QAAQ;qEAAbT,KAAA,CAAAC,IAAI,CAACQ,QAAQ,GAAAC,MAAA;;;UAElCf,YAAA,CAEeU,uBAAA;QAFDC,KAAK,EAAC,IAAI;QAACC,IAAI,EAAC;;0BAC5B,MAA6D,CAA7DZ,YAAA,CAA6Da,mBAAA;UAAnDG,IAAI,EAAC,UAAU;sBAAUX,KAAA,CAAAC,IAAI,CAACW,QAAQ;qEAAbZ,KAAA,CAAAC,IAAI,CAACW,QAAQ,GAAAF,MAAA;;;UAElDf,YAAA,CAEeU,uBAAA;0BADb,MAA+D,CAA/DV,YAAA,CAA+DkB,oBAAA;UAApDF,IAAI,EAAC,SAAS;UAAEG,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAL,MAAA,IAAEM,QAAA,CAAAC,KAAK;;4BAAU,MAAE,C,iBAAF,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}