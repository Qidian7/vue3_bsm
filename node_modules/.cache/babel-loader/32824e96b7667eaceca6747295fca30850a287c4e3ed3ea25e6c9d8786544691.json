{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nvar _core = require(\"./core\");\nvar createElement = _core.createElement;\nvar util = require(\"../core/util\");\nvar logError = require(\"../core/log\");\nvar Path = require(\"../graphic/Path\");\nvar ZImage = require(\"../graphic/Image\");\nvar ZText = require(\"../graphic/Text\");\nvar arrayDiff = require(\"../core/arrayDiff2\");\nvar GradientManager = require(\"./helper/GradientManager\");\nvar ClippathManager = require(\"./helper/ClippathManager\");\nvar ShadowManager = require(\"./helper/ShadowManager\");\nvar _graphic = require(\"./graphic\");\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n} // function append(parent, child) {\n//     if (checkParentAvailable(parent, child)) {\n//         parent.appendChild(child);\n//     }\n// }\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\nvar SVGPainter = function (root, storage, opts, zrId) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgDom = createElement('svg');\n  svgDom.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgDom.setAttribute('version', '1.1');\n  svgDom.setAttribute('baseProfile', 'full');\n  svgDom.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n  var bgRoot = createElement('g');\n  svgDom.appendChild(bgRoot);\n  var svgRoot = createElement('g');\n  svgDom.appendChild(svgRoot);\n  this.gradientManager = new GradientManager(zrId, svgRoot);\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgDom = svgDom;\n  this._svgRoot = svgRoot;\n  this._backgroundRoot = bgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgDom);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getSvgDom: function () {\n    return this._svgDom;\n  },\n  getSvgRoot: function () {\n    return this._svgRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n    this._paintList(list);\n  },\n  setBackgroundColor: function (backgroundColor) {\n    // TODO gradient\n    // Insert a bg rect instead of setting background to viewport.\n    // Otherwise, the exported SVG don't have background.\n    if (this._backgroundRoot && this._backgroundNode) {\n      this._backgroundRoot.removeChild(this._backgroundNode);\n    }\n    var bgNode = createElement('rect');\n    bgNode.setAttribute('width', this.getWidth());\n    bgNode.setAttribute('height', this.getHeight());\n    bgNode.setAttribute('x', 0);\n    bgNode.setAttribute('y', 0);\n    bgNode.setAttribute('id', 0);\n    bgNode.style.fill = backgroundColor;\n    this._backgroundRoot.appendChild(bgNode);\n    this._backgroundNode = bgNode;\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    this.shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient and shadow\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n            this.shadowManager.update(svgElement, displayable);\n          }\n          displayable.__dirty = false;\n        }\n        newVisibleList.push(displayable);\n      }\n    }\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement; // zrender.Text only create textSvgElement.\n\n          this.gradientManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.shadowManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.shadowManager.markUsed(displayable);\n          this.shadowManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n          if (textSvgElement) {\n            // Insert text.\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          }\n          prevSvgElement = svgElement || textSvgElement || prevSvgElement;\n        }\n      }\n    }\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this.shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgDom;\n    var defs = svgRoot.getElementsByTagName('defs');\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'),\n        // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n            if (!children) {\n              return false;\n            }\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n            return false;\n          };\n        }\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgDom; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n    if (this._backgroundNode) {\n      this._backgroundNode.setAttribute('width', width);\n      this._backgroundNode.setAttribute('height', height);\n    }\n  },\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._backgroundRoot = this._svgDom = this._backgroundNode = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  toDataURL: function () {\n    this.refresh();\n    var html = encodeURIComponent(this._svgDom.outerHTML.replace(/></g, '>\\n\\r<'));\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    logError('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\nutil.each(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;","map":{"version":3,"names":["_core","require","createElement","util","logError","Path","ZImage","ZText","arrayDiff","GradientManager","ClippathManager","ShadowManager","_graphic","svgPath","path","svgImage","image","svgText","text","parseInt10","val","parseInt","getSvgProxy","el","checkParentAvailable","parent","child","parentNode","insertAfter","prevSibling","nextSibling","insertBefore","appendChild","prepend","firstChild","remove","removeChild","getTextSvgElement","displayable","__textSvgEl","getSvgElement","__svgEl","SVGPainter","root","storage","opts","zrId","_opts","extend","svgDom","setAttribute","style","cssText","bgRoot","svgRoot","gradientManager","clipPathManager","shadowManager","viewport","document","_svgDom","_svgRoot","_backgroundRoot","_viewport","resize","width","height","_visibleList","prototype","constructor","getType","getViewportRoot","getSvgDom","getSvgRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","refresh","list","getDisplayList","_paintList","setBackgroundColor","backgroundColor","_backgroundNode","bgNode","getWidth","getHeight","fill","markAllUnused","visibleList","listLen","length","newVisibleList","i","svgProxy","svgElement","invisible","__dirty","brush","update","stroke","push","diff","prevSvgElement","item","removed","k","count","indices","textSvgElement","added","addWithoutUpdate","markUsed","removeUnused","_getDefs","isForceCreating","defs","getElementsByTagName","contains","children","display","_getSize","_width","_height","viewportStyle","whIdx","wh","cwh","plt","prb","parseFloat","stl","defaultView","getComputedStyle","dispose","innerHTML","clear","toDataURL","html","encodeURIComponent","outerHTML","replace","createMethodNotSupport","method","each","name","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/zrender/lib/svg/Painter.js"],"sourcesContent":["var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar logError = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar ShadowManager = require(\"./helper/ShadowManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n} // function append(parent, child) {\n//     if (checkParentAvailable(parent, child)) {\n//         parent.appendChild(child);\n//     }\n// }\n\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts, zrId) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgDom = createElement('svg');\n  svgDom.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgDom.setAttribute('version', '1.1');\n  svgDom.setAttribute('baseProfile', 'full');\n  svgDom.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n  var bgRoot = createElement('g');\n  svgDom.appendChild(bgRoot);\n  var svgRoot = createElement('g');\n  svgDom.appendChild(svgRoot);\n  this.gradientManager = new GradientManager(zrId, svgRoot);\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgDom = svgDom;\n  this._svgRoot = svgRoot;\n  this._backgroundRoot = bgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgDom);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getSvgDom: function () {\n    return this._svgDom;\n  },\n  getSvgRoot: function () {\n    return this._svgRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  setBackgroundColor: function (backgroundColor) {\n    // TODO gradient\n    // Insert a bg rect instead of setting background to viewport.\n    // Otherwise, the exported SVG don't have background.\n    if (this._backgroundRoot && this._backgroundNode) {\n      this._backgroundRoot.removeChild(this._backgroundNode);\n    }\n\n    var bgNode = createElement('rect');\n    bgNode.setAttribute('width', this.getWidth());\n    bgNode.setAttribute('height', this.getHeight());\n    bgNode.setAttribute('x', 0);\n    bgNode.setAttribute('y', 0);\n    bgNode.setAttribute('id', 0);\n    bgNode.style.fill = backgroundColor;\n\n    this._backgroundRoot.appendChild(bgNode);\n\n    this._backgroundNode = bgNode;\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    this.shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient and shadow\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n            this.shadowManager.update(svgElement, displayable);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement; // zrender.Text only create textSvgElement.\n\n          this.gradientManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.shadowManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.shadowManager.markUsed(displayable);\n          this.shadowManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n\n          if (textSvgElement) {\n            // Insert text.\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          }\n\n          prevSvgElement = svgElement || textSvgElement || prevSvgElement;\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this.shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgDom;\n    var defs = svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgDom; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n\n    if (this._backgroundNode) {\n      this._backgroundNode.setAttribute('width', width);\n\n      this._backgroundNode.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._backgroundRoot = this._svgDom = this._backgroundNode = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  toDataURL: function () {\n    this.refresh();\n    var html = encodeURIComponent(this._svgDom.outerHTML.replace(/></g, '>\\n\\r<'));\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    logError('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\nutil.each(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}