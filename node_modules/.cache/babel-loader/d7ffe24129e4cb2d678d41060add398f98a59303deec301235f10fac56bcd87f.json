{"ast":null,"code":"var guid = require(\"./core/guid\");\nvar Eventful = require(\"./mixin/Eventful\");\nvar Transformable = require(\"./mixin/Transformable\");\nvar Animatable = require(\"./mixin/Animatable\");\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n    var m = this.transform;\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n        if (!target) {\n          target = this[key] = [];\n        }\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n    this.dirty(false);\n    return this;\n  },\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;","map":{"version":3,"names":["guid","require","Eventful","Transformable","Animatable","zrUtil","Element","opts","call","id","prototype","type","name","__zr","ignore","clipPath","isGroup","drift","dx","dy","draggable","m","transform","decomposeTransform","dirty","beforeUpdate","afterUpdate","update","updateTransform","traverse","cb","context","attrKV","key","value","target","hide","refresh","show","attr","isObject","hasOwnProperty","setClipPath","zr","addSelfToZr","removeClipPath","__clipTarget","removeSelfFromZr","animators","i","length","animation","addAnimator","removeAnimator","mixin","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/zrender/lib/Element.js"],"sourcesContent":["var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}