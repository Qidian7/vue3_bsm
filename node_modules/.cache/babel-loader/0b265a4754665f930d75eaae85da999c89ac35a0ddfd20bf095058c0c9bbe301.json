{"ast":null,"code":"var zrUtil = require(\"../core/util\");\nvar Style = require(\"./Style\");\nvar Element = require(\"../Element\");\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n  // Can only be `null`/`undefined` or an non-empty array, MUST NOT be an empty array.\n  // because it is easy to only using null to check whether clipPaths changed.\n\n  this.__clipPaths = null; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n  /**\n   * Dirty flag. From which painter will determine if this displayable object needs brush.\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n  /**\n   * Whether the displayable object is visible. when it is true, the displayable object\n   * is not drawn, but the mouse event can still trigger the object.\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n  /**\n   * The z level determines the displayable object can be drawn in which layer canvas.\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n  /**\n   * Whether it can be dragged.\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n  /**\n   * Whether is it dragging.\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n  /**\n   * Whether to respond to mouse events.\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  /**\n   * Scale ratio for global scale.\n   * @type {boolean}\n   */\n  globalScaleRatio: 1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n  /**\n   * Graphic drawing method.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n  /**\n   * Get the minimum bounding box.\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n  /**\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n  /**\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n  /**\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = this.__dirtyText = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n  /**\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, events bound by bind\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  },\n  /**\n   * The string value of `textPosition` needs to be calculated to a real postion.\n   * For example, `'inside'` is calculated to `[rect.width/2, rect.height/2]`\n   * by default. See `contain/text.js#calculateTextPosition` for more details.\n   * But some coutom shapes like \"pin\", \"flag\" have center that is not exactly\n   * `[width/2, height/2]`. So we provide this hook to customize the calculation\n   * for those shapes. It will be called if the `style.textPosition` is a string.\n   * @param {Obejct} [out] Prepared out object. If not provided, this method should\n   *        be responsible for creating one.\n   * @param {module:zrender/graphic/Style} style\n   * @param {Object} rect {x, y, width, height}\n   * @return {Obejct} out The same as the input out.\n   *         {\n   *             x: number. mandatory.\n   *             y: number. mandatory.\n   *             textAlign: string. optional. use style.textAlign by default.\n   *             textVerticalAlign: string. optional. use style.textVerticalAlign by default.\n   *         }\n   */\n  calculateTextPosition: null\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","Style","Element","RectText","Displayable","opts","call","name","hasOwnProperty","style","_rect","__clipPaths","prototype","constructor","type","__dirty","invisible","z","z2","zlevel","draggable","dragging","silent","culling","cursor","rectHover","progressive","incremental","globalScaleRatio","beforeBrush","ctx","afterBrush","brush","prevEl","getBoundingRect","contain","x","y","rectContain","traverse","cb","context","coord","transformCoordToLocal","rect","dirty","__dirtyText","__zr","refresh","animateStyle","loop","animate","attrKV","key","value","set","setStyle","useStyle","obj","calculateTextPosition","inherits","mixin","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/zrender/lib/graphic/Displayable.js"],"sourcesContent":["var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n  // Can only be `null`/`undefined` or an non-empty array, MUST NOT be an empty array.\n  // because it is easy to only using null to check whether clipPaths changed.\n\n  this.__clipPaths = null; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Dirty flag. From which painter will determine if this displayable object needs brush.\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * Whether the displayable object is visible. when it is true, the displayable object\n   * is not drawn, but the mouse event can still trigger the object.\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * The z level determines the displayable object can be drawn in which layer canvas.\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * Whether it can be dragged.\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * Whether is it dragging.\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * Whether to respond to mouse events.\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n\n  /**\n   * Scale ratio for global scale.\n   * @type {boolean}\n   */\n  globalScaleRatio: 1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * Graphic drawing method.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * Get the minimum bounding box.\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = this.__dirtyText = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, events bound by bind\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * The string value of `textPosition` needs to be calculated to a real postion.\n   * For example, `'inside'` is calculated to `[rect.width/2, rect.height/2]`\n   * by default. See `contain/text.js#calculateTextPosition` for more details.\n   * But some coutom shapes like \"pin\", \"flag\" have center that is not exactly\n   * `[width/2, height/2]`. So we provide this hook to customize the calculation\n   * for those shapes. It will be called if the `style.textPosition` is a string.\n   * @param {Obejct} [out] Prepared out object. If not provided, this method should\n   *        be responsible for creating one.\n   * @param {module:zrender/graphic/Style} style\n   * @param {Object} rect {x, y, width, height}\n   * @return {Obejct} out The same as the input out.\n   *         {\n   *             x: number. mandatory.\n   *             y: number. mandatory.\n   *             textAlign: string. optional. use style.textAlign by default.\n   *             textVerticalAlign: string. optional. use style.textVerticalAlign by default.\n   *         }\n   */\n  calculateTextPosition: null\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}