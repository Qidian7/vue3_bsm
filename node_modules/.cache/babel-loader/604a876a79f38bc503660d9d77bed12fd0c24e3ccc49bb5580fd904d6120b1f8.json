{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_tree, {\n    data: $data.menus,\n    \"show-checkbox\": \"\",\n    \"node-key\": \"id\",\n    \"default-expanded-keys\": [2, 3],\n    \"default-checked-keys\": [5],\n    props: $data.defaultProps,\n    ref: \"tree\"\n  }, null, 8 /* PROPS */, [\"data\", \"props\"]), _createVNode(_component_el_button, {\n    onClick: $options.getCheckedNodes\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"通过node获取\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_el_tree","data","$data","menus","props","defaultProps","ref","_component_el_button","onClick","$options","getCheckedNodes"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/src/components/Users/User.vue"],"sourcesContent":["<template>\n  <div>\n    <el-tree\n      :data=\"menus\"\n      show-checkbox\n      node-key=\"id\"\n      :default-expanded-keys=\"[2, 3]\"\n      :default-checked-keys=\"[5]\"\n      :props=\"defaultProps\"\n      ref=\"tree\"\n    >\n    </el-tree>\n    <el-button @click=\"getCheckedNodes\">通过node获取</el-button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"User\",\n  data() {\n    return {\n      menus: [],\n      defaultProps: {\n        label: \"name\",\n        children: \"children\",\n      },\n    };\n  },\n  created() {\n    this.menus = [...this.$router.options.routes];\n    console.log(this.$router.options.routes);\n    // 权限管理和动态路由的思路：\n    // 根据不同的用户登录上来，返回对应的路由权限菜单\n    // 一般可以通过树形控件达到权限的精准控制，根据不同角色，勾选不同的菜单权限，将菜单数据提交给后端进行保存\n    // 后端保存之后，在用户进行登录的时候就会查询该用户或该角色所拥有的菜单数据，最终进行动态渲染展示\n    // 动态添加路由 使用router.addRoutes(vue-router 3.x版本，已废弃)，后续使用router.addRoute进行动态路由添加\n  },\n  methods: {\n    getCheckedNodes() {\n      let arr = this.$refs.tree.getCheckedNodes();\n      console.log(arr);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"mappings":";;;;uBACEA,mBAAA,CAYM,cAXJC,YAAA,CASUC,kBAAA;IARPC,IAAI,EAAEC,KAAA,CAAAC,KAAK;IACZ,eAAa,EAAb,EAAa;IACb,UAAQ,EAAC,IAAI;IACZ,uBAAqB,EAAE,MAAM;IAC7B,sBAAoB,EAAE,GAAG;IACzBC,KAAK,EAAEF,KAAA,CAAAG,YAAY;IACpBC,GAAG,EAAC;8CAGNP,YAAA,CAAwDQ,oBAAA;IAA5CC,OAAK,EAAEC,QAAA,CAAAC;EAAe;sBAAE,MAAQ,C,iBAAR,UAAQ,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}