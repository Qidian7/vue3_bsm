{"ast":null,"code":"var matrix = require(\"../core/matrix\");\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n  this.origin = this.origin || null;\n};\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\nvar scaleTmp = [];\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n  m = m || matrix.create();\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n  this.transform = m;\n  var globalScaleRatio = this.globalScaleRatio;\n  if (globalScaleRatio != null && globalScaleRatio !== 1) {\n    this.getGlobalScale(scaleTmp);\n    var relX = scaleTmp[0] < 0 ? -1 : 1;\n    var relY = scaleTmp[1] < 0 ? -1 : 1;\n    var sx = ((scaleTmp[0] - relX) * globalScaleRatio + relX) / scaleTmp[0] || 0;\n    var sy = ((scaleTmp[1] - relY) * globalScaleRatio + relY) / scaleTmp[1] || 0;\n    m[0] *= sx;\n    m[1] *= sx;\n    m[2] *= sy;\n    m[3] *= sy;\n  }\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\nvar tmpTransform = [];\nvar originTransform = matrix.create();\ntransformableProto.setLocalTransform = function (m) {\n  if (!m) {\n    // TODO return or set identity?\n    return;\n  }\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n  var parent = this.parent;\n  var m = this.transform;\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n  var origin = this.origin;\n  if (origin && (origin[0] || origin[1])) {\n    originTransform[4] = origin[0];\n    originTransform[5] = origin[1];\n    matrix.mul(tmpTransform, m, originTransform);\n    tmpTransform[4] -= origin[0];\n    tmpTransform[5] -= origin[1];\n    m = tmpTransform;\n  }\n  this.setLocalTransform(m);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\ntransformableProto.getGlobalScale = function (out) {\n  var m = this.transform;\n  out = out || [];\n  if (!m) {\n    out[0] = 1;\n    out[1] = 1;\n    return out;\n  }\n  out[0] = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  out[1] = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n  if (m[0] < 0) {\n    out[0] = -out[0];\n  }\n  if (m[3] < 0) {\n    out[1] = -out[1];\n  }\n  return out;\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n  matrix.scale(m, m, scale);\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\nvar _default = Transformable;\nmodule.exports = _default;","map":{"version":3,"names":["matrix","require","vector","mIdentity","identity","EPSILON","isNotAroundZero","val","Transformable","opts","position","rotation","scale","origin","transformableProto","prototype","transform","needLocalTransform","scaleTmp","updateTransform","parent","parentHasTransform","m","create","getLocalTransform","mul","copy","globalScaleRatio","getGlobalScale","relX","relY","sx","sy","invTransform","invert","setTransform","ctx","dpr","restoreTransform","tmpTransform","originTransform","setLocalTransform","Math","sqrt","atan2","decomposeTransform","out","transformCoordToLocal","x","y","v2","applyTransform","transformCoordToGlobal","target","rotate","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/zrender/lib/mixin/Transformable.js"],"sourcesContent":["var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\nvar scaleTmp = [];\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  var globalScaleRatio = this.globalScaleRatio;\n\n  if (globalScaleRatio != null && globalScaleRatio !== 1) {\n    this.getGlobalScale(scaleTmp);\n    var relX = scaleTmp[0] < 0 ? -1 : 1;\n    var relY = scaleTmp[1] < 0 ? -1 : 1;\n    var sx = ((scaleTmp[0] - relX) * globalScaleRatio + relX) / scaleTmp[0] || 0;\n    var sy = ((scaleTmp[1] - relY) * globalScaleRatio + relY) / scaleTmp[1] || 0;\n    m[0] *= sx;\n    m[1] *= sx;\n    m[2] *= sy;\n    m[3] *= sy;\n  }\n\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\nvar originTransform = matrix.create();\n\ntransformableProto.setLocalTransform = function (m) {\n  if (!m) {\n    // TODO return or set identity?\n    return;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var origin = this.origin;\n\n  if (origin && (origin[0] || origin[1])) {\n    originTransform[4] = origin[0];\n    originTransform[5] = origin[1];\n    matrix.mul(tmpTransform, m, originTransform);\n    tmpTransform[4] -= origin[0];\n    tmpTransform[5] -= origin[1];\n    m = tmpTransform;\n  }\n\n  this.setLocalTransform(m);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function (out) {\n  var m = this.transform;\n  out = out || [];\n\n  if (!m) {\n    out[0] = 1;\n    out[1] = 1;\n    return out;\n  }\n\n  out[0] = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  out[1] = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    out[0] = -out[0];\n  }\n\n  if (m[3] < 0) {\n    out[1] = -out[1];\n  }\n\n  return out;\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}