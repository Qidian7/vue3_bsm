{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\nvar __DEV__ = _config.__DEV__;\nvar echarts = require(\"../echarts\");\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar modelUtil = require(\"../util/model\");\nvar graphicUtil = require(\"../util/graphic\");\nvar layoutUtil = require(\"../util/layout\");\nvar _number = require(\"../util/number\");\nvar parsePercent = _number.parsePercent;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _nonShapeGraphicElements = {\n  // Reserved but not supported in graphic component.\n  path: null,\n  compoundPath: null,\n  // Supported in graphic component.\n  group: graphicUtil.Group,\n  image: graphicUtil.Image,\n  text: graphicUtil.Text\n}; // -------------\n// Preprocessor\n// -------------\n\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // info: custom info. enables user to mount some info on elements and use them\n    //      in event handlers. Update them only when user specified, otherwise, remain.\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n    this._flatten(newList, flattenedList);\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n      if (!newElOption) {\n        return;\n      }\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n      result.push(option);\n      var children = option.children;\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n    this._lastGraphicModel = graphicModel;\n    this._updateElements(graphicModel);\n    this._relocate(graphicModel, api);\n  },\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   */\n  _updateElements: function (graphicModel) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n    if (!elOptionsToUpdate) {\n      return;\n    }\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n      var elOptionStyle = elOption.style;\n      if (elOption.type === 'text' && elOptionStyle) {\n        // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n      var el = elMap.get(id);\n      if (el) {\n        el.__ecGraphicWidthOption = elOption.width;\n        el.__ecGraphicHeightOption = elOption.height;\n        setEventData(el, graphicModel, elOption);\n      }\n    });\n  },\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap;\n    var apiWidth = api.getWidth();\n    var apiHeight = api.getHeight(); // Top-down to calculate percentage width/height of group\n\n    for (var i = 0; i < elOptions.length; i++) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n      if (!el || !el.isGroup) {\n        continue;\n      }\n      var parentEl = el.parent;\n      var isParentRoot = parentEl === rootGroup; // Like 'position:absolut' in css, default 0.\n\n      el.__ecGraphicWidth = parsePercent(el.__ecGraphicWidthOption, isParentRoot ? apiWidth : parentEl.__ecGraphicWidth) || 0;\n      el.__ecGraphicHeight = parsePercent(el.__ecGraphicHeightOption, isParentRoot ? apiHeight : parentEl.__ecGraphicHeight) || 0;\n    } // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n      if (!el) {\n        continue;\n      }\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: apiWidth,\n        height: apiHeight\n      } : {\n        width: parentEl.__ecGraphicWidth,\n        height: parentEl.__ecGraphicHeight\n      }; // PENDING\n      // Currently, when `bounding: 'all'`, the union bounding rect of the group\n      // does not include the rect of [0, 0, group.width, group.height], which\n      // is probably weird for users. Should we make a break change for it?\n\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = _nonShapeGraphicElements.hasOwnProperty(graphicType) // Those graphic elements are not shapes. They should not be\n  // overwritten by users, so do them first.\n  ? _nonShapeGraphicElements[graphicType] : graphicUtil.getShapeClass(graphicType);\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n  newElOption.parentOption = null;\n}\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n  existItem.hv = newElOption.hv = [\n  // Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']),\n  // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}\nfunction setEventData(el, graphicModel, elOption) {\n  var eventData = el.eventData; // Simple optimize for large amount of elements that no need event.\n\n  if (!el.silent && !el.ignore && !eventData) {\n    eventData = el.eventData = {\n      componentType: 'graphic',\n      componentIndex: graphicModel.componentIndex,\n      name: el.name\n    };\n  } // `elOption.info` enables user to mount some info on\n  // elements and use them in event handlers.\n\n  if (eventData) {\n    eventData.info = el.info;\n  }\n}","map":{"version":3,"names":["_config","require","__DEV__","echarts","zrUtil","modelUtil","graphicUtil","layoutUtil","_number","parsePercent","_nonShapeGraphicElements","path","compoundPath","group","Group","image","Image","text","Text","registerPreprocessor","option","graphicOption","graphic","isArray","elements","GraphicModel","extendComponentModel","type","defaultOption","parentId","_elOptionsToUpdate","mergeOption","superApply","arguments","optionUpdated","newOption","isInit","thisOption","newList","existList","flattenedList","_flatten","mappingResult","mappingToExists","makeIdAndName","elOptionsToUpdate","each","resultItem","index","newElOption","push","setKeyInfoToNewElOption","mergeNewElOptionToExist","setLayoutInfoToExist","i","length","splice","$action","optionList","result","parentOption","children","useElOptionsToUpdate","els","extendComponentView","init","ecModel","api","_elMap","createHashMap","_lastGraphicModel","render","graphicModel","_clear","_updateElements","_relocate","elMap","rootGroup","elOption","id","existEl","get","targetElParent","elOptionStyle","style","hv","textVerticalAlign","textBaseline","hasOwnProperty","fill","textFill","stroke","textStroke","elOptionCleaned","getCleanedElOption","attr","createEl","removeEl","el","__ecGraphicWidthOption","width","__ecGraphicHeightOption","height","setEventData","elOptions","apiWidth","getWidth","apiHeight","getHeight","isGroup","parentEl","parent","isParentRoot","__ecGraphicWidth","__ecGraphicHeight","containerInfo","positionElement","boundingMode","bounding","dispose","graphicType","Clz","getShapeClass","add","set","__ecGraphicId","existElParent","traverse","removeKey","remove","extend","concat","LOCATION_PARAMS","name","isSetLoc","obj","props","isSet","prop","existElOption","exist","keyInfo","newElParentOption","newElOptCopy","merge","mergeLayoutParam","ignoreSize","copyLayoutParams","existItem","eventData","silent","ignore","componentType","componentIndex","info"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/component/graphic.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _nonShapeGraphicElements = {\n  // Reserved but not supported in graphic component.\n  path: null,\n  compoundPath: null,\n  // Supported in graphic component.\n  group: graphicUtil.Group,\n  image: graphicUtil.Image,\n  text: graphicUtil.Text\n}; // -------------\n// Preprocessor\n// -------------\n\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // info: custom info. enables user to mount some info on elements and use them\n    //      in event handlers. Update them only when user specified, otherwise, remain.\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   */\n  _updateElements: function (graphicModel) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n      var elOptionStyle = elOption.style;\n\n      if (elOption.type === 'text' && elOptionStyle) {\n        // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidthOption = elOption.width;\n        el.__ecGraphicHeightOption = elOption.height;\n        setEventData(el, graphicModel, elOption);\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap;\n    var apiWidth = api.getWidth();\n    var apiHeight = api.getHeight(); // Top-down to calculate percentage width/height of group\n\n    for (var i = 0; i < elOptions.length; i++) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el || !el.isGroup) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var isParentRoot = parentEl === rootGroup; // Like 'position:absolut' in css, default 0.\n\n      el.__ecGraphicWidth = parsePercent(el.__ecGraphicWidthOption, isParentRoot ? apiWidth : parentEl.__ecGraphicWidth) || 0;\n      el.__ecGraphicHeight = parsePercent(el.__ecGraphicHeightOption, isParentRoot ? apiHeight : parentEl.__ecGraphicHeight) || 0;\n    } // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: apiWidth,\n        height: apiHeight\n      } : {\n        width: parentEl.__ecGraphicWidth,\n        height: parentEl.__ecGraphicHeight\n      }; // PENDING\n      // Currently, when `bounding: 'all'`, the union bounding rect of the group\n      // does not include the rect of [0, 0, group.width, group.height], which\n      // is probably weird for users. Should we make a break change for it?\n\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = _nonShapeGraphicElements.hasOwnProperty(graphicType) // Those graphic elements are not shapes. They should not be\n  // overwritten by users, so do them first.\n  ? _nonShapeGraphicElements[graphicType] : graphicUtil.getShapeClass(graphicType);\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}\n\nfunction setEventData(el, graphicModel, elOption) {\n  var eventData = el.eventData; // Simple optimize for large amount of elements that no need event.\n\n  if (!el.silent && !el.ignore && !eventData) {\n    eventData = el.eventData = {\n      componentType: 'graphic',\n      componentIndex: graphicModel.componentIndex,\n      name: el.name\n    };\n  } // `elOption.info` enables user to mount some info on\n  // elements and use them in event handlers.\n\n\n  if (eventData) {\n    eventData.info = el.info;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}