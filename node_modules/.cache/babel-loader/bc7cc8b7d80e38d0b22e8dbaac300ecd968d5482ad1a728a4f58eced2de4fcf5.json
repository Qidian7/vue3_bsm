{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar env = require(\"zrender/lib/core/env\");\nvar TooltipContent = require(\"./TooltipContent\");\nvar TooltipRichContent = require(\"./TooltipRichContent\");\nvar formatUtil = require(\"../../util/format\");\nvar numberUtil = require(\"../../util/number\");\nvar graphic = require(\"../../util/graphic\");\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\nvar layoutUtil = require(\"../../util/layout\");\nvar Model = require(\"../../model/Model\");\nvar globalListener = require(\"../axisPointer/globalListener\");\nvar axisHelper = require(\"../../coord/axisHelper\");\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\nvar _model = require(\"../../util/model\");\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = tooltipModel.get('renderMode');\n    this._renderMode = getTooltipRenderMode(renderMode);\n    var tooltipContent;\n    if (this._renderMode === 'html') {\n      tooltipContent = new TooltipContent(api.getDom(), api, {\n        appendToBody: tooltipModel.get('appendToBody', true)\n      });\n      this._newLine = '<br/>';\n    } else {\n      tooltipContent = new TooltipRichContent(api);\n      this._newLine = '\\n';\n    }\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update(tooltipModel);\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n    this._initGlobalListener();\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n    this._lastX = this._lastY = null;\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n    if (!seriesModel) {\n      return;\n    }\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n      this._lastDataByCoordSys = null;\n      this._showSeriesItemTooltip(e, el, dispatchAction);\n    } // Tooltip provided directly. Like legend.\n    else if (el && el.tooltip) {\n      this._lastDataByCoordSys = null;\n      this._showComponentItemTooltip(e, el, dispatchAction);\n    } else {\n      this._lastDataByCoordSys = null;\n      this._hide(dispatchAction);\n    }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easier to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    var renderMode = this._renderMode;\n    var newLine = this._newLine;\n    var markers = {};\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            var seriesTooltip = series.formatTooltip(dataIndex, true, null, renderMode);\n            var html;\n            if (zrUtil.isObject(seriesTooltip)) {\n              html = seriesTooltip.html;\n              var newMarkers = seriesTooltip.markers;\n              zrUtil.merge(markers, newMarkers);\n            } else {\n              html = seriesTooltip;\n            }\n            seriesDefaultHTML.push(html);\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) should be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        if (renderMode !== 'html') {\n          singleDefaultHTML.push(seriesDefaultHTML.join(newLine));\n        } else {\n          singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + newLine : '') + seriesDefaultHTML.join(newLine));\n        }\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join(this._newLine + this._newLine);\n    var positionExpr = e.position;\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr, undefined, markers);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n  },\n\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData(dataType);\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var seriesTooltip = dataModel.formatTooltip(dataIndex, false, dataType, this._renderMode);\n    var defaultHtml;\n    var markers;\n    if (zrUtil.isObject(seriesTooltip)) {\n      defaultHtml = seriesTooltip.html;\n      markers = seriesTooltip.markers;\n    } else {\n      defaultHtml = seriesTooltip;\n      markers = null;\n    }\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markers);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on coordinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markers) {\n    // Reset ticket\n    this._ticket = '';\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html, markers, tooltipModel);\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n    tooltipContent.setContent(html, markers, tooltipModel);\n    tooltipContent.show(tooltipModel);\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n    var viewHeight = this._api.getHeight();\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n      var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n      x = pos[0];\n      y = pos[1];\n    } else {\n      var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n      x = pos[0];\n      y = pos[1];\n    }\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n    this._tooltipContent.dispose();\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n  return resultModel;\n}\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n  return [x, y];\n}\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n  return [x, y];\n}\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\nmodule.exports = _default;","map":{"version":3,"names":["echarts","require","zrUtil","env","TooltipContent","TooltipRichContent","formatUtil","numberUtil","graphic","findPointFromSeries","layoutUtil","Model","globalListener","axisHelper","axisPointerViewHelper","_model","getTooltipRenderMode","bind","each","parsePercent","proxyRect","Rect","shape","x","y","width","height","_default","extendComponentView","type","init","ecModel","api","node","tooltipModel","getComponent","renderMode","get","_renderMode","tooltipContent","getDom","appendToBody","_newLine","_tooltipContent","render","group","removeAll","_tooltipModel","_ecModel","_api","_lastDataByCoordSys","_alwaysShowContent","update","setEnterable","_initGlobalListener","_keepShow","triggerOn","register","currTrigger","e","dispatchAction","indexOf","_tryShow","_hide","_lastX","_lastY","self","clearTimeout","_refreshUpdateTimeout","setTimeout","isDisposed","manuallyShowTip","payload","from","uid","makeDispatchAction","_ticket","dataByCoordSys","tooltip","el","position","offsetX","offsetY","target","tooltipOption","seriesIndex","_manuallyAxisShowTip","pointInfo","cx","point","cy","getZr","findHover","manuallyHideTip","hideLater","dataIndex","coordSysAxesInfo","seriesModel","getSeriesByIndex","data","getData","buildTooltipModel","getItemModel","coordinateSystem","model","length","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","cb","delay","_showTimout","globalTooltipModel","singleDefaultHTML","singleParamsList","singleTooltipModel","newLine","markers","itemCoordSys","dataByAxis","item","axisModel","axisDim","axisIndex","axisValue","value","seriesDefaultHTML","valueLabel","getValueLabel","axis","seriesDataIndices","valueLabelOpt","idxItem","series","dataIndexInside","dataParams","getDataParams","axisType","axisId","getAxisRawValue","axisValueLabel","push","seriesTooltip","formatTooltip","html","isObject","newMarkers","merge","firstLine","join","encodeHTML","reverse","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","Math","random","undefined","dataModel","dataType","tooltipTrigger","params","defaultHtml","asyncTicket","name","getRawIndex","tooltipOpt","content","formatter","subTooltipModel","formatTpl","callback","cbTicket","setContent","show","viewWidth","getWidth","viewHeight","getHeight","contentSize","getSize","align","vAlign","rect","getBoundingRect","clone","applyTransform","transform","viewSize","slice","isArray","layoutRect","getLayoutRect","pos","calcTooltipPosition","refixTooltipPosition","isCenterAlign","confineTooltipPosition","moveTo","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","j","newIdxItem","dispose","unregister","modelCascade","resultModel","pop","isInstance","gapH","gapV","size","getOuterSize","min","max","domWidth","domHeight","gap","rectWidth","rectHeight","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/component/tooltip/TooltipView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar TooltipRichContent = require(\"./TooltipRichContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar _model = require(\"../../util/model\");\n\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = tooltipModel.get('renderMode');\n    this._renderMode = getTooltipRenderMode(renderMode);\n    var tooltipContent;\n\n    if (this._renderMode === 'html') {\n      tooltipContent = new TooltipContent(api.getDom(), api, {\n        appendToBody: tooltipModel.get('appendToBody', true)\n      });\n      this._newLine = '<br/>';\n    } else {\n      tooltipContent = new TooltipRichContent(api);\n      this._newLine = '\\n';\n    }\n\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update(tooltipModel);\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easier to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    var renderMode = this._renderMode;\n    var newLine = this._newLine;\n    var markers = {};\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            var seriesTooltip = series.formatTooltip(dataIndex, true, null, renderMode);\n            var html;\n\n            if (zrUtil.isObject(seriesTooltip)) {\n              html = seriesTooltip.html;\n              var newMarkers = seriesTooltip.markers;\n              zrUtil.merge(markers, newMarkers);\n            } else {\n              html = seriesTooltip;\n            }\n\n            seriesDefaultHTML.push(html);\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) should be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n\n        if (renderMode !== 'html') {\n          singleDefaultHTML.push(seriesDefaultHTML.join(newLine));\n        } else {\n          singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + newLine : '') + seriesDefaultHTML.join(newLine));\n        }\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join(this._newLine + this._newLine);\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr, undefined, markers);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData(dataType);\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var seriesTooltip = dataModel.formatTooltip(dataIndex, false, dataType, this._renderMode);\n    var defaultHtml;\n    var markers;\n\n    if (zrUtil.isObject(seriesTooltip)) {\n      defaultHtml = seriesTooltip.html;\n      markers = seriesTooltip.markers;\n    } else {\n      defaultHtml = seriesTooltip;\n      markers = null;\n    }\n\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markers);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on coordinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markers) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html, markers, tooltipModel);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html, markers, tooltipModel);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.dispose();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAe,CAAC;AAEtC,IAAIC,MAAM,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAE7C,IAAIE,GAAG,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAEzC,IAAIG,cAAc,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAEhD,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,sBAAsB,CAAC;AAExD,IAAIK,UAAU,GAAGL,OAAO,CAAC,mBAAmB,CAAC;AAE7C,IAAIM,UAAU,GAAGN,OAAO,CAAC,mBAAmB,CAAC;AAE7C,IAAIO,OAAO,GAAGP,OAAO,CAAC,oBAAoB,CAAC;AAE3C,IAAIQ,mBAAmB,GAAGR,OAAO,CAAC,oCAAoC,CAAC;AAEvE,IAAIS,UAAU,GAAGT,OAAO,CAAC,mBAAmB,CAAC;AAE7C,IAAIU,KAAK,GAAGV,OAAO,CAAC,mBAAmB,CAAC;AAExC,IAAIW,cAAc,GAAGX,OAAO,CAAC,+BAA+B,CAAC;AAE7D,IAAIY,UAAU,GAAGZ,OAAO,CAAC,wBAAwB,CAAC;AAElD,IAAIa,qBAAqB,GAAGb,OAAO,CAAC,2BAA2B,CAAC;AAEhE,IAAIc,MAAM,GAAGd,OAAO,CAAC,kBAAkB,CAAC;AAExC,IAAIe,oBAAoB,GAAGD,MAAM,CAACC,oBAAoB;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,IAAI,GAAGf,MAAM,CAACe,IAAI;AACtB,IAAIC,IAAI,GAAGhB,MAAM,CAACgB,IAAI;AACtB,IAAIC,YAAY,GAAGZ,UAAU,CAACY,YAAY;AAC1C,IAAIC,SAAS,GAAG,IAAIZ,OAAO,CAACa,IAAI,CAAC;EAC/BC,KAAK,EAAE;IACLC,CAAC,EAAE,CAAC,CAAC;IACLC,CAAC,EAAE,CAAC,CAAC;IACLC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEF,IAAIC,QAAQ,GAAG3B,OAAO,CAAC4B,mBAAmB,CAAC;EACzCC,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,SAAAA,CAAUC,OAAO,EAAEC,GAAG,EAAE;IAC5B,IAAI7B,GAAG,CAAC8B,IAAI,EAAE;MACZ;IACF;IAEA,IAAIC,YAAY,GAAGH,OAAO,CAACI,YAAY,CAAC,SAAS,CAAC;IAClD,IAAIC,UAAU,GAAGF,YAAY,CAACG,GAAG,CAAC,YAAY,CAAC;IAC/C,IAAI,CAACC,WAAW,GAAGtB,oBAAoB,CAACoB,UAAU,CAAC;IACnD,IAAIG,cAAc;IAElB,IAAI,IAAI,CAACD,WAAW,KAAK,MAAM,EAAE;MAC/BC,cAAc,GAAG,IAAInC,cAAc,CAAC4B,GAAG,CAACQ,MAAM,EAAE,EAAER,GAAG,EAAE;QACrDS,YAAY,EAAEP,YAAY,CAACG,GAAG,CAAC,cAAc,EAAE,IAAI;MACrD,CAAC,CAAC;MACF,IAAI,CAACK,QAAQ,GAAG,OAAO;IACzB,CAAC,MAAM;MACLH,cAAc,GAAG,IAAIlC,kBAAkB,CAAC2B,GAAG,CAAC;MAC5C,IAAI,CAACU,QAAQ,GAAG,IAAI;IACtB;IAEA,IAAI,CAACC,eAAe,GAAGJ,cAAc;EACvC,CAAC;EACDK,MAAM,EAAE,SAAAA,CAAUV,YAAY,EAAEH,OAAO,EAAEC,GAAG,EAAE;IAC5C,IAAI7B,GAAG,CAAC8B,IAAI,EAAE;MACZ;IACF,CAAC,CAAC;;IAGF,IAAI,CAACY,KAAK,CAACC,SAAS,EAAE;IACtB;AACJ;AACA;AACA;;IAEI,IAAI,CAACC,aAAa,GAAGb,YAAY;IACjC;AACJ;AACA;AACA;;IAEI,IAAI,CAACc,QAAQ,GAAGjB,OAAO;IACvB;AACJ;AACA;AACA;;IAEI,IAAI,CAACkB,IAAI,GAAGjB,GAAG;IACf;AACJ;AACA;AACA;AACA;;IAEI,IAAI,CAACkB,mBAAmB,GAAG,IAAI;IAC/B;AACJ;AACA;AACA;;IAEI,IAAI,CAACC,kBAAkB,GAAGjB,YAAY,CAACG,GAAG,CAAC,mBAAmB,CAAC;IAC/D,IAAIE,cAAc,GAAG,IAAI,CAACI,eAAe;IACzCJ,cAAc,CAACa,MAAM,CAAClB,YAAY,CAAC;IACnCK,cAAc,CAACc,YAAY,CAACnB,YAAY,CAACG,GAAG,CAAC,WAAW,CAAC,CAAC;IAE1D,IAAI,CAACiB,mBAAmB,EAAE;IAE1B,IAAI,CAACC,SAAS,EAAE;EAClB,CAAC;EACDD,mBAAmB,EAAE,SAAAA,CAAA,EAAY;IAC/B,IAAIpB,YAAY,GAAG,IAAI,CAACa,aAAa;IACrC,IAAIS,SAAS,GAAGtB,YAAY,CAACG,GAAG,CAAC,WAAW,CAAC;IAC7CzB,cAAc,CAAC6C,QAAQ,CAAC,aAAa,EAAE,IAAI,CAACR,IAAI,EAAEhC,IAAI,CAAC,UAAUyC,WAAW,EAAEC,CAAC,EAAEC,cAAc,EAAE;MAC/F;MACA,IAAIJ,SAAS,KAAK,MAAM,EAAE;QACxB,IAAIA,SAAS,CAACK,OAAO,CAACH,WAAW,CAAC,IAAI,CAAC,EAAE;UACvC,IAAI,CAACI,QAAQ,CAACH,CAAC,EAAEC,cAAc,CAAC;QAClC,CAAC,MAAM,IAAIF,WAAW,KAAK,OAAO,EAAE;UAClC,IAAI,CAACK,KAAK,CAACH,cAAc,CAAC;QAC5B;MACF;IACF,CAAC,EAAE,IAAI,CAAC,CAAC;EACX,CAAC;EACDL,SAAS,EAAE,SAAAA,CAAA,EAAY;IACrB,IAAIrB,YAAY,GAAG,IAAI,CAACa,aAAa;IACrC,IAAIhB,OAAO,GAAG,IAAI,CAACiB,QAAQ;IAC3B,IAAIhB,GAAG,GAAG,IAAI,CAACiB,IAAI,CAAC,CAAC;;IAErB,IAAI,IAAI,CAACe,MAAM,IAAI,IAAI,IAAI,IAAI,CAACC,MAAM,IAAI,IAAI,CAAC;IAC/C;IACA;IAAA,GACG/B,YAAY,CAACG,GAAG,CAAC,WAAW,CAAC,KAAK,MAAM,EAAE;MAC3C,IAAI6B,IAAI,GAAG,IAAI;MACfC,YAAY,CAAC,IAAI,CAACC,qBAAqB,CAAC;MACxC,IAAI,CAACA,qBAAqB,GAAGC,UAAU,CAAC,YAAY;QAClD;QACA;QACA;QACA,CAACrC,GAAG,CAACsC,UAAU,EAAE,IAAIJ,IAAI,CAACK,eAAe,CAACrC,YAAY,EAAEH,OAAO,EAAEC,GAAG,EAAE;UACpET,CAAC,EAAE2C,IAAI,CAACF,MAAM;UACdxC,CAAC,EAAE0C,IAAI,CAACD;QACV,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEM,eAAe,EAAE,SAAAA,CAAUrC,YAAY,EAAEH,OAAO,EAAEC,GAAG,EAAEwC,OAAO,EAAE;IAC9D,IAAIA,OAAO,CAACC,IAAI,KAAK,IAAI,CAACC,GAAG,IAAIvE,GAAG,CAAC8B,IAAI,EAAE;MACzC;IACF;IAEA,IAAI2B,cAAc,GAAGe,kBAAkB,CAACH,OAAO,EAAExC,GAAG,CAAC,CAAC,CAAC;;IAEvD,IAAI,CAAC4C,OAAO,GAAG,EAAE,CAAC,CAAC;;IAEnB,IAAIC,cAAc,GAAGL,OAAO,CAACK,cAAc;IAE3C,IAAIL,OAAO,CAACM,OAAO,IAAIN,OAAO,CAACjD,CAAC,IAAI,IAAI,IAAIiD,OAAO,CAAChD,CAAC,IAAI,IAAI,EAAE;MAC7D,IAAIuD,EAAE,GAAG3D,SAAS;MAClB2D,EAAE,CAACC,QAAQ,GAAG,CAACR,OAAO,CAACjD,CAAC,EAAEiD,OAAO,CAAChD,CAAC,CAAC;MACpCuD,EAAE,CAAC3B,MAAM,EAAE;MACX2B,EAAE,CAACD,OAAO,GAAGN,OAAO,CAACM,OAAO,CAAC,CAAC;;MAE9B,IAAI,CAAChB,QAAQ,CAAC;QACZmB,OAAO,EAAET,OAAO,CAACjD,CAAC;QAClB2D,OAAO,EAAEV,OAAO,CAAChD,CAAC;QAClB2D,MAAM,EAAEJ;MACV,CAAC,EAAEnB,cAAc,CAAC;IACpB,CAAC,MAAM,IAAIiB,cAAc,EAAE;MACzB,IAAI,CAACf,QAAQ,CAAC;QACZmB,OAAO,EAAET,OAAO,CAACjD,CAAC;QAClB2D,OAAO,EAAEV,OAAO,CAAChD,CAAC;QAClBwD,QAAQ,EAAER,OAAO,CAACQ,QAAQ;QAC1BH,cAAc,EAAEL,OAAO,CAACK,cAAc;QACtCO,aAAa,EAAEZ,OAAO,CAACY;MACzB,CAAC,EAAExB,cAAc,CAAC;IACpB,CAAC,MAAM,IAAIY,OAAO,CAACa,WAAW,IAAI,IAAI,EAAE;MACtC,IAAI,IAAI,CAACC,oBAAoB,CAACpD,YAAY,EAAEH,OAAO,EAAEC,GAAG,EAAEwC,OAAO,CAAC,EAAE;QAClE;MACF;MAEA,IAAIe,SAAS,GAAG9E,mBAAmB,CAAC+D,OAAO,EAAEzC,OAAO,CAAC;MACrD,IAAIyD,EAAE,GAAGD,SAAS,CAACE,KAAK,CAAC,CAAC,CAAC;MAC3B,IAAIC,EAAE,GAAGH,SAAS,CAACE,KAAK,CAAC,CAAC,CAAC;MAE3B,IAAID,EAAE,IAAI,IAAI,IAAIE,EAAE,IAAI,IAAI,EAAE;QAC5B,IAAI,CAAC5B,QAAQ,CAAC;UACZmB,OAAO,EAAEO,EAAE;UACXN,OAAO,EAAEQ,EAAE;UACXV,QAAQ,EAAER,OAAO,CAACQ,QAAQ;UAC1BG,MAAM,EAAEI,SAAS,CAACR;QACpB,CAAC,EAAEnB,cAAc,CAAC;MACpB;IACF,CAAC,MAAM,IAAIY,OAAO,CAACjD,CAAC,IAAI,IAAI,IAAIiD,OAAO,CAAChD,CAAC,IAAI,IAAI,EAAE;MACjD;MACA;MACAQ,GAAG,CAAC4B,cAAc,CAAC;QACjB/B,IAAI,EAAE,mBAAmB;QACzBN,CAAC,EAAEiD,OAAO,CAACjD,CAAC;QACZC,CAAC,EAAEgD,OAAO,CAAChD;MACb,CAAC,CAAC;MAEF,IAAI,CAACsC,QAAQ,CAAC;QACZmB,OAAO,EAAET,OAAO,CAACjD,CAAC;QAClB2D,OAAO,EAAEV,OAAO,CAAChD,CAAC;QAClBwD,QAAQ,EAAER,OAAO,CAACQ,QAAQ;QAC1BG,MAAM,EAAEnD,GAAG,CAAC2D,KAAK,EAAE,CAACC,SAAS,CAACpB,OAAO,CAACjD,CAAC,EAAEiD,OAAO,CAAChD,CAAC,CAAC,CAAC2D;MACtD,CAAC,EAAEvB,cAAc,CAAC;IACpB;EACF,CAAC;EACDiC,eAAe,EAAE,SAAAA,CAAU3D,YAAY,EAAEH,OAAO,EAAEC,GAAG,EAAEwC,OAAO,EAAE;IAC9D,IAAIjC,cAAc,GAAG,IAAI,CAACI,eAAe;IAEzC,IAAI,CAAC,IAAI,CAACQ,kBAAkB,IAAI,IAAI,CAACJ,aAAa,EAAE;MAClDR,cAAc,CAACuD,SAAS,CAAC,IAAI,CAAC/C,aAAa,CAACV,GAAG,CAAC,WAAW,CAAC,CAAC;IAC/D;IAEA,IAAI,CAAC2B,MAAM,GAAG,IAAI,CAACC,MAAM,GAAG,IAAI;IAEhC,IAAIO,OAAO,CAACC,IAAI,KAAK,IAAI,CAACC,GAAG,EAAE;MAC7B,IAAI,CAACX,KAAK,CAACY,kBAAkB,CAACH,OAAO,EAAExC,GAAG,CAAC,CAAC;IAC9C;EACF,CAAC;EACD;EACA;EACA;EACAsD,oBAAoB,EAAE,SAAAA,CAAUpD,YAAY,EAAEH,OAAO,EAAEC,GAAG,EAAEwC,OAAO,EAAE;IACnE,IAAIa,WAAW,GAAGb,OAAO,CAACa,WAAW;IACrC,IAAIU,SAAS,GAAGvB,OAAO,CAACuB,SAAS;IACjC,IAAIC,gBAAgB,GAAGjE,OAAO,CAACI,YAAY,CAAC,aAAa,CAAC,CAAC6D,gBAAgB;IAE3E,IAAIX,WAAW,IAAI,IAAI,IAAIU,SAAS,IAAI,IAAI,IAAIC,gBAAgB,IAAI,IAAI,EAAE;MACxE;IACF;IAEA,IAAIC,WAAW,GAAGlE,OAAO,CAACmE,gBAAgB,CAACb,WAAW,CAAC;IAEvD,IAAI,CAACY,WAAW,EAAE;MAChB;IACF;IAEA,IAAIE,IAAI,GAAGF,WAAW,CAACG,OAAO,EAAE;IAChC,IAAIlE,YAAY,GAAGmE,iBAAiB,CAAC,CAACF,IAAI,CAACG,YAAY,CAACP,SAAS,CAAC,EAAEE,WAAW,EAAE,CAACA,WAAW,CAACM,gBAAgB,IAAI,CAAC,CAAC,EAAEC,KAAK,EAAEtE,YAAY,CAAC,CAAC;IAE3I,IAAIA,YAAY,CAACG,GAAG,CAAC,SAAS,CAAC,KAAK,MAAM,EAAE;MAC1C;IACF;IAEAL,GAAG,CAAC4B,cAAc,CAAC;MACjB/B,IAAI,EAAE,mBAAmB;MACzBwD,WAAW,EAAEA,WAAW;MACxBU,SAAS,EAAEA,SAAS;MACpBf,QAAQ,EAAER,OAAO,CAACQ;IACpB,CAAC,CAAC;IACF,OAAO,IAAI;EACb,CAAC;EACDlB,QAAQ,EAAE,SAAAA,CAAUH,CAAC,EAAEC,cAAc,EAAE;IACrC,IAAImB,EAAE,GAAGpB,CAAC,CAACwB,MAAM;IACjB,IAAIjD,YAAY,GAAG,IAAI,CAACa,aAAa;IAErC,IAAI,CAACb,YAAY,EAAE;MACjB;IACF,CAAC,CAAC;;IAGF,IAAI,CAAC8B,MAAM,GAAGL,CAAC,CAACsB,OAAO;IACvB,IAAI,CAAChB,MAAM,GAAGN,CAAC,CAACuB,OAAO;IACvB,IAAIL,cAAc,GAAGlB,CAAC,CAACkB,cAAc;IAErC,IAAIA,cAAc,IAAIA,cAAc,CAAC4B,MAAM,EAAE;MAC3C,IAAI,CAACC,gBAAgB,CAAC7B,cAAc,EAAElB,CAAC,CAAC;IAC1C,CAAC,CAAC;IAAA,KACG,IAAIoB,EAAE,IAAIA,EAAE,CAACgB,SAAS,IAAI,IAAI,EAAE;MACjC,IAAI,CAAC7C,mBAAmB,GAAG,IAAI;MAE/B,IAAI,CAACyD,sBAAsB,CAAChD,CAAC,EAAEoB,EAAE,EAAEnB,cAAc,CAAC;IACpD,CAAC,CAAC;IAAA,KACG,IAAImB,EAAE,IAAIA,EAAE,CAACD,OAAO,EAAE;MACvB,IAAI,CAAC5B,mBAAmB,GAAG,IAAI;MAE/B,IAAI,CAAC0D,yBAAyB,CAACjD,CAAC,EAAEoB,EAAE,EAAEnB,cAAc,CAAC;IACvD,CAAC,MAAM;MACL,IAAI,CAACV,mBAAmB,GAAG,IAAI;MAE/B,IAAI,CAACa,KAAK,CAACH,cAAc,CAAC;IAC5B;EACN,CAAC;EACDiD,WAAW,EAAE,SAAAA,CAAU3E,YAAY,EAAE4E,EAAE,EAAE;IACvC;IACA;IACA;IACA;IACA,IAAIC,KAAK,GAAG7E,YAAY,CAACG,GAAG,CAAC,WAAW,CAAC;IACzCyE,EAAE,GAAG5G,MAAM,CAACe,IAAI,CAAC6F,EAAE,EAAE,IAAI,CAAC;IAC1B3C,YAAY,CAAC,IAAI,CAAC6C,WAAW,CAAC;IAC9BD,KAAK,GAAG,CAAC,GAAG,IAAI,CAACC,WAAW,GAAG3C,UAAU,CAACyC,EAAE,EAAEC,KAAK,CAAC,GAAGD,EAAE,EAAE;EAC7D,CAAC;EACDJ,gBAAgB,EAAE,SAAAA,CAAU7B,cAAc,EAAElB,CAAC,EAAE;IAC7C,IAAI5B,OAAO,GAAG,IAAI,CAACiB,QAAQ;IAC3B,IAAIiE,kBAAkB,GAAG,IAAI,CAAClE,aAAa;IAC3C,IAAI0C,KAAK,GAAG,CAAC9B,CAAC,CAACsB,OAAO,EAAEtB,CAAC,CAACuB,OAAO,CAAC;IAClC,IAAIgC,iBAAiB,GAAG,EAAE;IAC1B,IAAIC,gBAAgB,GAAG,EAAE;IACzB,IAAIC,kBAAkB,GAAGf,iBAAiB,CAAC,CAAC1C,CAAC,CAACyB,aAAa,EAAE6B,kBAAkB,CAAC,CAAC;IACjF,IAAI7E,UAAU,GAAG,IAAI,CAACE,WAAW;IACjC,IAAI+E,OAAO,GAAG,IAAI,CAAC3E,QAAQ;IAC3B,IAAI4E,OAAO,GAAG,CAAC,CAAC;IAChBpG,IAAI,CAAC2D,cAAc,EAAE,UAAU0C,YAAY,EAAE;MAC3C;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACArG,IAAI,CAACqG,YAAY,CAACC,UAAU,EAAE,UAAUC,IAAI,EAAE;QAC5C,IAAIC,SAAS,GAAG3F,OAAO,CAACI,YAAY,CAACsF,IAAI,CAACE,OAAO,GAAG,MAAM,EAAEF,IAAI,CAACG,SAAS,CAAC;QAC3E,IAAIC,SAAS,GAAGJ,IAAI,CAACK,KAAK;QAC1B,IAAIC,iBAAiB,GAAG,EAAE;QAE1B,IAAI,CAACL,SAAS,IAAIG,SAAS,IAAI,IAAI,EAAE;UACnC;QACF;QAEA,IAAIG,UAAU,GAAGlH,qBAAqB,CAACmH,aAAa,CAACJ,SAAS,EAAEH,SAAS,CAACQ,IAAI,EAAEnG,OAAO,EAAE0F,IAAI,CAACU,iBAAiB,EAAEV,IAAI,CAACW,aAAa,CAAC;QACpIlI,MAAM,CAACgB,IAAI,CAACuG,IAAI,CAACU,iBAAiB,EAAE,UAAUE,OAAO,EAAE;UACrD,IAAIC,MAAM,GAAGvG,OAAO,CAACmE,gBAAgB,CAACmC,OAAO,CAAChD,WAAW,CAAC;UAC1D,IAAIU,SAAS,GAAGsC,OAAO,CAACE,eAAe;UACvC,IAAIC,UAAU,GAAGF,MAAM,IAAIA,MAAM,CAACG,aAAa,CAAC1C,SAAS,CAAC;UAC1DyC,UAAU,CAACb,OAAO,GAAGF,IAAI,CAACE,OAAO;UACjCa,UAAU,CAACZ,SAAS,GAAGH,IAAI,CAACG,SAAS;UACrCY,UAAU,CAACE,QAAQ,GAAGjB,IAAI,CAACiB,QAAQ;UACnCF,UAAU,CAACG,MAAM,GAAGlB,IAAI,CAACkB,MAAM;UAC/BH,UAAU,CAACX,SAAS,GAAGhH,UAAU,CAAC+H,eAAe,CAAClB,SAAS,CAACQ,IAAI,EAAEL,SAAS,CAAC;UAC5EW,UAAU,CAACK,cAAc,GAAGb,UAAU;UAEtC,IAAIQ,UAAU,EAAE;YACdrB,gBAAgB,CAAC2B,IAAI,CAACN,UAAU,CAAC;YACjC,IAAIO,aAAa,GAAGT,MAAM,CAACU,aAAa,CAACjD,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE3D,UAAU,CAAC;YAC3E,IAAI6G,IAAI;YAER,IAAI/I,MAAM,CAACgJ,QAAQ,CAACH,aAAa,CAAC,EAAE;cAClCE,IAAI,GAAGF,aAAa,CAACE,IAAI;cACzB,IAAIE,UAAU,GAAGJ,aAAa,CAACzB,OAAO;cACtCpH,MAAM,CAACkJ,KAAK,CAAC9B,OAAO,EAAE6B,UAAU,CAAC;YACnC,CAAC,MAAM;cACLF,IAAI,GAAGF,aAAa;YACtB;YAEAhB,iBAAiB,CAACe,IAAI,CAACG,IAAI,CAAC;UAC9B;QACF,CAAC,CAAC,CAAC,CAAC;QACJ;QACA;QACA;;QAEA,IAAII,SAAS,GAAGrB,UAAU;QAE1B,IAAI5F,UAAU,KAAK,MAAM,EAAE;UACzB8E,iBAAiB,CAAC4B,IAAI,CAACf,iBAAiB,CAACuB,IAAI,CAACjC,OAAO,CAAC,CAAC;QACzD,CAAC,MAAM;UACLH,iBAAiB,CAAC4B,IAAI,CAAC,CAACO,SAAS,GAAG/I,UAAU,CAACiJ,UAAU,CAACF,SAAS,CAAC,GAAGhC,OAAO,GAAG,EAAE,IAAIU,iBAAiB,CAACuB,IAAI,CAACjC,OAAO,CAAC,CAAC;QACzH;MACF,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEVH,iBAAiB,CAACsC,OAAO,EAAE;IAC3BtC,iBAAiB,GAAGA,iBAAiB,CAACoC,IAAI,CAAC,IAAI,CAAC5G,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC;IACzE,IAAI+G,YAAY,GAAG9F,CAAC,CAACqB,QAAQ;IAE7B,IAAI,CAAC6B,WAAW,CAACO,kBAAkB,EAAE,YAAY;MAC/C,IAAI,IAAI,CAACsC,8BAA8B,CAAC7E,cAAc,CAAC,EAAE;QACvD,IAAI,CAAC8E,eAAe,CAACvC,kBAAkB,EAAEqC,YAAY,EAAEhE,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC9C,eAAe,EAAEwE,gBAAgB,CAAC;MACpH,CAAC,MAAM;QACL,IAAI,CAACyC,mBAAmB,CAACxC,kBAAkB,EAAEF,iBAAiB,EAAEC,gBAAgB,EAAE0C,IAAI,CAACC,MAAM,EAAE,EAAErE,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,EAAEgE,YAAY,EAAEM,SAAS,EAAEzC,OAAO,CAAC;MACxJ;IACF,CAAC,CAAC,CAAC,CAAC;IACJ;EAEF,CAAC;;EACDX,sBAAsB,EAAE,SAAAA,CAAUhD,CAAC,EAAEoB,EAAE,EAAEnB,cAAc,EAAE;IACvD,IAAI7B,OAAO,GAAG,IAAI,CAACiB,QAAQ,CAAC,CAAC;IAC7B;IACA;;IAEA,IAAIqC,WAAW,GAAGN,EAAE,CAACM,WAAW;IAChC,IAAIY,WAAW,GAAGlE,OAAO,CAACmE,gBAAgB,CAACb,WAAW,CAAC,CAAC,CAAC;;IAEzD,IAAI2E,SAAS,GAAGjF,EAAE,CAACiF,SAAS,IAAI/D,WAAW;IAC3C,IAAIF,SAAS,GAAGhB,EAAE,CAACgB,SAAS;IAC5B,IAAIkE,QAAQ,GAAGlF,EAAE,CAACkF,QAAQ;IAC1B,IAAI9D,IAAI,GAAG6D,SAAS,CAAC5D,OAAO,CAAC6D,QAAQ,CAAC;IACtC,IAAI/H,YAAY,GAAGmE,iBAAiB,CAAC,CAACF,IAAI,CAACG,YAAY,CAACP,SAAS,CAAC,EAAEiE,SAAS,EAAE/D,WAAW,IAAI,CAACA,WAAW,CAACM,gBAAgB,IAAI,CAAC,CAAC,EAAEC,KAAK,EAAE,IAAI,CAACzD,aAAa,CAAC,CAAC;IAC9J,IAAImH,cAAc,GAAGhI,YAAY,CAACG,GAAG,CAAC,SAAS,CAAC;IAEhD,IAAI6H,cAAc,IAAI,IAAI,IAAIA,cAAc,KAAK,MAAM,EAAE;MACvD;IACF;IAEA,IAAIC,MAAM,GAAGH,SAAS,CAACvB,aAAa,CAAC1C,SAAS,EAAEkE,QAAQ,CAAC;IACzD,IAAIlB,aAAa,GAAGiB,SAAS,CAAChB,aAAa,CAACjD,SAAS,EAAE,KAAK,EAAEkE,QAAQ,EAAE,IAAI,CAAC3H,WAAW,CAAC;IACzF,IAAI8H,WAAW;IACf,IAAI9C,OAAO;IAEX,IAAIpH,MAAM,CAACgJ,QAAQ,CAACH,aAAa,CAAC,EAAE;MAClCqB,WAAW,GAAGrB,aAAa,CAACE,IAAI;MAChC3B,OAAO,GAAGyB,aAAa,CAACzB,OAAO;IACjC,CAAC,MAAM;MACL8C,WAAW,GAAGrB,aAAa;MAC3BzB,OAAO,GAAG,IAAI;IAChB;IAEA,IAAI+C,WAAW,GAAG,OAAO,GAAGL,SAAS,CAACM,IAAI,GAAG,GAAG,GAAGvE,SAAS;IAE5D,IAAI,CAACc,WAAW,CAAC3E,YAAY,EAAE,YAAY;MACzC,IAAI,CAAC0H,mBAAmB,CAAC1H,YAAY,EAAEkI,WAAW,EAAED,MAAM,EAAEE,WAAW,EAAE1G,CAAC,CAACsB,OAAO,EAAEtB,CAAC,CAACuB,OAAO,EAAEvB,CAAC,CAACqB,QAAQ,EAAErB,CAAC,CAACwB,MAAM,EAAEmC,OAAO,CAAC;IAC/H,CAAC,CAAC,CAAC,CAAC;IACJ;;IAGA1D,cAAc,CAAC;MACb/B,IAAI,EAAE,SAAS;MACf0G,eAAe,EAAExC,SAAS;MAC1BA,SAAS,EAAEI,IAAI,CAACoE,WAAW,CAACxE,SAAS,CAAC;MACtCV,WAAW,EAAEA,WAAW;MACxBZ,IAAI,EAAE,IAAI,CAACC;IACb,CAAC,CAAC;EACJ,CAAC;EACDkC,yBAAyB,EAAE,SAAAA,CAAUjD,CAAC,EAAEoB,EAAE,EAAEnB,cAAc,EAAE;IAC1D,IAAI4G,UAAU,GAAGzF,EAAE,CAACD,OAAO;IAE3B,IAAI,OAAO0F,UAAU,KAAK,QAAQ,EAAE;MAClC,IAAIC,OAAO,GAAGD,UAAU;MACxBA,UAAU,GAAG;QACXC,OAAO,EAAEA,OAAO;QAChB;QACAC,SAAS,EAAED;MACb,CAAC;IACH;IAEA,IAAIE,eAAe,GAAG,IAAIhK,KAAK,CAAC6J,UAAU,EAAE,IAAI,CAACzH,aAAa,EAAE,IAAI,CAACC,QAAQ,CAAC;IAC9E,IAAIoH,WAAW,GAAGO,eAAe,CAACtI,GAAG,CAAC,SAAS,CAAC;IAChD,IAAIgI,WAAW,GAAGR,IAAI,CAACC,MAAM,EAAE,CAAC,CAAC;IACjC;IACA;;IAEA,IAAI,CAACjD,WAAW,CAAC8D,eAAe,EAAE,YAAY;MAC5C,IAAI,CAACf,mBAAmB,CAACe,eAAe,EAAEP,WAAW,EAAEO,eAAe,CAACtI,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,EAAEgI,WAAW,EAAE1G,CAAC,CAACsB,OAAO,EAAEtB,CAAC,CAACuB,OAAO,EAAEvB,CAAC,CAACqB,QAAQ,EAAED,EAAE,CAAC;IACzJ,CAAC,CAAC,CAAC,CAAC;;IAGJnB,cAAc,CAAC;MACb/B,IAAI,EAAE,SAAS;MACf4C,IAAI,EAAE,IAAI,CAACC;IACb,CAAC,CAAC;EACJ,CAAC;EACDkF,mBAAmB,EAAE,SAAAA,CAAU1H,YAAY,EAAEkI,WAAW,EAAED,MAAM,EAAEE,WAAW,EAAE9I,CAAC,EAAEC,CAAC,EAAEiI,YAAY,EAAE1E,EAAE,EAAEuC,OAAO,EAAE;IAC9G;IACA,IAAI,CAAC1C,OAAO,GAAG,EAAE;IAEjB,IAAI,CAAC1C,YAAY,CAACG,GAAG,CAAC,aAAa,CAAC,IAAI,CAACH,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC,EAAE;MACjE;IACF;IAEA,IAAIE,cAAc,GAAG,IAAI,CAACI,eAAe;IACzC,IAAI+H,SAAS,GAAGxI,YAAY,CAACG,GAAG,CAAC,WAAW,CAAC;IAC7CoH,YAAY,GAAGA,YAAY,IAAIvH,YAAY,CAACG,GAAG,CAAC,UAAU,CAAC;IAC3D,IAAI4G,IAAI,GAAGmB,WAAW;IAEtB,IAAIM,SAAS,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;MAC9CzB,IAAI,GAAG3I,UAAU,CAACsK,SAAS,CAACF,SAAS,EAAEP,MAAM,EAAE,IAAI,CAAC;IACtD,CAAC,MAAM,IAAI,OAAOO,SAAS,KAAK,UAAU,EAAE;MAC1C,IAAIG,QAAQ,GAAG5J,IAAI,CAAC,UAAU6J,QAAQ,EAAE7B,IAAI,EAAE;QAC5C,IAAI6B,QAAQ,KAAK,IAAI,CAAClG,OAAO,EAAE;UAC7BrC,cAAc,CAACwI,UAAU,CAAC9B,IAAI,EAAE3B,OAAO,EAAEpF,YAAY,CAAC;UAEtD,IAAI,CAACyH,eAAe,CAACzH,YAAY,EAAEuH,YAAY,EAAElI,CAAC,EAAEC,CAAC,EAAEe,cAAc,EAAE4H,MAAM,EAAEpF,EAAE,CAAC;QACpF;MACF,CAAC,EAAE,IAAI,CAAC;MACR,IAAI,CAACH,OAAO,GAAGyF,WAAW;MAC1BpB,IAAI,GAAGyB,SAAS,CAACP,MAAM,EAAEE,WAAW,EAAEQ,QAAQ,CAAC;IACjD;IAEAtI,cAAc,CAACwI,UAAU,CAAC9B,IAAI,EAAE3B,OAAO,EAAEpF,YAAY,CAAC;IACtDK,cAAc,CAACyI,IAAI,CAAC9I,YAAY,CAAC;IAEjC,IAAI,CAACyH,eAAe,CAACzH,YAAY,EAAEuH,YAAY,EAAElI,CAAC,EAAEC,CAAC,EAAEe,cAAc,EAAE4H,MAAM,EAAEpF,EAAE,CAAC;EACpF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE4E,eAAe,EAAE,SAAAA,CAAUzH,YAAY,EAAEuH,YAAY,EAAElI,CAAC,EAAEC,CAAC,EAAEiJ,OAAO,EAAEN,MAAM,EAAEpF,EAAE,EAAE;IAChF,IAAIkG,SAAS,GAAG,IAAI,CAAChI,IAAI,CAACiI,QAAQ,EAAE;IAEpC,IAAIC,UAAU,GAAG,IAAI,CAAClI,IAAI,CAACmI,SAAS,EAAE;IAEtC3B,YAAY,GAAGA,YAAY,IAAIvH,YAAY,CAACG,GAAG,CAAC,UAAU,CAAC;IAC3D,IAAIgJ,WAAW,GAAGZ,OAAO,CAACa,OAAO,EAAE;IACnC,IAAIC,KAAK,GAAGrJ,YAAY,CAACG,GAAG,CAAC,OAAO,CAAC;IACrC,IAAImJ,MAAM,GAAGtJ,YAAY,CAACG,GAAG,CAAC,eAAe,CAAC;IAC9C,IAAIoJ,IAAI,GAAG1G,EAAE,IAAIA,EAAE,CAAC2G,eAAe,EAAE,CAACC,KAAK,EAAE;IAC7C5G,EAAE,IAAI0G,IAAI,CAACG,cAAc,CAAC7G,EAAE,CAAC8G,SAAS,CAAC;IAEvC,IAAI,OAAOpC,YAAY,KAAK,UAAU,EAAE;MACtC;MACAA,YAAY,GAAGA,YAAY,CAAC,CAAClI,CAAC,EAAEC,CAAC,CAAC,EAAE2I,MAAM,EAAEM,OAAO,CAAC1F,EAAE,EAAE0G,IAAI,EAAE;QAC5DK,QAAQ,EAAE,CAACb,SAAS,EAAEE,UAAU,CAAC;QACjCE,WAAW,EAAEA,WAAW,CAACU,KAAK;MAChC,CAAC,CAAC;IACJ;IAEA,IAAI7L,MAAM,CAAC8L,OAAO,CAACvC,YAAY,CAAC,EAAE;MAChClI,CAAC,GAAGJ,YAAY,CAACsI,YAAY,CAAC,CAAC,CAAC,EAAEwB,SAAS,CAAC;MAC5CzJ,CAAC,GAAGL,YAAY,CAACsI,YAAY,CAAC,CAAC,CAAC,EAAE0B,UAAU,CAAC;IAC/C,CAAC,MAAM,IAAIjL,MAAM,CAACgJ,QAAQ,CAACO,YAAY,CAAC,EAAE;MACxCA,YAAY,CAAChI,KAAK,GAAG4J,WAAW,CAAC,CAAC,CAAC;MACnC5B,YAAY,CAAC/H,MAAM,GAAG2J,WAAW,CAAC,CAAC,CAAC;MACpC,IAAIY,UAAU,GAAGvL,UAAU,CAACwL,aAAa,CAACzC,YAAY,EAAE;QACtDhI,KAAK,EAAEwJ,SAAS;QAChBvJ,MAAM,EAAEyJ;MACV,CAAC,CAAC;MACF5J,CAAC,GAAG0K,UAAU,CAAC1K,CAAC;MAChBC,CAAC,GAAGyK,UAAU,CAACzK,CAAC;MAChB+J,KAAK,GAAG,IAAI,CAAC,CAAC;MACd;;MAEAC,MAAM,GAAG,IAAI;IACf,CAAC,CAAC;IAAA,KACG,IAAI,OAAO/B,YAAY,KAAK,QAAQ,IAAI1E,EAAE,EAAE;MAC7C,IAAIoH,GAAG,GAAGC,mBAAmB,CAAC3C,YAAY,EAAEgC,IAAI,EAAEJ,WAAW,CAAC;MAC9D9J,CAAC,GAAG4K,GAAG,CAAC,CAAC,CAAC;MACV3K,CAAC,GAAG2K,GAAG,CAAC,CAAC,CAAC;IACZ,CAAC,MAAM;MACL,IAAIA,GAAG,GAAGE,oBAAoB,CAAC9K,CAAC,EAAEC,CAAC,EAAEiJ,OAAO,EAAEQ,SAAS,EAAEE,UAAU,EAAEI,KAAK,GAAG,IAAI,GAAG,EAAE,EAAEC,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;MAC3GjK,CAAC,GAAG4K,GAAG,CAAC,CAAC,CAAC;MACV3K,CAAC,GAAG2K,GAAG,CAAC,CAAC,CAAC;IACZ;IAEFZ,KAAK,KAAKhK,CAAC,IAAI+K,aAAa,CAACf,KAAK,CAAC,GAAGF,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGE,KAAK,KAAK,OAAO,GAAGF,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAClGG,MAAM,KAAKhK,CAAC,IAAI8K,aAAa,CAACd,MAAM,CAAC,GAAGH,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGG,MAAM,KAAK,QAAQ,GAAGH,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAEtG,IAAInJ,YAAY,CAACG,GAAG,CAAC,SAAS,CAAC,EAAE;MAC/B,IAAI8J,GAAG,GAAGI,sBAAsB,CAAChL,CAAC,EAAEC,CAAC,EAAEiJ,OAAO,EAAEQ,SAAS,EAAEE,UAAU,CAAC;MACtE5J,CAAC,GAAG4K,GAAG,CAAC,CAAC,CAAC;MACV3K,CAAC,GAAG2K,GAAG,CAAC,CAAC,CAAC;IACZ;IAEA1B,OAAO,CAAC+B,MAAM,CAACjL,CAAC,EAAEC,CAAC,CAAC;EACtB,CAAC;EACD;EACA;EACAkI,8BAA8B,EAAE,SAAAA,CAAU7E,cAAc,EAAE;IACxD,IAAI4H,YAAY,GAAG,IAAI,CAACvJ,mBAAmB;IAC3C,IAAIwJ,iBAAiB,GAAG,CAAC,CAACD,YAAY,IAAIA,YAAY,CAAChG,MAAM,KAAK5B,cAAc,CAAC4B,MAAM;IACvFiG,iBAAiB,IAAIxL,IAAI,CAACuL,YAAY,EAAE,UAAUE,gBAAgB,EAAEC,aAAa,EAAE;MACjF,IAAIC,cAAc,GAAGF,gBAAgB,CAACnF,UAAU,IAAI,CAAC,CAAC;MACtD,IAAIsF,gBAAgB,GAAGjI,cAAc,CAAC+H,aAAa,CAAC,IAAI,CAAC,CAAC;MAC1D,IAAIG,cAAc,GAAGD,gBAAgB,CAACtF,UAAU,IAAI,EAAE;MACtDkF,iBAAiB,IAAIG,cAAc,CAACpG,MAAM,KAAKsG,cAAc,CAACtG,MAAM;MACpEiG,iBAAiB,IAAIxL,IAAI,CAAC2L,cAAc,EAAE,UAAUG,QAAQ,EAAEC,SAAS,EAAE;QACvE,IAAIC,QAAQ,GAAGH,cAAc,CAACE,SAAS,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAIE,WAAW,GAAGH,QAAQ,CAAC7E,iBAAiB,IAAI,EAAE;QAClD,IAAIiF,UAAU,GAAGF,QAAQ,CAAC/E,iBAAiB,IAAI,EAAE;QACjDuE,iBAAiB,IAAIM,QAAQ,CAAClF,KAAK,KAAKoF,QAAQ,CAACpF,KAAK,IAAIkF,QAAQ,CAACtE,QAAQ,KAAKwE,QAAQ,CAACxE,QAAQ,IAAIsE,QAAQ,CAACrE,MAAM,KAAKuE,QAAQ,CAACvE,MAAM,IAAIwE,WAAW,CAAC1G,MAAM,KAAK2G,UAAU,CAAC3G,MAAM;QACpLiG,iBAAiB,IAAIxL,IAAI,CAACiM,WAAW,EAAE,UAAUE,WAAW,EAAEC,CAAC,EAAE;UAC/D,IAAIC,UAAU,GAAGH,UAAU,CAACE,CAAC,CAAC;UAC9BZ,iBAAiB,IAAIW,WAAW,CAAChI,WAAW,KAAKkI,UAAU,CAAClI,WAAW,IAAIgI,WAAW,CAACtH,SAAS,KAAKwH,UAAU,CAACxH,SAAS;QAC3H,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,IAAI,CAAC7C,mBAAmB,GAAG2B,cAAc;IACzC,OAAO,CAAC,CAAC6H,iBAAiB;EAC5B,CAAC;EACD3I,KAAK,EAAE,SAAAA,CAAUH,cAAc,EAAE;IAC/B;IACA;IACA;IACA;IACA,IAAI,CAACV,mBAAmB,GAAG,IAAI;IAC/BU,cAAc,CAAC;MACb/B,IAAI,EAAE,SAAS;MACf4C,IAAI,EAAE,IAAI,CAACC;IACb,CAAC,CAAC;EACJ,CAAC;EACD8I,OAAO,EAAE,SAAAA,CAAUzL,OAAO,EAAEC,GAAG,EAAE;IAC/B,IAAI7B,GAAG,CAAC8B,IAAI,EAAE;MACZ;IACF;IAEA,IAAI,CAACU,eAAe,CAAC6K,OAAO,EAAE;IAE9B5M,cAAc,CAAC6M,UAAU,CAAC,aAAa,EAAEzL,GAAG,CAAC;EAC/C;AACF,CAAC,CAAC;AACF;AACA;AACA;AACA;;AAGA,SAASqE,iBAAiBA,CAACqH,YAAY,EAAE;EACvC,IAAIC,WAAW,GAAGD,YAAY,CAACE,GAAG,EAAE;EAEpC,OAAOF,YAAY,CAACjH,MAAM,EAAE;IAC1B,IAAI+D,UAAU,GAAGkD,YAAY,CAACE,GAAG,EAAE;IAEnC,IAAIpD,UAAU,EAAE;MACd,IAAI7J,KAAK,CAACkN,UAAU,CAACrD,UAAU,CAAC,EAAE;QAChCA,UAAU,GAAGA,UAAU,CAACnI,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC;MAC9C,CAAC,CAAC;MACF;MACA;MACA;MACA;;MAGA,IAAI,OAAOmI,UAAU,KAAK,QAAQ,EAAE;QAClCA,UAAU,GAAG;UACXE,SAAS,EAAEF;QACb,CAAC;MACH;MAEAmD,WAAW,GAAG,IAAIhN,KAAK,CAAC6J,UAAU,EAAEmD,WAAW,EAAEA,WAAW,CAAC5L,OAAO,CAAC;IACvE;EACF;EAEA,OAAO4L,WAAW;AACpB;AAEA,SAAShJ,kBAAkBA,CAACH,OAAO,EAAExC,GAAG,EAAE;EACxC,OAAOwC,OAAO,CAACZ,cAAc,IAAI1D,MAAM,CAACe,IAAI,CAACe,GAAG,CAAC4B,cAAc,EAAE5B,GAAG,CAAC;AACvE;AAEA,SAASqK,oBAAoBA,CAAC9K,CAAC,EAAEC,CAAC,EAAEiJ,OAAO,EAAEQ,SAAS,EAAEE,UAAU,EAAE2C,IAAI,EAAEC,IAAI,EAAE;EAC9E,IAAIC,IAAI,GAAGvD,OAAO,CAACwD,YAAY,EAAE;EACjC,IAAIxM,KAAK,GAAGuM,IAAI,CAACvM,KAAK;EACtB,IAAIC,MAAM,GAAGsM,IAAI,CAACtM,MAAM;EAExB,IAAIoM,IAAI,IAAI,IAAI,EAAE;IAChB,IAAIvM,CAAC,GAAGE,KAAK,GAAGqM,IAAI,GAAG7C,SAAS,EAAE;MAChC1J,CAAC,IAAIE,KAAK,GAAGqM,IAAI;IACnB,CAAC,MAAM;MACLvM,CAAC,IAAIuM,IAAI;IACX;EACF;EAEA,IAAIC,IAAI,IAAI,IAAI,EAAE;IAChB,IAAIvM,CAAC,GAAGE,MAAM,GAAGqM,IAAI,GAAG5C,UAAU,EAAE;MAClC3J,CAAC,IAAIE,MAAM,GAAGqM,IAAI;IACpB,CAAC,MAAM;MACLvM,CAAC,IAAIuM,IAAI;IACX;EACF;EAEA,OAAO,CAACxM,CAAC,EAAEC,CAAC,CAAC;AACf;AAEA,SAAS+K,sBAAsBA,CAAChL,CAAC,EAAEC,CAAC,EAAEiJ,OAAO,EAAEQ,SAAS,EAAEE,UAAU,EAAE;EACpE,IAAI6C,IAAI,GAAGvD,OAAO,CAACwD,YAAY,EAAE;EACjC,IAAIxM,KAAK,GAAGuM,IAAI,CAACvM,KAAK;EACtB,IAAIC,MAAM,GAAGsM,IAAI,CAACtM,MAAM;EACxBH,CAAC,GAAGsI,IAAI,CAACqE,GAAG,CAAC3M,CAAC,GAAGE,KAAK,EAAEwJ,SAAS,CAAC,GAAGxJ,KAAK;EAC1CD,CAAC,GAAGqI,IAAI,CAACqE,GAAG,CAAC1M,CAAC,GAAGE,MAAM,EAAEyJ,UAAU,CAAC,GAAGzJ,MAAM;EAC7CH,CAAC,GAAGsI,IAAI,CAACsE,GAAG,CAAC5M,CAAC,EAAE,CAAC,CAAC;EAClBC,CAAC,GAAGqI,IAAI,CAACsE,GAAG,CAAC3M,CAAC,EAAE,CAAC,CAAC;EAClB,OAAO,CAACD,CAAC,EAAEC,CAAC,CAAC;AACf;AAEA,SAAS4K,mBAAmBA,CAACpH,QAAQ,EAAEyG,IAAI,EAAEJ,WAAW,EAAE;EACxD,IAAI+C,QAAQ,GAAG/C,WAAW,CAAC,CAAC,CAAC;EAC7B,IAAIgD,SAAS,GAAGhD,WAAW,CAAC,CAAC,CAAC;EAC9B,IAAIiD,GAAG,GAAG,CAAC;EACX,IAAI/M,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,CAAC;EACT,IAAI+M,SAAS,GAAG9C,IAAI,CAAChK,KAAK;EAC1B,IAAI+M,UAAU,GAAG/C,IAAI,CAAC/J,MAAM;EAE5B,QAAQsD,QAAQ;IACd,KAAK,QAAQ;MACXzD,CAAC,GAAGkK,IAAI,CAAClK,CAAC,GAAGgN,SAAS,GAAG,CAAC,GAAGH,QAAQ,GAAG,CAAC;MACzC5M,CAAC,GAAGiK,IAAI,CAACjK,CAAC,GAAGgN,UAAU,GAAG,CAAC,GAAGH,SAAS,GAAG,CAAC;MAC3C;IAEF,KAAK,KAAK;MACR9M,CAAC,GAAGkK,IAAI,CAAClK,CAAC,GAAGgN,SAAS,GAAG,CAAC,GAAGH,QAAQ,GAAG,CAAC;MACzC5M,CAAC,GAAGiK,IAAI,CAACjK,CAAC,GAAG6M,SAAS,GAAGC,GAAG;MAC5B;IAEF,KAAK,QAAQ;MACX/M,CAAC,GAAGkK,IAAI,CAAClK,CAAC,GAAGgN,SAAS,GAAG,CAAC,GAAGH,QAAQ,GAAG,CAAC;MACzC5M,CAAC,GAAGiK,IAAI,CAACjK,CAAC,GAAGgN,UAAU,GAAGF,GAAG;MAC7B;IAEF,KAAK,MAAM;MACT/M,CAAC,GAAGkK,IAAI,CAAClK,CAAC,GAAG6M,QAAQ,GAAGE,GAAG;MAC3B9M,CAAC,GAAGiK,IAAI,CAACjK,CAAC,GAAGgN,UAAU,GAAG,CAAC,GAAGH,SAAS,GAAG,CAAC;MAC3C;IAEF,KAAK,OAAO;MACV9M,CAAC,GAAGkK,IAAI,CAAClK,CAAC,GAAGgN,SAAS,GAAGD,GAAG;MAC5B9M,CAAC,GAAGiK,IAAI,CAACjK,CAAC,GAAGgN,UAAU,GAAG,CAAC,GAAGH,SAAS,GAAG,CAAC;EAAC;EAGhD,OAAO,CAAC9M,CAAC,EAAEC,CAAC,CAAC;AACf;AAEA,SAAS8K,aAAaA,CAACf,KAAK,EAAE;EAC5B,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,QAAQ;AACjD;AAEAkD,MAAM,CAACC,OAAO,GAAG/M,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}