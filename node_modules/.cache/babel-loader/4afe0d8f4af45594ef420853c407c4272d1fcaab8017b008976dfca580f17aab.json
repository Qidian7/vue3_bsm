{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar vec2 = require(\"zrender/lib/core/vector\");\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar _multipleGraphEdgeHelper = require(\"../helper/multipleGraphEdgeHelper\");\nvar getCurvenessForEdge = _multipleGraphEdgeHelper.getCurvenessForEdge;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph, seriesModel);\n}\nfunction simpleLayoutEdge(graph, seriesModel) {\n  graph.eachEdge(function (edge, index) {\n    var curveness = zrUtil.retrieve3(edge.getModel().get('lineStyle.curveness'), -getCurvenessForEdge(edge, seriesModel, index, true), 0);\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n    edge.setLayout(points);\n  });\n}\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;","map":{"version":3,"names":["vec2","require","zrUtil","_multipleGraphEdgeHelper","getCurvenessForEdge","simpleLayout","seriesModel","coordSys","coordinateSystem","type","graph","getGraph","eachNode","node","model","getModel","setLayout","get","simpleLayoutEdge","eachEdge","edge","index","curveness","retrieve3","p1","clone","node1","getLayout","p2","node2","points","push","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _multipleGraphEdgeHelper = require(\"../helper/multipleGraphEdgeHelper\");\n\nvar getCurvenessForEdge = _multipleGraphEdgeHelper.getCurvenessForEdge;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph, seriesModel);\n}\n\nfunction simpleLayoutEdge(graph, seriesModel) {\n  graph.eachEdge(function (edge, index) {\n    var curveness = zrUtil.retrieve3(edge.getModel().get('lineStyle.curveness'), -getCurvenessForEdge(edge, seriesModel, index, true), 0);\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAE7C,IAAIC,MAAM,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAE7C,IAAIE,wBAAwB,GAAGF,OAAO,CAAC,mCAAmC,CAAC;AAE3E,IAAIG,mBAAmB,GAAGD,wBAAwB,CAACC,mBAAmB;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACC,WAAW,EAAE;EACjC,IAAIC,QAAQ,GAAGD,WAAW,CAACE,gBAAgB;EAE3C,IAAID,QAAQ,IAAIA,QAAQ,CAACE,IAAI,KAAK,MAAM,EAAE;IACxC;EACF;EAEA,IAAIC,KAAK,GAAGJ,WAAW,CAACK,QAAQ,EAAE;EAClCD,KAAK,CAACE,QAAQ,CAAC,UAAUC,IAAI,EAAE;IAC7B,IAAIC,KAAK,GAAGD,IAAI,CAACE,QAAQ,EAAE;IAC3BF,IAAI,CAACG,SAAS,CAAC,CAAC,CAACF,KAAK,CAACG,GAAG,CAAC,GAAG,CAAC,EAAE,CAACH,KAAK,CAACG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EACpD,CAAC,CAAC;EACFC,gBAAgB,CAACR,KAAK,EAAEJ,WAAW,CAAC;AACtC;AAEA,SAASY,gBAAgBA,CAACR,KAAK,EAAEJ,WAAW,EAAE;EAC5CI,KAAK,CAACS,QAAQ,CAAC,UAAUC,IAAI,EAAEC,KAAK,EAAE;IACpC,IAAIC,SAAS,GAAGpB,MAAM,CAACqB,SAAS,CAACH,IAAI,CAACL,QAAQ,EAAE,CAACE,GAAG,CAAC,qBAAqB,CAAC,EAAE,CAACb,mBAAmB,CAACgB,IAAI,EAAEd,WAAW,EAAEe,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;IACrI,IAAIG,EAAE,GAAGxB,IAAI,CAACyB,KAAK,CAACL,IAAI,CAACM,KAAK,CAACC,SAAS,EAAE,CAAC;IAC3C,IAAIC,EAAE,GAAG5B,IAAI,CAACyB,KAAK,CAACL,IAAI,CAACS,KAAK,CAACF,SAAS,EAAE,CAAC;IAC3C,IAAIG,MAAM,GAAG,CAACN,EAAE,EAAEI,EAAE,CAAC;IAErB,IAAI,CAACN,SAAS,EAAE;MACdQ,MAAM,CAACC,IAAI,CAAC,CAAC,CAACP,EAAE,CAAC,CAAC,CAAC,GAAGI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAACJ,EAAE,CAAC,CAAC,CAAC,GAAGI,EAAE,CAAC,CAAC,CAAC,IAAIN,SAAS,EAAE,CAACE,EAAE,CAAC,CAAC,CAAC,GAAGI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAACA,EAAE,CAAC,CAAC,CAAC,GAAGJ,EAAE,CAAC,CAAC,CAAC,IAAIF,SAAS,CAAC,CAAC;IACrH;IAEAF,IAAI,CAACJ,SAAS,CAACc,MAAM,CAAC;EACxB,CAAC,CAAC;AACJ;AAEAE,OAAO,CAAC3B,YAAY,GAAGA,YAAY;AACnC2B,OAAO,CAACd,gBAAgB,GAAGA,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}