{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n    if (typeof targetNode === 'string') {\n      targetNode = root.getNodeById(targetNode);\n    }\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n    var targetNodeId = payload.targetNodeId;\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\nfunction getPathToRoot(node) {\n  var path = [];\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n  return path.reverse();\n}\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n  treePathInfo.reverse();\n  return treePathInfo;\n}\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;","map":{"version":3,"names":["zrUtil","require","retrieveTargetInfo","payload","validPayloadTypes","seriesModel","indexOf","type","root","getData","tree","targetNode","getNodeById","contains","node","targetNodeId","getPathToRoot","path","parentNode","push","reverse","aboveViewRoot","viewRoot","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","dataIndex","name","value","getRawValue","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/chart/helper/treeHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (typeof targetNode === 'string') {\n      targetNode = root.getNodeById(targetNode);\n    }\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAuB,CAAC;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,kBAAkBA,CAACC,OAAO,EAAEC,iBAAiB,EAAEC,WAAW,EAAE;EACnE,IAAIF,OAAO,IAAIH,MAAM,CAACM,OAAO,CAACF,iBAAiB,EAAED,OAAO,CAACI,IAAI,CAAC,IAAI,CAAC,EAAE;IACnE,IAAIC,IAAI,GAAGH,WAAW,CAACI,OAAO,EAAE,CAACC,IAAI,CAACF,IAAI;IAC1C,IAAIG,UAAU,GAAGR,OAAO,CAACQ,UAAU;IAEnC,IAAI,OAAOA,UAAU,KAAK,QAAQ,EAAE;MAClCA,UAAU,GAAGH,IAAI,CAACI,WAAW,CAACD,UAAU,CAAC;IAC3C;IAEA,IAAIA,UAAU,IAAIH,IAAI,CAACK,QAAQ,CAACF,UAAU,CAAC,EAAE;MAC3C,OAAO;QACLG,IAAI,EAAEH;MACR,CAAC;IACH;IAEA,IAAII,YAAY,GAAGZ,OAAO,CAACY,YAAY;IAEvC,IAAIA,YAAY,IAAI,IAAI,KAAKJ,UAAU,GAAGH,IAAI,CAACI,WAAW,CAACG,YAAY,CAAC,CAAC,EAAE;MACzE,OAAO;QACLD,IAAI,EAAEH;MACR,CAAC;IACH;EACF;AACF,CAAC,CAAC;;AAGF,SAASK,aAAaA,CAACF,IAAI,EAAE;EAC3B,IAAIG,IAAI,GAAG,EAAE;EAEb,OAAOH,IAAI,EAAE;IACXA,IAAI,GAAGA,IAAI,CAACI,UAAU;IACtBJ,IAAI,IAAIG,IAAI,CAACE,IAAI,CAACL,IAAI,CAAC;EACzB;EAEA,OAAOG,IAAI,CAACG,OAAO,EAAE;AACvB;AAEA,SAASC,aAAaA,CAACC,QAAQ,EAAER,IAAI,EAAE;EACrC,IAAIS,QAAQ,GAAGP,aAAa,CAACM,QAAQ,CAAC;EACtC,OAAOtB,MAAM,CAACM,OAAO,CAACiB,QAAQ,EAAET,IAAI,CAAC,IAAI,CAAC;AAC5C,CAAC,CAAC;;AAGF,SAASU,gBAAgBA,CAACV,IAAI,EAAET,WAAW,EAAE;EAC3C,IAAIoB,YAAY,GAAG,EAAE;EAErB,OAAOX,IAAI,EAAE;IACX,IAAIY,aAAa,GAAGZ,IAAI,CAACa,SAAS;IAClCF,YAAY,CAACN,IAAI,CAAC;MAChBS,IAAI,EAAEd,IAAI,CAACc,IAAI;MACfD,SAAS,EAAED,aAAa;MACxBG,KAAK,EAAExB,WAAW,CAACyB,WAAW,CAACJ,aAAa;IAC9C,CAAC,CAAC;IACFZ,IAAI,GAAGA,IAAI,CAACI,UAAU;EACxB;EAEAO,YAAY,CAACL,OAAO,EAAE;EACtB,OAAOK,YAAY;AACrB;AAEAM,OAAO,CAAC7B,kBAAkB,GAAGA,kBAAkB;AAC/C6B,OAAO,CAACf,aAAa,GAAGA,aAAa;AACrCe,OAAO,CAACV,aAAa,GAAGA,aAAa;AACrCU,OAAO,CAACP,gBAAgB,GAAGA,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}