{"ast":null,"code":"var _vector = require(\"./vector\");\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\nvar _v1 = v2Create();\nvar _v2 = v2Create();\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n  return mathSqrt(d);\n}\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;","map":{"version":3,"names":["_vector","require","v2Create","create","v2DistSquare","distSquare","mathPow","Math","pow","mathSqrt","sqrt","EPSILON","EPSILON_NUMERIC","THREE_SQRT","ONE_THIRD","_v0","_v1","_v2","isAroundZero","val","isNotAroundZero","cubicAt","p0","p1","p2","p3","t","onet","cubicDerivativeAt","cubicRootAt","roots","a","b","c","d","A","B","C","n","t1","disc","K","t2","discSqrt","Y1","Y2","T","theta","acos","ASqrt","tmp","cos","sin","t3","cubicExtrema","extrema","cubicSubdivide","out","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x1","y1","x2","y2","x3","y3","x","y","interval","Infinity","prev","next","d1","d2","_t","i","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/zrender/lib/core/curve.js"],"sourcesContent":["var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}