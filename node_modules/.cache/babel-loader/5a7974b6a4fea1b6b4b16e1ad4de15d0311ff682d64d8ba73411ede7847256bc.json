{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  },\n  /**\n   * Get rect area of cartesian.\n   * Area will have a contain function to determine if a point is in the coordinate system.\n   * @return {BoundingRect}\n   */\n  getArea: function () {\n    var xExtent = this.getAxis('x').getGlobalExtent();\n    var yExtent = this.getAxis('y').getGlobalExtent();\n    var x = Math.min(xExtent[0], xExtent[1]);\n    var y = Math.min(yExtent[0], yExtent[1]);\n    var width = Math.max(xExtent[0], xExtent[1]) - x;\n    var height = Math.max(yExtent[0], yExtent[1]) - y;\n    var rect = new BoundingRect(x, y, width, height);\n    return rect;\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","BoundingRect","Cartesian","Cartesian2D","name","call","prototype","constructor","type","dimensions","getBaseAxis","getAxesByScale","getAxis","containPoint","point","axisX","axisY","contain","toLocalCoord","containData","data","dataToPoint","reserved","out","xAxis","yAxis","toGlobalCoord","dataToCoord","clampData","xScale","scale","yScale","xAxisExtent","getExtent","yAxisExtent","x","parse","y","Math","min","max","pointToData","coordToData","getOtherAxis","axis","dim","getArea","xExtent","getGlobalExtent","yExtent","width","height","rect","inherits","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/coord/cartesian/Cartesian2D.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  },\n\n  /**\n   * Get rect area of cartesian.\n   * Area will have a contain function to determine if a point is in the coordinate system.\n   * @return {BoundingRect}\n   */\n  getArea: function () {\n    var xExtent = this.getAxis('x').getGlobalExtent();\n    var yExtent = this.getAxis('y').getGlobalExtent();\n    var x = Math.min(xExtent[0], xExtent[1]);\n    var y = Math.min(yExtent[0], yExtent[1]);\n    var width = Math.max(xExtent[0], xExtent[1]) - x;\n    var height = Math.max(yExtent[0], yExtent[1]) - y;\n    var rect = new BoundingRect(x, y, width, height);\n    return rect;\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}