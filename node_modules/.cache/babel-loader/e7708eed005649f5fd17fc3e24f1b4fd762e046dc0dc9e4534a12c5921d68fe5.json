{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-74f90cd8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"dataView\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"main1\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"main2\"\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, null, {\n    default: _withCtx(() => [_hoisted_2]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_card, null, {\n    default: _withCtx(() => [_hoisted_3]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","_hoisted_2","_hoisted_3"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/src/components/DataAnalysis/DataView.vue"],"sourcesContent":["<template>\n  <div class=\"dataView\">\n    <el-card>\n      <div id=\"main1\"></div>\n    </el-card>\n    <el-card>\n      <div id=\"main2\"></div>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport echarts from \"echarts\";\nimport { dataView } from \"@/api/api\";\nlet draw = function (legend, xAxis, series) {\n  let myChart1 = echarts.init(document.getElementById(\"main2\"));\n  let option = {\n    title: {\n      text: \"会话量\",\n    },\n    toolbar: {\n      trigger: \"axis\",\n    },\n    legend: {\n      data: legend,\n    },\n    xAxis: {\n      type: \"category\",\n      data: xAxis,\n    },\n    yAxis: {\n      type: \"value\",\n    },\n    series,\n  };\n  myChart1.setOption(option);\n};\n// 第二个图标的绘制\ndataView()\n  .then((res) => {\n    console.log(res);\n    if (res.status === 200) {\n      let { legend, xAxis, series } = res.data.data;\n      draw(legend, xAxis, series);\n    }\n  })\n  .catch((err) => {\n    throw err;\n  });\n</script>\n\n<script>\nimport { dataView } from \"@/api/api\";\nexport default {\n  name: \"DataView\",\n  data() {\n    return {};\n  },\n  created() {\n    // 第二个图标的绘制\n    dataView()\n      .then((res) => {\n        console.log(res);\n        if (res.status === 200) {\n          let { legend, xAxis, series } = res.data.data;\n          this.draw(legend, xAxis, series);\n        }\n      })\n      .catch((err) => {\n        throw err;\n      });\n  },\n  // 在mounted中绘制图表\n  mounted() {\n    // 首先初始化echarts图表\n    let myChart = this.$echarts.init(document.getElementById(\"main1\"));\n    myChart.setOption({\n      title: {\n        text: \"课题组人数分布\",\n      },\n      tooltip: {}, // 鼠标放上去有对应提示\n      xAxis: {\n        data: [\"2018\", \"2019\", \"2020\", \"2021\", \"2022\", \"2023\"],\n      },\n      yAxis: {},\n      // 数据配置在series中\n      series: [\n        {\n          name: \"人数\",\n          // 图表类型，线图line 柱状图bar\n          type: \"bar\",\n          data: [2, 4, 23, 27, 31, 39],\n        },\n      ],\n    });\n  },\n  methods: {\n    draw(legend, xAxis, series) {\n      let myChart1 = this.$echarts.init(document.getElementById(\"main2\"));\n      let option = {\n        title: {\n          text: \"会话量\",\n        },\n        toolbar: {\n          trigger: \"axis\",\n        },\n        legend: {\n          data: legend,\n        },\n        xAxis: {\n          type: \"category\",\n          data: xAxis,\n        },\n        yAxis: {\n          type: \"value\",\n        },\n        series,\n      };\n      myChart1.setOption(option);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// 图表中一定要给宽高 ， 如果不给宽高会出现代码不报错但是什么都没有\n.dataView {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  .el-card {\n    width: 50%;\n    #main1,\n    #main2 {\n      height: 500px;\n    }\n  }\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAU;gEAEjBC,mBAAA,CAAsB;EAAjBC,EAAE,EAAC;AAAO;gEAGfD,mBAAA,CAAsB;EAAjBC,EAAE,EAAC;AAAO;;;;uBALnBC,mBAAA,CAOM,OAPNC,UAOM,GANJC,YAAA,CAEUC,kBAAA;sBADR,MAAsB,CAAtBC,UAAsB,C;;MAExBF,YAAA,CAEUC,kBAAA;sBADR,MAAsB,CAAtBE,UAAsB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}