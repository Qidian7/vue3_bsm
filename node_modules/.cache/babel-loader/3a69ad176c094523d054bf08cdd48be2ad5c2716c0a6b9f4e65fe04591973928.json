{"ast":null,"code":"/**\n * Sub-pixel optimize for canvas rendering, prevent from blur\n * when rendering a thin vertical/horizontal line.\n */\nvar round = Math.round;\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} outputShape The modification will be performed on `outputShape`.\n *                 `outputShape` and `inputShape` can be the same object.\n *                 `outputShape` object can be used repeatly, because all of\n *                 the `x1`, `x2`, `y1`, `y2` will be assigned in this method.\n * @param {Object} [inputShape]\n * @param {number} [inputShape.x1]\n * @param {number} [inputShape.y1]\n * @param {number} [inputShape.x2]\n * @param {number} [inputShape.y2]\n * @param {Object} [style]\n * @param {number} [style.lineWidth] If `null`/`undefined`/`0`, do not optimize.\n */\n\nfunction subPixelOptimizeLine(outputShape, inputShape, style) {\n  if (!inputShape) {\n    return;\n  }\n  var x1 = inputShape.x1;\n  var x2 = inputShape.x2;\n  var y1 = inputShape.y1;\n  var y2 = inputShape.y2;\n  outputShape.x1 = x1;\n  outputShape.x2 = x2;\n  outputShape.y1 = y1;\n  outputShape.y2 = y2;\n  var lineWidth = style && style.lineWidth;\n  if (!lineWidth) {\n    return;\n  }\n  if (round(x1 * 2) === round(x2 * 2)) {\n    outputShape.x1 = outputShape.x2 = subPixelOptimize(x1, lineWidth, true);\n  }\n  if (round(y1 * 2) === round(y2 * 2)) {\n    outputShape.y1 = outputShape.y2 = subPixelOptimize(y1, lineWidth, true);\n  }\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} outputShape The modification will be performed on `outputShape`.\n *                 `outputShape` and `inputShape` can be the same object.\n *                 `outputShape` object can be used repeatly, because all of\n *                 the `x`, `y`, `width`, `height` will be assigned in this method.\n * @param {Object} [inputShape]\n * @param {number} [inputShape.x]\n * @param {number} [inputShape.y]\n * @param {number} [inputShape.width]\n * @param {number} [inputShape.height]\n * @param {Object} [style]\n * @param {number} [style.lineWidth] If `null`/`undefined`/`0`, do not optimize.\n */\n\nfunction subPixelOptimizeRect(outputShape, inputShape, style) {\n  if (!inputShape) {\n    return;\n  }\n  var originX = inputShape.x;\n  var originY = inputShape.y;\n  var originWidth = inputShape.width;\n  var originHeight = inputShape.height;\n  outputShape.x = originX;\n  outputShape.y = originY;\n  outputShape.width = originWidth;\n  outputShape.height = originHeight;\n  var lineWidth = style && style.lineWidth;\n  if (!lineWidth) {\n    return;\n  }\n  outputShape.x = subPixelOptimize(originX, lineWidth, true);\n  outputShape.y = subPixelOptimize(originY, lineWidth, true);\n  outputShape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - outputShape.x, originWidth === 0 ? 0 : 1);\n  outputShape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - outputShape.y, originHeight === 0 ? 0 : 1);\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth If `null`/`undefined`/`0`, do not optimize.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  if (!lineWidth) {\n    return position;\n  } // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;","map":{"version":3,"names":["round","Math","subPixelOptimizeLine","outputShape","inputShape","style","x1","x2","y1","y2","lineWidth","subPixelOptimize","subPixelOptimizeRect","originX","x","originY","y","originWidth","width","originHeight","height","max","position","positiveOrNegative","doubledPosition","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/zrender/lib/graphic/helper/subPixelOptimize.js"],"sourcesContent":["/**\n * Sub-pixel optimize for canvas rendering, prevent from blur\n * when rendering a thin vertical/horizontal line.\n */\nvar round = Math.round;\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} outputShape The modification will be performed on `outputShape`.\n *                 `outputShape` and `inputShape` can be the same object.\n *                 `outputShape` object can be used repeatly, because all of\n *                 the `x1`, `x2`, `y1`, `y2` will be assigned in this method.\n * @param {Object} [inputShape]\n * @param {number} [inputShape.x1]\n * @param {number} [inputShape.y1]\n * @param {number} [inputShape.x2]\n * @param {number} [inputShape.y2]\n * @param {Object} [style]\n * @param {number} [style.lineWidth] If `null`/`undefined`/`0`, do not optimize.\n */\n\nfunction subPixelOptimizeLine(outputShape, inputShape, style) {\n  if (!inputShape) {\n    return;\n  }\n\n  var x1 = inputShape.x1;\n  var x2 = inputShape.x2;\n  var y1 = inputShape.y1;\n  var y2 = inputShape.y2;\n  outputShape.x1 = x1;\n  outputShape.x2 = x2;\n  outputShape.y1 = y1;\n  outputShape.y2 = y2;\n  var lineWidth = style && style.lineWidth;\n\n  if (!lineWidth) {\n    return;\n  }\n\n  if (round(x1 * 2) === round(x2 * 2)) {\n    outputShape.x1 = outputShape.x2 = subPixelOptimize(x1, lineWidth, true);\n  }\n\n  if (round(y1 * 2) === round(y2 * 2)) {\n    outputShape.y1 = outputShape.y2 = subPixelOptimize(y1, lineWidth, true);\n  }\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} outputShape The modification will be performed on `outputShape`.\n *                 `outputShape` and `inputShape` can be the same object.\n *                 `outputShape` object can be used repeatly, because all of\n *                 the `x`, `y`, `width`, `height` will be assigned in this method.\n * @param {Object} [inputShape]\n * @param {number} [inputShape.x]\n * @param {number} [inputShape.y]\n * @param {number} [inputShape.width]\n * @param {number} [inputShape.height]\n * @param {Object} [style]\n * @param {number} [style.lineWidth] If `null`/`undefined`/`0`, do not optimize.\n */\n\n\nfunction subPixelOptimizeRect(outputShape, inputShape, style) {\n  if (!inputShape) {\n    return;\n  }\n\n  var originX = inputShape.x;\n  var originY = inputShape.y;\n  var originWidth = inputShape.width;\n  var originHeight = inputShape.height;\n  outputShape.x = originX;\n  outputShape.y = originY;\n  outputShape.width = originWidth;\n  outputShape.height = originHeight;\n  var lineWidth = style && style.lineWidth;\n\n  if (!lineWidth) {\n    return;\n  }\n\n  outputShape.x = subPixelOptimize(originX, lineWidth, true);\n  outputShape.y = subPixelOptimize(originY, lineWidth, true);\n  outputShape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - outputShape.x, originWidth === 0 ? 0 : 1);\n  outputShape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - outputShape.y, originHeight === 0 ? 0 : 1);\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth If `null`/`undefined`/`0`, do not optimize.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  if (!lineWidth) {\n    return position;\n  } // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n\n\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}