{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"./config\");\nvar __DEV__ = _config.__DEV__;\nvar zrender = require(\"zrender/lib/zrender\");\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar colorTool = require(\"zrender/lib/tool/color\");\nvar env = require(\"zrender/lib/core/env\");\nvar timsort = require(\"zrender/lib/core/timsort\");\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\nvar GlobalModel = require(\"./model/Global\");\nvar ExtensionAPI = require(\"./ExtensionAPI\");\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\nvar OptionManager = require(\"./model/OptionManager\");\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\nvar dataStack = require(\"./processor/dataStack\");\nvar ComponentModel = require(\"./model/Component\");\nvar SeriesModel = require(\"./model/Series\");\nvar ComponentView = require(\"./view/Component\");\nvar ChartView = require(\"./view/Chart\");\nvar graphic = require(\"./util/graphic\");\nvar modelUtil = require(\"./util/model\");\nvar _throttle = require(\"./util/throttle\");\nvar throttle = _throttle.throttle;\nvar seriesColor = require(\"./visual/seriesColor\");\nvar aria = require(\"./visual/aria\");\nvar loadingDefault = require(\"./loading/default\");\nvar Scheduler = require(\"./stream/Scheduler\");\nvar lightTheme = require(\"./theme/light\");\nvar darkTheme = require(\"./theme/dark\");\nrequire(\"./component/dataset\");\nvar mapDataStorage = require(\"./coord/geo/mapDataStorage\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.9.0';\nvar dependencies = {\n  zrender: '4.3.2'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800;\nvar PRIORITY_PROCESSOR_DATASTACK = 900;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 3500;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\nfunction createRegisterEventWithLowercaseName(method, ignoreDisposed) {\n  return function (eventName, handler, context) {\n    if (!ignoreDisposed && this._disposed) {\n      disposedWarning(this.id);\n      return;\n    } // Event name is all lowercase\n\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on', true);\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off', true);\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one', true);\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 fps.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this, this._ecEventProcessor = new EventProcessor());\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\nvar echartsProto = ECharts.prototype;\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n    // Stream progress.\n    var remainTime = TEST_FRAME_REMAIN_TIME;\n    var ecModel = this._model;\n    var api = this._api;\n    scheduler.unfinished = false;\n    do {\n      var startTime = +new Date();\n      scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n      scheduler.performDataProcessorTasks(ecModel);\n      updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n      // each frame is not a good user experience. So we follow the rule that\n      // the extent of the coordinate system is determin in the first frame (the\n      // frame is executed immedietely after task reset.\n      // this._coordSysMgr.update(ecModel, api);\n      // console.log('--- ec frame visual ---', remainTime);\n\n      scheduler.performVisualTasks(ecModel);\n      renderSeries(this, this._model, api, 'remain');\n      remainTime -= +new Date() - startTime;\n    } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n    if (!scheduler.unfinished) {\n      this._zr.flush();\n    } // Else, zr flushing be ensue within the same frame,\n    // because zr flushing is after onframe event.\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n  var silent;\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n  this[IN_MAIN_PROCESS] = true;\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel();\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n  this._model.setOption(option, optionPreprocessorFuncs);\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\nechartsProto.setTheme = function () {\n  console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\nechartsProto.getSvgDataURL = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.toDataURL();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\nechartsProto.getDataURL = function (opts) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n  if (!env.canvasSupported) {\n    return;\n  }\n  var isSvg = opts.type === 'svg';\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    var zr = zrender.init(targetCanvas, {\n      renderer: isSvg ? 'svg' : 'canvas'\n    });\n    zr.resize({\n      width: width,\n      height: height\n    });\n    if (isSvg) {\n      var content = '';\n      each(canvasList, function (item) {\n        var x = item.left - left;\n        var y = item.top - top;\n        content += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n      });\n      zr.painter.getSvgRoot().innerHTML = content;\n      if (opts.connectedBackgroundColor) {\n        zr.painter.setBackgroundColor(opts.connectedBackgroundColor);\n      }\n      zr.refreshImmediately();\n      return zr.painter.toDataURL();\n    } else {\n      // Background between the charts\n      if (opts.connectedBackgroundColor) {\n        zr.add(new graphic.Rect({\n          shape: {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: opts.connectedBackgroundColor\n          }\n        }));\n      }\n      each(canvasList, function (item) {\n        var img = new graphic.Image({\n          style: {\n            x: item.left * dpr - left,\n            y: item.top * dpr - top,\n            image: item.dom\n          }\n        });\n        zr.add(img);\n      });\n      zr.refreshImmediately();\n      return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n    }\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\nfunction doConvertPixel(methodName, finder, value) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n  var ecModel = this._model;\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\nechartsProto.containPixel = function (finder, value) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\nechartsProto.resize = function (opts) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n  this._zr.resize(opts);\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  if (!ecModel) {\n    return;\n  }\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\nechartsProto.showLoading = function (name, cfg) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n  name = name || 'default';\n  this.hideLoading();\n  if (!loadingEffects[name]) {\n    return;\n  }\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\nechartsProto.hideLoading = function () {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n    return;\n  }\n  doDispatchAction.call(this, payload, opt.silent);\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if (\n    // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\nechartsProto.appendData = function (params) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\nechartsProto.on = createRegisterEventWithLowercaseName('on', false);\nechartsProto.off = createRegisterEventWithLowercaseName('off', false);\nechartsProto.one = createRegisterEventWithLowercaseName('one', false);\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    var handler = function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params;\n      var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n      if (isGlobalOut) {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType, el) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n        params = zrUtil.extend({}, el.eventData);\n      } // Contract: if params prepared in mouse event,\n      // these properties must be specified:\n      // {\n      //    componentType: string (component main type)\n      //    componentIndex: number\n      // }\n      // Otherwise event query can not work.\n\n      if (params) {\n        var componentType = params.componentType;\n        var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n        // markLine/markPoint/markArea, the componentType is\n        // 'markLine'/'markPoint'/'markArea', but we should better\n        // enable them to be queried by seriesIndex, since their\n        // option is set in each series.\n\n        if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n          componentType = 'series';\n          componentIndex = params.seriesIndex;\n        }\n        var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n        var view = model && this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n        params.event = e;\n        params.type = eveName;\n        this._ecEventProcessor.eventInfo = {\n          targetEl: el,\n          packedEvent: params,\n          model: model,\n          view: view\n        };\n        this.trigger(eveName, params);\n      }\n    }; // Consider that some component (like tooltip, brush, ...)\n    // register zr event handler, but user event handler might\n    // do anything, such as call `setOption` or `dispatchAction`,\n    // which probably update any of the content and probably\n    // cause problem if it is called previous other inner handlers.\n\n    handler.zrEventfulCallAtLast = true;\n    this._zr.on(eveName, handler, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\nechartsProto.clear = function () {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n  delete instances[this.id];\n};\nzrUtil.mixin(ECharts, Eventful);\nfunction disposedWarning(id) {}\nfunction updateHoverLayerStatus(ecIns, ecModel) {\n  var zr = ecIns._zr;\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    elCount++;\n  });\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.preventUsingHoverLayer) {\n        return;\n      }\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n      if (chartView.__alive) {\n        chartView.group.traverse(function (el) {\n          // Don't switch back.\n          el.useHoverLayer = true;\n        });\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @class\n * Usage of query:\n * `chart.on('click', query, handler);`\n * The `query` can be:\n * + The component type query string, only `mainType` or `mainType.subType`,\n *   like: 'xAxis', 'series', 'xAxis.category' or 'series.line'.\n * + The component query object, like:\n *   `{seriesIndex: 2}`, `{seriesName: 'xx'}`, `{seriesId: 'some'}`,\n *   `{xAxisIndex: 2}`, `{xAxisName: 'xx'}`, `{xAxisId: 'some'}`.\n * + The data query object, like:\n *   `{dataIndex: 123}`, `{dataType: 'link'}`, `{name: 'some'}`.\n * + The other query object (cmponent customized query), like:\n *   `{element: 'some'}` (only available in custom series).\n *\n * Caveat: If a prop in the `query` object is `null/undefined`, it is the\n * same as there is no such prop in the `query` object.\n */\n\nfunction EventProcessor() {\n  // These info required: targetEl, packedEvent, model, view\n  this.eventInfo;\n}\nEventProcessor.prototype = {\n  constructor: EventProcessor,\n  normalizeQuery: function (query) {\n    var cptQuery = {};\n    var dataQuery = {};\n    var otherQuery = {}; // `query` is `mainType` or `mainType.subType` of component.\n\n    if (zrUtil.isString(query)) {\n      var condCptType = parseClassType(query); // `.main` and `.sub` may be ''.\n\n      cptQuery.mainType = condCptType.main || null;\n      cptQuery.subType = condCptType.sub || null;\n    } // `query` is an object, convert to {mainType, index, name, id}.\n    else {\n      // `xxxIndex`, `xxxName`, `xxxId`, `name`, `dataIndex`, `dataType` is reserved,\n      // can not be used in `compomentModel.filterForExposedEvent`.\n      var suffixes = ['Index', 'Name', 'Id'];\n      var dataKeys = {\n        name: 1,\n        dataIndex: 1,\n        dataType: 1\n      };\n      zrUtil.each(query, function (val, key) {\n        var reserved = false;\n        for (var i = 0; i < suffixes.length; i++) {\n          var propSuffix = suffixes[i];\n          var suffixPos = key.lastIndexOf(propSuffix);\n          if (suffixPos > 0 && suffixPos === key.length - propSuffix.length) {\n            var mainType = key.slice(0, suffixPos); // Consider `dataIndex`.\n\n            if (mainType !== 'data') {\n              cptQuery.mainType = mainType;\n              cptQuery[propSuffix.toLowerCase()] = val;\n              reserved = true;\n            }\n          }\n        }\n        if (dataKeys.hasOwnProperty(key)) {\n          dataQuery[key] = val;\n          reserved = true;\n        }\n        if (!reserved) {\n          otherQuery[key] = val;\n        }\n      });\n    }\n    return {\n      cptQuery: cptQuery,\n      dataQuery: dataQuery,\n      otherQuery: otherQuery\n    };\n  },\n  filter: function (eventType, query, args) {\n    // They should be assigned before each trigger call.\n    var eventInfo = this.eventInfo;\n    if (!eventInfo) {\n      return true;\n    }\n    var targetEl = eventInfo.targetEl;\n    var packedEvent = eventInfo.packedEvent;\n    var model = eventInfo.model;\n    var view = eventInfo.view; // For event like 'globalout'.\n\n    if (!model || !view) {\n      return true;\n    }\n    var cptQuery = query.cptQuery;\n    var dataQuery = query.dataQuery;\n    return check(cptQuery, model, 'mainType') && check(cptQuery, model, 'subType') && check(cptQuery, model, 'index', 'componentIndex') && check(cptQuery, model, 'name') && check(cptQuery, model, 'id') && check(dataQuery, packedEvent, 'name') && check(dataQuery, packedEvent, 'dataIndex') && check(dataQuery, packedEvent, 'dataType') && (!view.filterForExposedEvent || view.filterForExposedEvent(eventType, query.otherQuery, targetEl, packedEvent));\n    function check(query, host, prop, propOnHost) {\n      return query[prop] == null || host[propOnHost || prop] === query[prop];\n    }\n  },\n  afterTrigger: function () {\n    // Make sure the eventInfo wont be used in next trigger.\n    this.eventInfo = null;\n  }\n};\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Can choose 'canvas' or 'svg' to render the chart.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n  if (existInstance) {\n    return existInstance;\n  }\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\nfunction extendComponentModel(opts\n/*, superClass*/) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\nfunction extendComponentView(opts\n/*, superClass*/) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\nfunction extendSeriesModel(opts\n/*, superClass*/) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\nfunction extendChartView(opts\n/*, superClass*/) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Array.<Object>|Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example GeoJSON\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n *\n *     $.get('airport.svg', function (svg) {\n *         echarts.registerMap('airport', {\n *             svg: svg\n *         }\n *     });\n *\n *     echarts.registerMap('eu', [\n *         {svg: eu-topographic.svg},\n *         {geoJSON: eu.json}\n *     ])\n */\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  mapDataStorage.registerMap(mapName, geoJson, specialAreas);\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\nfunction getMap(mapName) {\n  // For backward compatibility, only return the first one.\n  var records = mapDataStorage.retrieveMap(mapName);\n  return records && records[0] && {\n    geoJson: records[0].geoJSON,\n    specialAreas: records[0].specialAreas\n  };\n}\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n  for (var key in ___ec_export) {\n    if (___ec_export.hasOwnProperty(key)) {\n      exports[key] = ___ec_export[key];\n    }\n  }\n})();","map":{"version":3,"names":["_config","require","__DEV__","zrender","zrUtil","colorTool","env","timsort","Eventful","GlobalModel","ExtensionAPI","CoordinateSystemManager","OptionManager","backwardCompat","dataStack","ComponentModel","SeriesModel","ComponentView","ChartView","graphic","modelUtil","_throttle","throttle","seriesColor","aria","loadingDefault","Scheduler","lightTheme","darkTheme","mapDataStorage","assert","each","isFunction","isObject","parseClassType","version","dependencies","TEST_FRAME_REMAIN_TIME","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_SERIES_FILTER","PRIORITY_PROCESSOR_DATASTACK","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_PROGRESSIVE_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_POST_CHART_LAYOUT","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_BRUSH","PRIORITY","PROCESSOR","FILTER","SERIES_FILTER","STATISTIC","VISUAL","LAYOUT","PROGRESSIVE_LAYOUT","GLOBAL","CHART","POST_CHART_LAYOUT","COMPONENT","BRUSH","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","method","ignoreDisposed","eventName","handler","context","_disposed","disposedWarning","id","toLowerCase","prototype","call","MessageCenter","on","off","one","mixin","ECharts","dom","theme","opts","themeStorage","group","_dom","defaultRenderer","zr","_zr","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","bind","flush","clone","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","api","_api","createExtensionAPI","prioritySortFunc","a","b","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_ecEventProcessor","EventProcessor","_messageCenter","_initEvents","resize","_pendingActions","animation","_onframe","bindRenderedEvent","setAsPrimitive","echartsProto","scheduler","silent","prepare","updateMethods","update","flushPendingActions","triggerUpdatedEvent","unfinished","remainTime","ecModel","_model","startTime","Date","performSeriesTasks","performDataProcessorTasks","updateStreamModes","performVisualTasks","renderSeries","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","console","error","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","get","getSvgDataURL","svgSupported","list","storage","getDisplayList","el","stopAnimation","toDataURL","getDataURL","excludeComponents","excludesComponentViews","self","componentType","eachComponent","mainType","component","view","__viewId","ignore","push","url","getType","type","getConnectedDataURL","isSvg","groupId","mathMin","Math","min","mathMax","max","MAX_NUMBER","Infinity","connectedGroups","left","top","right","bottom","canvasList","instances","chart","canvas","getSvgDom","innerHTML","boundingRect","getBoundingClientRect","targetCanvas","createCanvas","content","item","x","y","getSvgRoot","connectedBackgroundColor","setBackgroundColor","refreshImmediately","add","Rect","shape","style","fill","img","Image","image","convertToPixel","curry","doConvertPixel","convertFromPixel","methodName","finder","value","coordSysList","getCoordinateSystems","result","parseFinder","i","length","coordSys","containPixel","models","key","indexOf","model","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","seriesModel","data","getData","dataIndexInside","hasOwnProperty","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","componentModel","getViewOfSeriesModel","prepareAndUpdate","payload","coordSysMgr","restoreData","create","clearColorPalette","render","colorArr","parse","stringify","performPostUpdateFuncs","updateTransform","ecIns","componentDirtyList","componentView","__alive","seriesDirtyMap","createHashMap","eachSeries","chartView","set","uid","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","updateLayout","restorePipelines","prepareStageTasks","prepareView","plan","updateDirectly","subType","concat","callView","query","condition","excludeSeriesId","normalizeToArray","__model","_loadingFX","optionChanged","resetOption","chartsMap","showLoading","name","cfg","hideLoading","loadingEffects","remove","makeActionFromEvent","eventObj","extend","eventActionMap","dispatchAction","opt","actions","doDispatchAction","browser","weChat","payloadType","escapeConnect","actionWrap","actionInfo","cptType","split","updateMethod","pop","payloads","batched","batch","map","defaults","eventObjBatch","isHighDown","batchItem","action","event","main","sub","trigger","pendingActions","shift","isFinished","appendData","params","seriesIndex","getSeriesByIndex","isComponent","viewList","viewMap","doPrepare","viewId","classType","Clazz","getClass","__id","__ecComponentInfo","index","componentIndex","renderTask","dispose","splice","renderComponents","dirtyList","updateZ","updatePayload","dirty","perform","getPerformArgs","updateBlend","updateHoverLayerStatus","postUpdateFuncs","func","MOUSE_EVENT_NAMES","eveName","e","target","isGlobalOut","dataModel","getDataParams","dataType","eventData","getComponent","eventInfo","targetEl","packedEvent","zrEventfulCallAtLast","actionType","eventType","isDisposed","clear","series","setAttribute","DOM_ATTRIBUTE_KEY","elCount","traverse","node","preventUsingHoverLayer","useHoverLayer","blendMode","isGroup","blend","setStyle","eachPendingDisplayable","displayable","z","zlevel","ecInstance","getComponentByElement","modelInfo","parent","constructor","normalizeQuery","cptQuery","dataQuery","otherQuery","isString","condCptType","suffixes","dataKeys","val","reserved","propSuffix","suffixPos","lastIndexOf","slice","filter","args","check","filterForExposedEvent","host","prop","propOnHost","afterTrigger","idBase","groupIdBase","enableConnect","STATUS_PENDING","STATUS_UPDATING","STATUS_UPDATED","STATUS_KEY","updateConnectedChartsStatus","charts","status","otherChart","otherCharts","existInstance","getInstanceByDom","connect","isArray","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutTask","registerVisual","visualTask","targetList","fn","defaultPriority","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","$override","registerMap","mapName","geoJson","specialAreas","getMap","records","retrieveMap","geoJSON","noop","dataTool","exports","___ec_export"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/echarts.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\nrequire(\"./component/dataset\");\n\nvar mapDataStorage = require(\"./coord/geo/mapDataStorage\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.9.0';\nvar dependencies = {\n  zrender: '4.3.2'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800;\nvar PRIORITY_PROCESSOR_DATASTACK = 900;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 3500;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method, ignoreDisposed) {\n  return function (eventName, handler, context) {\n    if (!ignoreDisposed && this._disposed) {\n      disposedWarning(this.id);\n      return;\n    } // Event name is all lowercase\n\n\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on', true);\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off', true);\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one', true);\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 fps.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this, this._ecEventProcessor = new EventProcessor());\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel();\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataURL = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.toDataURL();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var isSvg = opts.type === 'svg';\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    var zr = zrender.init(targetCanvas, {\n      renderer: isSvg ? 'svg' : 'canvas'\n    });\n    zr.resize({\n      width: width,\n      height: height\n    });\n\n    if (isSvg) {\n      var content = '';\n      each(canvasList, function (item) {\n        var x = item.left - left;\n        var y = item.top - top;\n        content += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n      });\n      zr.painter.getSvgRoot().innerHTML = content;\n\n      if (opts.connectedBackgroundColor) {\n        zr.painter.setBackgroundColor(opts.connectedBackgroundColor);\n      }\n\n      zr.refreshImmediately();\n      return zr.painter.toDataURL();\n    } else {\n      // Background between the charts\n      if (opts.connectedBackgroundColor) {\n        zr.add(new graphic.Rect({\n          shape: {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: opts.connectedBackgroundColor\n          }\n        }));\n      }\n\n      each(canvasList, function (item) {\n        var img = new graphic.Image({\n          style: {\n            x: item.left * dpr - left,\n            y: item.top * dpr - top,\n            image: item.dom\n          }\n        });\n        zr.add(img);\n      });\n      zr.refreshImmediately();\n      return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n    }\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on', false);\nechartsProto.off = createRegisterEventWithLowercaseName('off', false);\nechartsProto.one = createRegisterEventWithLowercaseName('one', false);\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    var handler = function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params;\n      var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n      if (isGlobalOut) {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType, el) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        } // Contract: if params prepared in mouse event,\n      // these properties must be specified:\n      // {\n      //    componentType: string (component main type)\n      //    componentIndex: number\n      // }\n      // Otherwise event query can not work.\n\n\n      if (params) {\n        var componentType = params.componentType;\n        var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n        // markLine/markPoint/markArea, the componentType is\n        // 'markLine'/'markPoint'/'markArea', but we should better\n        // enable them to be queried by seriesIndex, since their\n        // option is set in each series.\n\n        if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n          componentType = 'series';\n          componentIndex = params.seriesIndex;\n        }\n\n        var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n        var view = model && this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n        params.event = e;\n        params.type = eveName;\n        this._ecEventProcessor.eventInfo = {\n          targetEl: el,\n          packedEvent: params,\n          model: model,\n          view: view\n        };\n        this.trigger(eveName, params);\n      }\n    }; // Consider that some component (like tooltip, brush, ...)\n    // register zr event handler, but user event handler might\n    // do anything, such as call `setOption` or `dispatchAction`,\n    // which probably update any of the content and probably\n    // cause problem if it is called previous other inner handlers.\n\n\n    handler.zrEventfulCallAtLast = true;\n\n    this._zr.on(eveName, handler, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction disposedWarning(id) {}\n\nfunction updateHoverLayerStatus(ecIns, ecModel) {\n  var zr = ecIns._zr;\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    elCount++;\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.preventUsingHoverLayer) {\n        return;\n      }\n\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.__alive) {\n        chartView.group.traverse(function (el) {\n          // Don't switch back.\n          el.useHoverLayer = true;\n        });\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @class\n * Usage of query:\n * `chart.on('click', query, handler);`\n * The `query` can be:\n * + The component type query string, only `mainType` or `mainType.subType`,\n *   like: 'xAxis', 'series', 'xAxis.category' or 'series.line'.\n * + The component query object, like:\n *   `{seriesIndex: 2}`, `{seriesName: 'xx'}`, `{seriesId: 'some'}`,\n *   `{xAxisIndex: 2}`, `{xAxisName: 'xx'}`, `{xAxisId: 'some'}`.\n * + The data query object, like:\n *   `{dataIndex: 123}`, `{dataType: 'link'}`, `{name: 'some'}`.\n * + The other query object (cmponent customized query), like:\n *   `{element: 'some'}` (only available in custom series).\n *\n * Caveat: If a prop in the `query` object is `null/undefined`, it is the\n * same as there is no such prop in the `query` object.\n */\n\n\nfunction EventProcessor() {\n  // These info required: targetEl, packedEvent, model, view\n  this.eventInfo;\n}\n\nEventProcessor.prototype = {\n  constructor: EventProcessor,\n  normalizeQuery: function (query) {\n    var cptQuery = {};\n    var dataQuery = {};\n    var otherQuery = {}; // `query` is `mainType` or `mainType.subType` of component.\n\n    if (zrUtil.isString(query)) {\n      var condCptType = parseClassType(query); // `.main` and `.sub` may be ''.\n\n      cptQuery.mainType = condCptType.main || null;\n      cptQuery.subType = condCptType.sub || null;\n    } // `query` is an object, convert to {mainType, index, name, id}.\n    else {\n        // `xxxIndex`, `xxxName`, `xxxId`, `name`, `dataIndex`, `dataType` is reserved,\n        // can not be used in `compomentModel.filterForExposedEvent`.\n        var suffixes = ['Index', 'Name', 'Id'];\n        var dataKeys = {\n          name: 1,\n          dataIndex: 1,\n          dataType: 1\n        };\n        zrUtil.each(query, function (val, key) {\n          var reserved = false;\n\n          for (var i = 0; i < suffixes.length; i++) {\n            var propSuffix = suffixes[i];\n            var suffixPos = key.lastIndexOf(propSuffix);\n\n            if (suffixPos > 0 && suffixPos === key.length - propSuffix.length) {\n              var mainType = key.slice(0, suffixPos); // Consider `dataIndex`.\n\n              if (mainType !== 'data') {\n                cptQuery.mainType = mainType;\n                cptQuery[propSuffix.toLowerCase()] = val;\n                reserved = true;\n              }\n            }\n          }\n\n          if (dataKeys.hasOwnProperty(key)) {\n            dataQuery[key] = val;\n            reserved = true;\n          }\n\n          if (!reserved) {\n            otherQuery[key] = val;\n          }\n        });\n      }\n\n    return {\n      cptQuery: cptQuery,\n      dataQuery: dataQuery,\n      otherQuery: otherQuery\n    };\n  },\n  filter: function (eventType, query, args) {\n    // They should be assigned before each trigger call.\n    var eventInfo = this.eventInfo;\n\n    if (!eventInfo) {\n      return true;\n    }\n\n    var targetEl = eventInfo.targetEl;\n    var packedEvent = eventInfo.packedEvent;\n    var model = eventInfo.model;\n    var view = eventInfo.view; // For event like 'globalout'.\n\n    if (!model || !view) {\n      return true;\n    }\n\n    var cptQuery = query.cptQuery;\n    var dataQuery = query.dataQuery;\n    return check(cptQuery, model, 'mainType') && check(cptQuery, model, 'subType') && check(cptQuery, model, 'index', 'componentIndex') && check(cptQuery, model, 'name') && check(cptQuery, model, 'id') && check(dataQuery, packedEvent, 'name') && check(dataQuery, packedEvent, 'dataIndex') && check(dataQuery, packedEvent, 'dataType') && (!view.filterForExposedEvent || view.filterForExposedEvent(eventType, query.otherQuery, targetEl, packedEvent));\n\n    function check(query, host, prop, propOnHost) {\n      return query[prop] == null || host[propOnHost || prop] === query[prop];\n    }\n  },\n  afterTrigger: function () {\n    // Make sure the eventInfo wont be used in next trigger.\n    this.eventInfo = null;\n  }\n};\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Can choose 'canvas' or 'svg' to render the chart.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Array.<Object>|Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example GeoJSON\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n *\n *     $.get('airport.svg', function (svg) {\n *         echarts.registerMap('airport', {\n *             svg: svg\n *         }\n *     });\n *\n *     echarts.registerMap('eu', [\n *         {svg: eu-topographic.svg},\n *         {geoJSON: eu.json}\n *     ])\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  mapDataStorage.registerMap(mapName, geoJson, specialAreas);\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  // For backward compatibility, only return the first one.\n  var records = mapDataStorage.retrieveMap(mapName);\n  return records && records[0] && {\n    geoJson: records[0].geoJSON,\n    specialAreas: records[0].specialAreas\n  };\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}