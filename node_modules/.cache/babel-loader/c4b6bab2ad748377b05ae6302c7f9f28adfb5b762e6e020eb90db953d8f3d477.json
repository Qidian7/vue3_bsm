{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","map":{"version":3,"names":["echarts","require","globalListener","AxisPointerView","extendComponentView","type","render","globalAxisPointerModel","ecModel","api","globalTooltipModel","getComponent","triggerOn","get","register","currTrigger","e","dispatchAction","indexOf","x","offsetX","y","offsetY","remove","unregister","getZr","superApply","_model","arguments","dispose","_default","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/component/axisPointer/AxisPointerView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAe,CAAC;AAEtC,IAAIC,cAAc,GAAGD,OAAO,CAAC,kBAAkB,CAAC;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,eAAe,GAAGH,OAAO,CAACI,mBAAmB,CAAC;EAChDC,IAAI,EAAE,aAAa;EACnBC,MAAM,EAAE,SAAAA,CAAUC,sBAAsB,EAAEC,OAAO,EAAEC,GAAG,EAAE;IACtD,IAAIC,kBAAkB,GAAGF,OAAO,CAACG,YAAY,CAAC,SAAS,CAAC;IACxD,IAAIC,SAAS,GAAGL,sBAAsB,CAACM,GAAG,CAAC,WAAW,CAAC,IAAIH,kBAAkB,IAAIA,kBAAkB,CAACG,GAAG,CAAC,WAAW,CAAC,IAAI,iBAAiB,CAAC,CAAC;IAC3I;;IAEAX,cAAc,CAACY,QAAQ,CAAC,aAAa,EAAEL,GAAG,EAAE,UAAUM,WAAW,EAAEC,CAAC,EAAEC,cAAc,EAAE;MACpF;MACA,IAAIL,SAAS,KAAK,MAAM,KAAKG,WAAW,KAAK,OAAO,IAAIH,SAAS,CAACM,OAAO,CAACH,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE;QAC5FE,cAAc,CAAC;UACbZ,IAAI,EAAE,mBAAmB;UACzBU,WAAW,EAAEA,WAAW;UACxBI,CAAC,EAAEH,CAAC,IAAIA,CAAC,CAACI,OAAO;UACjBC,CAAC,EAAEL,CAAC,IAAIA,CAAC,CAACM;QACZ,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC;EAED;AACF;AACA;EACEC,MAAM,EAAE,SAAAA,CAAUf,OAAO,EAAEC,GAAG,EAAE;IAC9BP,cAAc,CAACsB,UAAU,CAACf,GAAG,CAACgB,KAAK,EAAE,EAAE,aAAa,CAAC;IACrDtB,eAAe,CAACuB,UAAU,CAAC,IAAI,CAACC,MAAM,EAAE,QAAQ,EAAEC,SAAS,CAAC;EAC9D,CAAC;EAED;AACF;AACA;EACEC,OAAO,EAAE,SAAAA,CAAUrB,OAAO,EAAEC,GAAG,EAAE;IAC/BP,cAAc,CAACsB,UAAU,CAAC,aAAa,EAAEf,GAAG,CAAC;IAC7CN,eAAe,CAACuB,UAAU,CAAC,IAAI,CAACC,MAAM,EAAE,SAAS,EAAEC,SAAS,CAAC;EAC/D;AACF,CAAC,CAAC;AACF,IAAIE,QAAQ,GAAG3B,eAAe;AAC9B4B,MAAM,CAACC,OAAO,GAAGF,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}