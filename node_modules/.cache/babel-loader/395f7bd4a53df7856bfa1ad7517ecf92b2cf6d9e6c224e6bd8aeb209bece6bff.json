{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n      var itemStyleList = ['opacity', 'symbol', 'symbolSize', 'symbolKeepAspect'];\n      for (var i = 0; i < itemStyleList.length; i++) {\n        var itemStyle = itemModel.getShallow(itemStyleList[i], true);\n        if (itemStyle != null) {\n          categoriesData.setItemVisual(idx, itemStyleList[i], itemStyle);\n        }\n      }\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n          var itemStyleList = ['color', 'opacity', 'symbol', 'symbolSize', 'symbolKeepAspect'];\n          for (var i = 0; i < itemStyleList.length; i++) {\n            if (data.getItemVisual(idx, itemStyleList[i], true) == null) {\n              data.setItemVisual(idx, itemStyleList[i], categoriesData.getItemVisual(category, itemStyleList[i]));\n            }\n          }\n        }\n      });\n    }\n  });\n}\nmodule.exports = _default;","map":{"version":3,"names":["_default","ecModel","paletteScope","eachSeriesByType","seriesModel","categoriesData","getCategoriesData","data","getData","categoryNameIdxMap","each","idx","name","getName","itemModel","getItemModel","color","get","getColorFromPalette","setItemVisual","itemStyleList","i","length","itemStyle","getShallow","count","model","category","getItemVisual","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/chart/graph/categoryVisual.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n      var itemStyleList = ['opacity', 'symbol', 'symbolSize', 'symbolKeepAspect'];\n\n      for (var i = 0; i < itemStyleList.length; i++) {\n        var itemStyle = itemModel.getShallow(itemStyleList[i], true);\n\n        if (itemStyle != null) {\n          categoriesData.setItemVisual(idx, itemStyleList[i], itemStyle);\n        }\n      }\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          var itemStyleList = ['color', 'opacity', 'symbol', 'symbolSize', 'symbolKeepAspect'];\n\n          for (var i = 0; i < itemStyleList.length; i++) {\n            if (data.getItemVisual(idx, itemStyleList[i], true) == null) {\n              data.setItemVisual(idx, itemStyleList[i], categoriesData.getItemVisual(category, itemStyleList[i]));\n            }\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQA,CAACC,OAAO,EAAE;EACzB,IAAIC,YAAY,GAAG,CAAC,CAAC;EACrBD,OAAO,CAACE,gBAAgB,CAAC,OAAO,EAAE,UAAUC,WAAW,EAAE;IACvD,IAAIC,cAAc,GAAGD,WAAW,CAACE,iBAAiB,EAAE;IACpD,IAAIC,IAAI,GAAGH,WAAW,CAACI,OAAO,EAAE;IAChC,IAAIC,kBAAkB,GAAG,CAAC,CAAC;IAC3BJ,cAAc,CAACK,IAAI,CAAC,UAAUC,GAAG,EAAE;MACjC,IAAIC,IAAI,GAAGP,cAAc,CAACQ,OAAO,CAACF,GAAG,CAAC,CAAC,CAAC;;MAExCF,kBAAkB,CAAC,KAAK,GAAGG,IAAI,CAAC,GAAGD,GAAG;MACtC,IAAIG,SAAS,GAAGT,cAAc,CAACU,YAAY,CAACJ,GAAG,CAAC;MAChD,IAAIK,KAAK,GAAGF,SAAS,CAACG,GAAG,CAAC,iBAAiB,CAAC,IAAIb,WAAW,CAACc,mBAAmB,CAACN,IAAI,EAAEV,YAAY,CAAC;MACnGG,cAAc,CAACc,aAAa,CAACR,GAAG,EAAE,OAAO,EAAEK,KAAK,CAAC;MACjD,IAAII,aAAa,GAAG,CAAC,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,kBAAkB,CAAC;MAE3E,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,aAAa,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;QAC7C,IAAIE,SAAS,GAAGT,SAAS,CAACU,UAAU,CAACJ,aAAa,CAACC,CAAC,CAAC,EAAE,IAAI,CAAC;QAE5D,IAAIE,SAAS,IAAI,IAAI,EAAE;UACrBlB,cAAc,CAACc,aAAa,CAACR,GAAG,EAAES,aAAa,CAACC,CAAC,CAAC,EAAEE,SAAS,CAAC;QAChE;MACF;IACF,CAAC,CAAC,CAAC,CAAC;;IAEJ,IAAIlB,cAAc,CAACoB,KAAK,EAAE,EAAE;MAC1BlB,IAAI,CAACG,IAAI,CAAC,UAAUC,GAAG,EAAE;QACvB,IAAIe,KAAK,GAAGnB,IAAI,CAACQ,YAAY,CAACJ,GAAG,CAAC;QAClC,IAAIgB,QAAQ,GAAGD,KAAK,CAACF,UAAU,CAAC,UAAU,CAAC;QAE3C,IAAIG,QAAQ,IAAI,IAAI,EAAE;UACpB,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;YAChCA,QAAQ,GAAGlB,kBAAkB,CAAC,KAAK,GAAGkB,QAAQ,CAAC;UACjD;UAEA,IAAIP,aAAa,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,kBAAkB,CAAC;UAEpF,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,aAAa,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;YAC7C,IAAId,IAAI,CAACqB,aAAa,CAACjB,GAAG,EAAES,aAAa,CAACC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE;cAC3Dd,IAAI,CAACY,aAAa,CAACR,GAAG,EAAES,aAAa,CAACC,CAAC,CAAC,EAAEhB,cAAc,CAACuB,aAAa,CAACD,QAAQ,EAAEP,aAAa,CAACC,CAAC,CAAC,CAAC,CAAC;YACrG;UACF;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;AACJ;AAEAQ,MAAM,CAACC,OAAO,GAAG9B,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}