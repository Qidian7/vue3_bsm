{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar _model = require(\"../../util/model\");\nvar makeInner = _model.makeInner;\nvar modelHelper = require(\"./modelHelper\");\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By default use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value,\n      // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n      if (!dataIndices.length) {\n        return;\n      }\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n      // If hide, value still need to be set, consider\n      // click legend to toggle axis blank.\n      !axisInfo.useHandle && (option.status = 'hide');\n    } // If status is 'hide', should be no info in payload.\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","_model","makeInner","modelHelper","findPointFromSeries","each","curry","inner","_default","payload","ecModel","api","currTrigger","point","x","y","finder","dispatchAction","bind","coordSysAxesInfo","getComponent","illegalPoint","seriesIndex","dataIndex","isIllegalPoint","inputAxesInfo","axesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","list","map","updaters","showPointer","showTooltip","coordSysMap","coordSys","coordSysKey","coordSysContainsPoint","containPoint","axisInfo","key","axis","inputAxisInfo","findInputAxisInfo","val","value","pointToData","processOnAxis","linkTriggers","tarAxisInfo","tarKey","linkGroup","srcAxisInfo","srcKey","srcValItem","mapper","scale","parse","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","isBlank","containData","involveSeries","payloadInfo","buildPayloadsBySeries","payloadBatch","snapToValue","extend","snap","dim","minDist","Number","MAX_VALUE","minDiff","seriesModels","series","idx","dataDim","getData","mapDimension","seriesNestestValue","dataIndices","getAxisTooltipData","result","nestestValue","indicesOfNearest","type","length","get","isFinite","diff","dist","Math","abs","push","dataIndexInside","getRawIndex","axisModel","model","axisPointerModel","triggerTooltip","coordSysModel","makeKey","coordSysItem","coordSysId","id","coordSysIndex","componentIndex","coordSysType","coordSysMainType","mainType","dataByAxis","axisDim","axisIndex","axisType","axisId","valueLabelOpt","precision","formatter","seriesDataIndices","slice","outputAxesInfo","option","valItem","useHandle","status","sampleItem","escapeConnect","tooltipOption","position","zr","getZr","highDownKey","lastHighlights","newHighlights","batchItem","toHighlight","toDownplay","batch","i","item","axisName","name","isNaN","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/component/axisPointer/axisTrigger.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By default use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}