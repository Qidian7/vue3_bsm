{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else if (methodName === 'allSelect' || methodName === 'inverseSelect') {\n      legendModel[methodName]();\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n      var isItemSelected = legendModel.isSelected(name);\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return methodName === 'allSelect' || methodName === 'inverseSelect' ? {\n    selected: selectedMap\n  } : {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\necharts.registerAction('legendAllSelect', 'legendselectall', zrUtil.curry(legendSelectActionHandler, 'allSelect'));\necharts.registerAction('legendInverseSelect', 'legendinverseselect', zrUtil.curry(legendSelectActionHandler, 'inverseSelect'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","map":{"version":3,"names":["echarts","require","zrUtil","legendSelectActionHandler","methodName","payload","ecModel","selectedMap","isToggleSelect","isSelected","eachComponent","legendModel","name","legendData","getData","each","model","get","isItemSelected","hasOwnProperty","selected","registerAction","curry"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/component/legend/legendAction.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else if (methodName === 'allSelect' || methodName === 'inverseSelect') {\n      legendModel[methodName]();\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return methodName === 'allSelect' || methodName === 'inverseSelect' ? {\n    selected: selectedMap\n  } : {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\necharts.registerAction('legendAllSelect', 'legendselectall', zrUtil.curry(legendSelectActionHandler, 'allSelect'));\necharts.registerAction('legendInverseSelect', 'legendinverseselect', zrUtil.curry(legendSelectActionHandler, 'inverseSelect'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAe,CAAC;AAEtC,IAAIC,MAAM,GAAGD,OAAO,CAAC,uBAAuB,CAAC;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,yBAAyBA,CAACC,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAC/D,IAAIC,WAAW,GAAG,CAAC,CAAC;EACpB,IAAIC,cAAc,GAAGJ,UAAU,KAAK,gBAAgB;EACpD,IAAIK,UAAU,CAAC,CAAC;;EAEhBH,OAAO,CAACI,aAAa,CAAC,QAAQ,EAAE,UAAUC,WAAW,EAAE;IACrD,IAAIH,cAAc,IAAIC,UAAU,IAAI,IAAI,EAAE;MACxC;MACA;MACA;MACA;MACAE,WAAW,CAACF,UAAU,GAAG,QAAQ,GAAG,UAAU,CAAC,CAACJ,OAAO,CAACO,IAAI,CAAC;IAC/D,CAAC,MAAM,IAAIR,UAAU,KAAK,WAAW,IAAIA,UAAU,KAAK,eAAe,EAAE;MACvEO,WAAW,CAACP,UAAU,CAAC,EAAE;IAC3B,CAAC,MAAM;MACLO,WAAW,CAACP,UAAU,CAAC,CAACC,OAAO,CAACO,IAAI,CAAC;MACrCH,UAAU,GAAGE,WAAW,CAACF,UAAU,CAACJ,OAAO,CAACO,IAAI,CAAC;IACnD;IAEA,IAAIC,UAAU,GAAGF,WAAW,CAACG,OAAO,EAAE;IACtCZ,MAAM,CAACa,IAAI,CAACF,UAAU,EAAE,UAAUG,KAAK,EAAE;MACvC,IAAIJ,IAAI,GAAGI,KAAK,CAACC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;;MAE9B,IAAIL,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,EAAE,EAAE;QAChC;MACF;MAEA,IAAIM,cAAc,GAAGP,WAAW,CAACF,UAAU,CAACG,IAAI,CAAC;MAEjD,IAAIL,WAAW,CAACY,cAAc,CAACP,IAAI,CAAC,EAAE;QACpC;QACAL,WAAW,CAACK,IAAI,CAAC,GAAGL,WAAW,CAACK,IAAI,CAAC,IAAIM,cAAc;MACzD,CAAC,MAAM;QACLX,WAAW,CAACK,IAAI,CAAC,GAAGM,cAAc;MACpC;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,CAAC,CAAC;;EAEJ,OAAOd,UAAU,KAAK,WAAW,IAAIA,UAAU,KAAK,eAAe,GAAG;IACpEgB,QAAQ,EAAEb;EACZ,CAAC,GAAG;IACFK,IAAI,EAAEP,OAAO,CAACO,IAAI;IAClBQ,QAAQ,EAAEb;EACZ,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGAP,OAAO,CAACqB,cAAc,CAAC,oBAAoB,EAAE,qBAAqB,EAAEnB,MAAM,CAACoB,KAAK,CAACnB,yBAAyB,EAAE,gBAAgB,CAAC,CAAC;AAC9HH,OAAO,CAACqB,cAAc,CAAC,iBAAiB,EAAE,iBAAiB,EAAEnB,MAAM,CAACoB,KAAK,CAACnB,yBAAyB,EAAE,WAAW,CAAC,CAAC;AAClHH,OAAO,CAACqB,cAAc,CAAC,qBAAqB,EAAE,qBAAqB,EAAEnB,MAAM,CAACoB,KAAK,CAACnB,yBAAyB,EAAE,eAAe,CAAC,CAAC;AAC9H;AACA;AACA;AACA;AACA;AACA;;AAEAH,OAAO,CAACqB,cAAc,CAAC,cAAc,EAAE,gBAAgB,EAAEnB,MAAM,CAACoB,KAAK,CAACnB,yBAAyB,EAAE,QAAQ,CAAC,CAAC;AAC3G;AACA;AACA;AACA;AACA;AACA;;AAEAH,OAAO,CAACqB,cAAc,CAAC,gBAAgB,EAAE,kBAAkB,EAAEnB,MAAM,CAACoB,KAAK,CAACnB,yBAAyB,EAAE,UAAU,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}