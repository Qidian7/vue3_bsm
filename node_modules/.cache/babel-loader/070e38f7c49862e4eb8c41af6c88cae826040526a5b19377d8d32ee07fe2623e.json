{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar graphic = require(\"../../util/graphic\");\nvar SymbolClz = require(\"../helper/Symbol\");\nvar _layoutHelper = require(\"./layoutHelper\");\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar echarts = require(\"../../echarts\");\nvar bbox = require(\"zrender/lib/core/bbox\");\nvar View = require(\"../../coord/View\");\nvar roamHelper = require(\"../../component/helper/roamHelper\");\nvar RoamController = require(\"../../component/helper/RoamController\");\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\nvar _config = require(\"../../config\");\nvar __DEV__ = _config.__DEV__;\nvar _number = require(\"../../util/number\");\nvar parsePercent = _number.parsePercent;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TreeShape = graphic.extendShape({\n  shape: {\n    parentPoint: [],\n    childPoints: [],\n    orient: '',\n    forkPosition: ''\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var childPoints = shape.childPoints;\n    var childLen = childPoints.length;\n    var parentPoint = shape.parentPoint;\n    var firstChildPos = childPoints[0];\n    var lastChildPos = childPoints[childLen - 1];\n    if (childLen === 1) {\n      ctx.moveTo(parentPoint[0], parentPoint[1]);\n      ctx.lineTo(firstChildPos[0], firstChildPos[1]);\n      return;\n    }\n    var orient = shape.orient;\n    var forkDim = orient === 'TB' || orient === 'BT' ? 0 : 1;\n    var otherDim = 1 - forkDim;\n    var forkPosition = parsePercent(shape.forkPosition, 1);\n    var tmpPoint = [];\n    tmpPoint[forkDim] = parentPoint[forkDim];\n    tmpPoint[otherDim] = parentPoint[otherDim] + (lastChildPos[otherDim] - parentPoint[otherDim]) * forkPosition;\n    ctx.moveTo(parentPoint[0], parentPoint[1]);\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.moveTo(firstChildPos[0], firstChildPos[1]);\n    tmpPoint[forkDim] = firstChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    tmpPoint[forkDim] = lastChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.lineTo(lastChildPos[0], lastChildPos[1]);\n    for (var i = 1; i < childLen - 1; i++) {\n      var point = childPoints[i];\n      ctx.moveTo(point[0], point[1]);\n      tmpPoint[forkDim] = point[forkDim];\n      ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    }\n  }\n});\nvar _default = echarts.extendChartView({\n  type: 'tree',\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    /**\n     * @private\n     * @type {module:echarts/componet/helper/RoamController}\n     */\n\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: this.group\n    };\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n    this._updateViewCoordSys(seriesModel, layoutInfo, layout);\n    this._updateController(seriesModel, ecModel, api);\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      edgeShape: seriesModel.get('edgeShape'),\n      edgeForkPosition: seriesModel.get('edgeForkPosition'),\n      orient: seriesModel.getOrient(),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // Create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // Update node and edge\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n      }\n    }).execute();\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    this._updateNodeAndLinkScale(seriesModel);\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n    this._data = data;\n  },\n  _updateViewCoordSys: function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    data.each(function (idx) {\n      var layout = data.getItemLayout(idx);\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\n        points.push([+layout.x, +layout.y]);\n      }\n    });\n    var min = [];\n    var max = [];\n    bbox.fromPoints(points, min, max); // If don't Store min max when collapse the root node after roam,\n    // the root node will disappear.\n\n    var oldMin = this._min;\n    var oldMax = this._max; // If width or height is 0\n\n    if (max[0] - min[0] === 0) {\n      min[0] = oldMin ? oldMin[0] : min[0] - 1;\n      max[0] = oldMax ? oldMax[0] : max[0] + 1;\n    }\n    if (max[1] - min[1] === 0) {\n      min[1] = oldMin ? oldMin[1] : min[1] - 1;\n      max[1] = oldMax ? oldMax[1] : max[1] + 1;\n    }\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    viewCoordSys.setCenter(seriesModel.get('center'));\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\n\n    this.group.attr({\n      position: viewCoordSys.position,\n      scale: viewCoordSys.scale\n    });\n    this._viewCoordSys = viewCoordSys;\n    this._min = min;\n    this._max = max;\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }, this).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n      this._updateNodeAndLinkScale(seriesModel);\n    }, this);\n  },\n  _updateNodeAndLinkScale: function (seriesModel) {\n    var data = seriesModel.getData();\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  remove: function () {\n    this._mainGroup.removeAll();\n    this._data = null;\n  }\n});\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n  return seriesScope;\n}\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n      isLeft = center.x < rootLayout.x;\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n    var textPosition = isLeft ? 'left' : 'right';\n    var rotate = seriesScope.labelModel.get('rotate');\n    var labelRotateRadian = rotate * (Math.PI / 180);\n    symbolPath.setStyle({\n      textPosition: seriesScope.labelModel.get('position') || textPosition,\n      textRotation: rotate == null ? -rad : labelRotateRadian,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n  drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group, seriesScope);\n}\nfunction drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group, seriesScope) {\n  var edgeShape = seriesScope.edgeShape;\n  var edge = symbolEl.__edge;\n  if (edgeShape === 'curve') {\n    if (node.parentNode && node.parentNode !== virtualRoot) {\n      if (!edge) {\n        edge = symbolEl.__edge = new graphic.BezierCurve({\n          shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n          style: zrUtil.defaults({\n            opacity: 0,\n            strokeNoScale: true\n          }, seriesScope.lineStyle)\n        });\n      }\n      graphic.updateProps(edge, {\n        shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n        style: zrUtil.defaults({\n          opacity: 1\n        }, seriesScope.lineStyle)\n      }, seriesModel);\n    }\n  } else if (edgeShape === 'polyline') {\n    if (seriesScope.layout === 'orthogonal') {\n      if (node !== virtualRoot && node.children && node.children.length !== 0 && node.isExpand === true) {\n        var children = node.children;\n        var childPoints = [];\n        for (var i = 0; i < children.length; i++) {\n          var childLayout = children[i].getLayout();\n          childPoints.push([childLayout.x, childLayout.y]);\n        }\n        if (!edge) {\n          edge = symbolEl.__edge = new TreeShape({\n            shape: {\n              parentPoint: [targetLayout.x, targetLayout.y],\n              childPoints: [[targetLayout.x, targetLayout.y]],\n              orient: seriesScope.orient,\n              forkPosition: seriesScope.edgeForkPosition\n            },\n            style: zrUtil.defaults({\n              opacity: 0,\n              strokeNoScale: true\n            }, seriesScope.lineStyle)\n          });\n        }\n        graphic.updateProps(edge, {\n          shape: {\n            parentPoint: [targetLayout.x, targetLayout.y],\n            childPoints: childPoints\n          },\n          style: zrUtil.defaults({\n            opacity: 1\n          }, seriesScope.lineStyle)\n        }, seriesModel);\n      }\n    } else {}\n  }\n  group.add(edge);\n}\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var edgeShape = seriesScope.edgeShape;\n  var sourceLayout;\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceEdge = sourceSymbolEl.__edge; // 1. when expand the sub tree, delete the children node should delete the edge of\n  // the source at the same time. because the polyline edge shape is only owned by the source.\n  // 2.when the node is the only children of the source, delete the node should delete the edge of\n  // the source at the same time. the same reason as above.\n\n  var edge = symbolEl.__edge || (source.isExpand === false || source.children.length === 1 ? sourceEdge : undefined);\n  var edgeShape = seriesScope.edgeShape;\n  if (edge) {\n    if (edgeShape === 'curve') {\n      graphic.updateProps(edge, {\n        shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, function () {\n        group.remove(edge);\n      });\n    } else if (edgeShape === 'polyline' && seriesScope.layout === 'orthogonal') {\n      graphic.updateProps(edge, {\n        shape: {\n          parentPoint: [sourceLayout.x, sourceLayout.y],\n          childPoints: [[sourceLayout.x, sourceLayout.y]]\n        },\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, function () {\n        group.remove(edge);\n      });\n    }\n  }\n}\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n  var x1;\n  var x2;\n  var y1;\n  var y2;\n  if (seriesScope.layout === 'radial') {\n    x1 = sourceLayout.rawX;\n    y1 = sourceLayout.rawY;\n    x2 = targetLayout.rawX;\n    y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    x1 = sourceLayout.x;\n    y1 = sourceLayout.y;\n    x2 = targetLayout.x;\n    y2 = targetLayout.y;\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n  }\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    cpx1: cpx1,\n    cpy1: cpy1,\n    cpx2: cpx2,\n    cpy2: cpy2\n  };\n}\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","graphic","SymbolClz","_layoutHelper","radialCoordinate","echarts","bbox","View","roamHelper","RoamController","_cursorHelper","onIrrelevantElement","_config","__DEV__","_number","parsePercent","TreeShape","extendShape","shape","parentPoint","childPoints","orient","forkPosition","style","stroke","fill","buildPath","ctx","childLen","length","firstChildPos","lastChildPos","moveTo","lineTo","forkDim","otherDim","tmpPoint","i","point","_default","extendChartView","type","init","ecModel","api","_oldTree","_mainGroup","Group","_controller","getZr","_controllerHost","target","group","add","render","seriesModel","payload","data","getData","layoutInfo","layout","get","attr","x","width","y","height","_updateViewCoordSys","_updateController","oldData","_data","seriesScope","expandAndCollapse","edgeShape","edgeForkPosition","getOrient","curvature","symbolRotate","symbolOffset","hoverAnimation","useNameLabel","fadeIn","diff","newIdx","symbolNeedsDraw","updateNode","update","oldIdx","symbolEl","getItemGraphicEl","removeNode","remove","execute","_nodeScaleRatio","_updateNodeAndLinkScale","eachItemGraphicEl","el","dataIndex","off","on","dispatchAction","seriesId","id","points","each","idx","getItemLayout","isNaN","push","min","max","fromPoints","oldMin","_min","oldMax","_max","viewCoordSys","coordinateSystem","zoomLimit","setBoundingRect","setCenter","setZoom","position","scale","_viewCoordSys","controller","controllerHost","setPointerChecker","e","rect","getBoundingRect","applyTransform","transform","contain","enable","zoom","getZoom","updateViewOnPan","dx","dy","updateViewOnZoom","originX","originY","nodeScale","_getNodeGlobalScale","invScale","coordSys","nodeScaleRatio","groupScale","groupZoom","roamZoom","dispose","removeAll","getItemVisual","getTreeNodeStyle","node","itemModel","itemStyle","getModel","getItemStyle","hoverItemStyle","lineStyle","getLineStyle","labelModel","hoverLabelModel","isExpand","children","symbolInnerColor","isInit","tree","getNodeByDataIndex","virtualRoot","root","source","parentNode","sourceSymbolEl","sourceLayout","getLayout","sourceOldLayout","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","updateData","__radialRawX","__radialRawY","setItemGraphicEl","updateProps","symbolPath","getSymbolPath","realRoot","rootLayout","rad","isLeft","center","Math","atan2","PI","textPosition","rotate","labelRotateRadian","setStyle","textRotation","textOrigin","verticalAlign","drawEdge","edge","__edge","BezierCurve","getEdgeShape","defaults","opacity","strokeNoScale","childLayout","fadeOut","keepLabel","sourceEdge","undefined","cpx1","cpy1","cpx2","cpy2","x1","x2","y1","y2","radialCoor1","radialCoor2","radialCoor3","radialCoor4","module","exports"],"sources":["/Users/mac/Desktop/vue_bsm/vue3_bsm/node_modules/echarts/lib/chart/tree/TreeView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar View = require(\"../../coord/View\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TreeShape = graphic.extendShape({\n  shape: {\n    parentPoint: [],\n    childPoints: [],\n    orient: '',\n    forkPosition: ''\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var childPoints = shape.childPoints;\n    var childLen = childPoints.length;\n    var parentPoint = shape.parentPoint;\n    var firstChildPos = childPoints[0];\n    var lastChildPos = childPoints[childLen - 1];\n\n    if (childLen === 1) {\n      ctx.moveTo(parentPoint[0], parentPoint[1]);\n      ctx.lineTo(firstChildPos[0], firstChildPos[1]);\n      return;\n    }\n\n    var orient = shape.orient;\n    var forkDim = orient === 'TB' || orient === 'BT' ? 0 : 1;\n    var otherDim = 1 - forkDim;\n    var forkPosition = parsePercent(shape.forkPosition, 1);\n    var tmpPoint = [];\n    tmpPoint[forkDim] = parentPoint[forkDim];\n    tmpPoint[otherDim] = parentPoint[otherDim] + (lastChildPos[otherDim] - parentPoint[otherDim]) * forkPosition;\n    ctx.moveTo(parentPoint[0], parentPoint[1]);\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.moveTo(firstChildPos[0], firstChildPos[1]);\n    tmpPoint[forkDim] = firstChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    tmpPoint[forkDim] = lastChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.lineTo(lastChildPos[0], lastChildPos[1]);\n\n    for (var i = 1; i < childLen - 1; i++) {\n      var point = childPoints[i];\n      ctx.moveTo(point[0], point[1]);\n      tmpPoint[forkDim] = point[forkDim];\n      ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    }\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    /**\n     * @private\n     * @type {module:echarts/componet/helper/RoamController}\n     */\n\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: this.group\n    };\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    this._updateViewCoordSys(seriesModel, layoutInfo, layout);\n\n    this._updateController(seriesModel, ecModel, api);\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      edgeShape: seriesModel.get('edgeShape'),\n      edgeForkPosition: seriesModel.get('edgeForkPosition'),\n      orient: seriesModel.getOrient(),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // Create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // Update node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n      }\n    }).execute();\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n\n    this._updateNodeAndLinkScale(seriesModel);\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  _updateViewCoordSys: function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    data.each(function (idx) {\n      var layout = data.getItemLayout(idx);\n\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\n        points.push([+layout.x, +layout.y]);\n      }\n    });\n    var min = [];\n    var max = [];\n    bbox.fromPoints(points, min, max); // If don't Store min max when collapse the root node after roam,\n    // the root node will disappear.\n\n    var oldMin = this._min;\n    var oldMax = this._max; // If width or height is 0\n\n    if (max[0] - min[0] === 0) {\n      min[0] = oldMin ? oldMin[0] : min[0] - 1;\n      max[0] = oldMax ? oldMax[0] : max[0] + 1;\n    }\n\n    if (max[1] - min[1] === 0) {\n      min[1] = oldMin ? oldMin[1] : min[1] - 1;\n      max[1] = oldMax ? oldMax[1] : max[1] + 1;\n    }\n\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    viewCoordSys.setCenter(seriesModel.get('center'));\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\n\n    this.group.attr({\n      position: viewCoordSys.position,\n      scale: viewCoordSys.scale\n    });\n    this._viewCoordSys = viewCoordSys;\n    this._min = min;\n    this._max = max;\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }, this).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      this._updateNodeAndLinkScale(seriesModel);\n    }, this);\n  },\n  _updateNodeAndLinkScale: function (seriesModel) {\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    var rotate = seriesScope.labelModel.get('rotate');\n    var labelRotateRadian = rotate * (Math.PI / 180);\n    symbolPath.setStyle({\n      textPosition: seriesScope.labelModel.get('position') || textPosition,\n      textRotation: rotate == null ? -rad : labelRotateRadian,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group, seriesScope);\n}\n\nfunction drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group, seriesScope) {\n  var edgeShape = seriesScope.edgeShape;\n  var edge = symbolEl.__edge;\n\n  if (edgeShape === 'curve') {\n    if (node.parentNode && node.parentNode !== virtualRoot) {\n      if (!edge) {\n        edge = symbolEl.__edge = new graphic.BezierCurve({\n          shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n          style: zrUtil.defaults({\n            opacity: 0,\n            strokeNoScale: true\n          }, seriesScope.lineStyle)\n        });\n      }\n\n      graphic.updateProps(edge, {\n        shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n        style: zrUtil.defaults({\n          opacity: 1\n        }, seriesScope.lineStyle)\n      }, seriesModel);\n    }\n  } else if (edgeShape === 'polyline') {\n    if (seriesScope.layout === 'orthogonal') {\n      if (node !== virtualRoot && node.children && node.children.length !== 0 && node.isExpand === true) {\n        var children = node.children;\n        var childPoints = [];\n\n        for (var i = 0; i < children.length; i++) {\n          var childLayout = children[i].getLayout();\n          childPoints.push([childLayout.x, childLayout.y]);\n        }\n\n        if (!edge) {\n          edge = symbolEl.__edge = new TreeShape({\n            shape: {\n              parentPoint: [targetLayout.x, targetLayout.y],\n              childPoints: [[targetLayout.x, targetLayout.y]],\n              orient: seriesScope.orient,\n              forkPosition: seriesScope.edgeForkPosition\n            },\n            style: zrUtil.defaults({\n              opacity: 0,\n              strokeNoScale: true\n            }, seriesScope.lineStyle)\n          });\n        }\n\n        graphic.updateProps(edge, {\n          shape: {\n            parentPoint: [targetLayout.x, targetLayout.y],\n            childPoints: childPoints\n          },\n          style: zrUtil.defaults({\n            opacity: 1\n          }, seriesScope.lineStyle)\n        }, seriesModel);\n      }\n    } else {}\n  }\n\n  group.add(edge);\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var edgeShape = seriesScope.edgeShape;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceEdge = sourceSymbolEl.__edge; // 1. when expand the sub tree, delete the children node should delete the edge of\n  // the source at the same time. because the polyline edge shape is only owned by the source.\n  // 2.when the node is the only children of the source, delete the node should delete the edge of\n  // the source at the same time. the same reason as above.\n\n  var edge = symbolEl.__edge || (source.isExpand === false || source.children.length === 1 ? sourceEdge : undefined);\n  var edgeShape = seriesScope.edgeShape;\n\n  if (edge) {\n    if (edgeShape === 'curve') {\n      graphic.updateProps(edge, {\n        shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, function () {\n        group.remove(edge);\n      });\n    } else if (edgeShape === 'polyline' && seriesScope.layout === 'orthogonal') {\n      graphic.updateProps(edge, {\n        shape: {\n          parentPoint: [sourceLayout.x, sourceLayout.y],\n          childPoints: [[sourceLayout.x, sourceLayout.y]]\n        },\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, function () {\n        group.remove(edge);\n      });\n    }\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n  var x1;\n  var x2;\n  var y1;\n  var y2;\n\n  if (seriesScope.layout === 'radial') {\n    x1 = sourceLayout.rawX;\n    y1 = sourceLayout.rawY;\n    x2 = targetLayout.rawX;\n    y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    x1 = sourceLayout.x;\n    y1 = sourceLayout.y;\n    x2 = targetLayout.x;\n    y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n  }\n\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    cpx1: cpx1,\n    cpy1: cpy1,\n    cpx2: cpx2,\n    cpy2: cpy2\n  };\n}\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}